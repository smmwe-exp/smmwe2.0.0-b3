<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_floruga_head</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var b;
if (global.apariencia == 0)
{
    sprite_index = spr_SMB_floruga_head
    sprite_wings = 369
}
else if (global.apariencia == 1)
{
    sprite_index = spr_SMB3_floruga_head
    sprite_wings = 1061
}
else if (global.apariencia == 2)
{
    sprite_index = spr_floruga_head
    sprite_wings = 1926
}
hardness = 1
stomp = 5
edible = 2
wings = 0
wings_anim = 0
jump_wings = 0
paracaidas = 0
modo_lava = 0
dead_h = 0
direct = -1
innave = 0
swimming = 0
apilar = 0
obj_apilar = ""
obj_apilar_wings = 0
apilado = 0
my_apilar = 0
image_speed = 0.125
alarm[10] = 2
state = 0
color = 0
seg = 5
for (b = 1; b &lt; seg; b++)
{
    mybody[b] = instance_create(xstart, ystart, obj_floruga_body)
    mybody[b].image_speed = 0.125
    mybody[b].image_index = b
    mybody[b].depth = (0 + b)
    mybody[b].parent = id
    if (b == 1)
        mybody[b].prevsegment = other.id
    else
        mybody[b].prevsegment = (mybody[b] - 1)
}
closeness = 16
amount_previous = 85
closeness_h = 16
closeness_v = 16
for (i = 1; i &lt; amount_previous; i++)
{
    oldx[i] = x
    oldy[i] = y
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i = 1; i &lt; seg; i++)
{
    with (mybody[i])
        instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((!outside_view()) &amp;&amp; (gravity == 0))
{
    if (state == 2)
    {
        if (global.apariencia == 0)
            sprite_index = spr_SMB_floruga_angry_head
        else if (global.apariencia == 1)
            sprite_index = spr_SMB3_floruga_angry_head
        else if (global.apariencia == 2)
            sprite_index = spr_floruga_angry_head
        for (i = 1; i &lt; seg; i++)
        {
            if (global.apariencia == 0)
                mybody[i].sprite_index = spr_SMB_floruga_angry_body
            else if (global.apariencia == 1)
                mybody[i].sprite_index = spr_SMB3_floruga_angry_body
            else if (global.apariencia == 2)
                mybody[i].sprite_index = spr_floruga_angry_body
        }
    }
    moving = 1
    for (i = 0; i &lt; 4; i++)
    {
        with (mybody[i])
            direct = -1
    }
    event_inherited()
    event_user(15)
}
else
    alarm[10] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (state == 1)
{
    alarm[1] = 2
    color++
    if (color &gt; 8)
        color = 0
}
else
    color = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_mario)
{
    if ((obj_mario.x &lt; x) &amp;&amp; (hspeed &gt; 0))
    {
        hspeed = -1
        alarm[0] = 40
    }
    else if ((obj_mario.x &gt; x) &amp;&amp; (hspeed &lt; 0))
    {
        hspeed = 1
        alarm[0] = 40
    }
    else
        alarm[0] = 40
}
else
    alarm[0] = 1
image_speed = 0.27
speed = 1
state = 2
for (i = 1; i &lt; seg; i++)
    mybody[i].image_speed = 0.27
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i = 1; i &lt; seg; i++)
{
    if (!instance_exists(mybody[i]))
        instance_activate_object(mybody[i])
}
if (speed == 0)
    exit
for (i = 1; i &lt; seg; i++)
{
    if instance_exists(mybody[i])
        mybody[i].x = oldx[(i * closeness)]
}
oldx[0] = x
oldy[0] = y
for (i = amount_previous; i &gt; 0; i--)
    oldx[i] = oldx[(i - 0.001)]
if (wings == 1)
{
    for (i = amount_previous; i &gt; 0; i--)
        oldy[i] = oldy[(i - 0.001)]
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
if (wings == 0)
    event_user(6)
if ((wings == 1) &amp;&amp; (paracaidas == 0))
{
    wings_anim += 0.12
    if (gravity == 0)
    {
        if (swimming == 1)
            vspeed = -2.062
        else
            vspeed = -4.125
    }
}
if (paracaidas == 1)
{
    direct = -1
    if (x &gt; (xstart + 16))
    {
        if (hspeed &lt; -0.5)
            hspeed = -0.5
        else
            hspeed -= 0.015
    }
    else if (x &lt; (xstart - 16))
    {
        if (hspeed &gt; 0.5)
            hspeed = 0.5
        else
            hspeed += 0.015
    }
    if (gravity == 0)
    {
        instance_create((x + (3 * direct)), y, obj_paracaidas_go)
        paracaidas = 0
        hspeed = 0
        alarm[10] = 10
    }
}
if (hspeed &gt; 0)
    direct = 1
else if (hspeed &lt; 0)
    direct = -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (gravity == 0)
{
    if (hspeed &lt; 0)
    {
        if ((!collision_rectangle((bbox_left + 3), (bbox_bottom - 1), (bbox_left + 3), (bbox_bottom + 12), obj_solidtop, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left + 3), (bbox_bottom - 1), (bbox_left + 3), (bbox_bottom + 12), obj_slopeparent, 0, 0)))
        {
            hspeed = (-hspeed)
            x = xprevious
            if (state == 1)
                alarm[1] = 40
        }
    }
    else if (hspeed &gt; 0)
    {
        if ((!collision_rectangle((bbox_right - 3), (bbox_bottom - 1), (bbox_right - 3), (bbox_bottom + 12), obj_solidtop, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_right - 3), (bbox_bottom - 1), (bbox_right - 3), (bbox_bottom + 12), obj_slopeparent, 0, 0)))
        {
            hspeed = (-hspeed)
            x = xprevious
            if (state == 1)
                alarm[1] = 40
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var pow_right, pow_left, col_one_left, col_one_right;
pow_right = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_block_pow_hold, 0, 0)
pow_left = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_block_pow_hold, 0, 0)
if (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 0, 0)) || ((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solid, 0, 0)))
{
    if (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_spring_land, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_spring_land, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_enemyparent_held, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_enemyparent_held, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_muncher, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_muncher, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_pswitch, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_pswitch, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_pinchos, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_pinchos, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; (pow_right &amp;&amp; (pow_right.held == 0))) || (((hspeed &lt; 0) &amp;&amp; (pow_left &amp;&amp; (pow_left.held == 0))) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_cannon, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_cannon, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)) || ((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)))))))))))))))))))
    {
        col_one_left = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)
        col_one_right = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)
        if ((hspeed &gt; 0) &amp;&amp; col_one_left)
        {
            if (!audio_is_playing(snd_oneway))
                audio_play_sound(snd_oneway, 0, false)
            with (col_one_left)
                rot = 1
        }
        if ((hspeed &lt; 0) &amp;&amp; col_one_right)
        {
            if (!audio_is_playing(snd_oneway))
                audio_play_sound(snd_oneway, 0, false)
            with (col_one_right)
                rot = 1
        }
        if ((object_index == obj_galoomba_hold) || (object_index == obj_bobomb_hold))
            direct = (-direct)
        hspeed = (-hspeed)
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_solid, 1, 0)
            x--
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solid, 1, 0)
            x++
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_block_pow_hold, 1, 0)
            x--
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_block_pow_hold, 1, 0)
            x++
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_muncher, 1, 0)
            x--
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_muncher, 1, 0)
            x++
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_pinchos, 1, 0)
            x--
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_pinchos, 1, 0)
            x++
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
            x--
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
            x++
        while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_onewaygate_left, 1, 0)
            x--
        while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 1, 0)
            x++
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hspeed &gt; 0)
{
    if ((collision_rectangle(bbox_right, bbox_top, (bbox_right + (hspeed * 2)), bbox_bottom, obj_enemyparent, 0, 1) || collision_rectangle(bbox_right, bbox_top, (bbox_right + (hspeed * 2)), bbox_bottom, obj_enemyparent_held, 0, 1)) &amp;&amp; (!collision_rectangle(bbox_right, bbox_top, (bbox_right + (hspeed * 2)), bbox_bottom, obj_floruga_body, 0, 1)))
        hspeed = (-hspeed)
}
else if (hspeed &lt; 0)
{
    if ((collision_rectangle((bbox_left - (hspeed * 2)), bbox_top, bbox_left, bbox_bottom, obj_enemyparent, 0, 1) || collision_rectangle((bbox_left - (hspeed * 2)), bbox_top, bbox_left, bbox_bottom, obj_enemyparent_held, 0, 1)) &amp;&amp; (!collision_rectangle((bbox_left - (hspeed * 2)), bbox_top, bbox_left, bbox_bottom, obj_floruga_body, 0, 1)))
        hspeed = (-hspeed)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (state == 0)
{
    with (instance_create((((bbox_left + bbox_right) / 2) - 8), y, obj_score))
        event_user(0)
    with (instance_create(x, y, obj_enemy_dead))
    {
        sprite_index = spr_wiggler_flower
        image_index = global.apariencia
        image_speed = 0
        direct = other.direct
    }
    speed = 0
    state = 1
    closeness = 8
    if (global.apariencia == 0)
        sprite_index = spr_SMB_floruga_angry_head
    else if (global.apariencia == 1)
        sprite_index = spr_SMB3_floruga_angry_head
    else if (global.apariencia == 2)
        sprite_index = spr_floruga_angry_head
    image_speed = 0
    for (i = 1; i &lt; seg; i++)
    {
        mybody[i].image_speed = 0
        if (global.apariencia == 0)
            mybody[i].sprite_index = spr_SMB_floruga_angry_body
        else if (global.apariencia == 1)
            mybody[i].sprite_index = spr_SMB3_floruga_angry_body
        else if (global.apariencia == 2)
            mybody[i].sprite_index = spr_floruga_angry_body
    }
    amount_previous = 85
    alarm[1] = 1
    alarm[0] = 65
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>imdead = instance_create(x, y, obj_enemy_dead)
imdead.sprite_index = sprite_index
imdead.direct = direct
imdead.hspeed = 0
imdead.vspeed = -4
multidead = instance_create(x, y, obj_enemy_multidead)
with (multidead)
{
    count = 4
    direct = other.direct
    if (other.sprite_index == spr_floruga_head)
        sprite_index = spr_floruga_body
    else if (other.sprite_index == spr_SMB3_floruga_head)
        sprite_index = spr_SMB3_floruga_body
    else if (other.sprite_index == spr_SMB_floruga_head)
        sprite_index = spr_SMB_floruga_body
    else if (global.apariencia == 0)
        sprite_index = spr_SMB_floruga_angry_body
    else if (global.apariencia == 1)
        sprite_index = spr_SMB3_floruga_angry_body
    else if (global.apariencia == 2)
        sprite_index = spr_floruga_angry_body
}
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, -1, round(x), y, direct, 1, 0, c_white, 1)
if (paracaidas == 1)
    draw_sprite_ext(spr_paracaidas, global.apariencia, x, y, 1, 1, image_angle, c_white, 1)
if (wings == 1)
{
    if (direct == 1)
        draw_sprite_ext(sprite_wings, wings_anim, (x - 12), (y - 20), direct, 1, 0, c_white, 1)
    else
        draw_sprite_ext(sprite_wings, wings_anim, (x + 12), (y - 20), direct, 1, 0, c_white, 1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
