<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_thwomp</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.apariencia == 0)
    sprite_index = spr_SMB_thwomp
else if (global.apariencia == 1)
    sprite_index = spr_SMB3_thwomp
hardness = 99
stomp = 2
edible = 2
image_speed = 0
modo_lava = 0
wings = 0
wings_anim = 0
paracaidas = 0
speed_max = 0
apilar = 0
big = 0
dead_h = 1
salpi = 0
salpicadura = 0
ready = 0
ready_block = 0
direct_t = 1
direct = 1
swimming = 0
cont_spring = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (wings == 1)
{
    wings = 0
    with (instance_create((x - 19), (y - 26), obj_wings_dead))
        direct = 1
    with (instance_create((x + 19), (y - 26), obj_wings_dead))
        direct = -1
    with (w_wings)
        instance_destroy()
    w_wings = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (salpicadura == 1)
{
    if instance_exists(obj_lava_water)
    {
        if (obj_lava_water.vspeed != 0)
        {
            if ((global.bg_level != "forest") &amp;&amp; (!audio_is_playing(snd_podoboo)))
                audio_play_sound(snd_podoboo, 0, false)
            if ((global.bg_level == "forest") &amp;&amp; (global.modo_noche == 1))
            {
                with (instance_create((x - 16), (obj_lava_water.y - 16), obj_smoke))
                {
                    if (global.apariencia == 1)
                        sprite_index = spr_SMB3_megasplash_lava_purple
                    else if (global.apariencia == 2)
                        sprite_index = spr_megasplash_lava_purple
                    depth = -9
                }
                with (instance_create((x + 16), (obj_lava_water.y - 16), obj_smoke))
                {
                    if (global.apariencia == 1)
                        sprite_index = spr_SMB3_megasplash_lava_purple
                    else if (global.apariencia == 2)
                        sprite_index = spr_megasplash_lava_purple
                    depth = -9
                }
            }
            else if (global.bg_level == "forest")
            {
                with (instance_create((x - 16), (obj_lava_water.y - 16), obj_smoke))
                {
                    if (global.apariencia == 1)
                        sprite_index = spr_SMB3_megasplash_water
                    else if (global.apariencia == 2)
                        sprite_index = spr_megasplash_water
                    depth = -9
                }
                with (instance_create((x + 16), (obj_lava_water.y - 16), obj_smoke))
                {
                    if (global.apariencia == 1)
                        sprite_index = spr_SMB3_megasplash_water
                    else if (global.apariencia == 2)
                        sprite_index = spr_megasplash_water
                    depth = -9
                }
            }
            else
            {
                with (instance_create((x - 16), (obj_lava_water.y - 16), obj_smoke))
                {
                    if (global.apariencia == 1)
                        sprite_index = spr_SMB3_megasplash_lava
                    else if (global.apariencia == 2)
                        sprite_index = spr_megasplash_lava
                    depth = -9
                }
                with (instance_create((x + 16), (obj_lava_water.y - 16), obj_smoke))
                {
                    if (global.apariencia == 1)
                        sprite_index = spr_SMB3_megasplash_lava
                    else if (global.apariencia == 2)
                        sprite_index = spr_megasplash_lava
                    depth = -9
                }
            }
            alarm[1] = 12
        }
        else
            alarm[1] = 1
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ready = 3
if (direct_t == 1)
{
    if (swimming == 1)
        vspeed = -0.5
    else
        vspeed = -1
}
else if (direct_t == 2)
{
    if (swimming == 1)
        hspeed = 0.5
    else
        hspeed = 1
}
else if (direct_t == 3)
{
    if (swimming == 1)
        hspeed = -0.5
    else
        hspeed = -1
}
image_index = 0
image_xscale = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var check;
if ((instance_exists(obj_mario) &amp;&amp; (global.yoshi &gt; 0)) || (instance_exists(obj_mario) &amp;&amp; ((obj_mario.invincible == 1) &amp;&amp; (!instance_exists(obj_invincibility)))))
{
    if (collision_rectangle(bbox_left, (bbox_top - 5), bbox_right, (bbox_top + 4), obj_mario, 0, 0) &amp;&amp; ((obj_mario.bbox_bottom &lt; (yprevious + 5)) &amp;&amp; (obj_mario.state &lt; 2)))
    {
        check = collision_rectangle(obj_mario.bbox_left, (obj_mario.bbox_bottom - 1), obj_mario.bbox_right, obj_mario.bbox_bottom, obj_solidtop, 0, 1)
        if (check || collision_rectangle(obj_mario.bbox_left, (obj_mario.bbox_bottom - 1), obj_mario.bbox_right, (obj_mario.bbox_bottom + 1), obj_quicksand, 0, 0))
            exit
        obj_mario.y = ceil((bbox_top - 31))
        obj_mario.x += (x - xprevious)
        if collision_rectangle(obj_mario.bbox_right, (obj_mario.bbox_top + 4), (obj_mario.bbox_right + 1), (obj_mario.bbox_bottom - 1), obj_solid, 0, 0)
        {
            with (obj_mario)
                x--
        }
        else if collision_rectangle((obj_mario.bbox_left - 1), (obj_mario.bbox_top + 4), obj_mario.bbox_left, (obj_mario.bbox_bottom - 1), obj_solid, 0, 0)
        {
            with (obj_mario)
                x++
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var wing_c, col_flip, col_block_n, col_pow, col_spring, col_helmet, col_not_spiny, col_nube, overlap, col_oneway;
if (collision_rectangle(bbox_left, (bbox_top + 2), bbox_right, (bbox_bottom - 1), obj_lava_water, 0, 0) &amp;&amp; (global.apariencia != 0))
{
    if (salpi == 0)
    {
        salpicadura = 1
        salpi = 1
        alarm[1] = 1
    }
}
else
{
    salpi = 0
    salpicadura = 0
}
if ((global.bg_level == "underwater") || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "airship")) || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "sky")) || (instance_exists(obj_lava_water) &amp;&amp; ((y &gt;= obj_lava_water.y) &amp;&amp; ((global.bg_level == "forest") &amp;&amp; (global.modo_noche == 0)))))))
    swimming = 1
else
    swimming = 0
if (wings == 1)
{
    if (w_wings == obj_lighting)
    {
        wing_c = instance_create(x, y, obj_wings)
        wing_c.thwomp = 1
        w_wings = wing_c.id
    }
    if instance_exists(w_wings)
    {
        if ((direct_t == 2) &amp;&amp; (image_index == 2))
            w_wings.x = (x - 2)
        else
            w_wings.x = x
        w_wings.y = (y - 8)
        w_wings.depth = (depth - 1)
    }
    if (direct_t == 1)
    {
        if (ready == 0)
        {
            if (x &gt; (xstart + 16))
            {
                if (hspeed &lt; -0.5)
                    hspeed = -0.5
                else
                    hspeed -= 0.03
            }
            else if (x &lt; (xstart - 16))
            {
                if (hspeed &gt; 0.5)
                    hspeed = 0.5
                else
                    hspeed += 0.03
            }
        }
        else
            hspeed = 0
    }
}
if (direct_t == 1)
{
    if (global.apariencia == 0)
        sprite_index = spr_SMB_thwomp
    else if (global.apariencia == 1)
        sprite_index = spr_SMB3_thwomp
    else if (global.apariencia == 2)
        sprite_index = spr_thwomp
    if (((ready == 0) &amp;&amp; (instance_exists(obj_mario) &amp;&amp; (obj_mario.x &lt; (x - 80)))) || (((ready == 0) &amp;&amp; (instance_exists(obj_mario) &amp;&amp; (obj_mario.y &lt; (y - 16)))) || ((ready == 0) &amp;&amp; (instance_exists(obj_mario) &amp;&amp; (obj_mario.x &gt; (x + 80))))))
    {
        image_index = 0
        image_xscale = 1
    }
    else if ((ready == 0) &amp;&amp; (instance_exists(obj_mario) &amp;&amp; ((obj_mario.x &lt; (x - 48)) &amp;&amp; ((obj_mario.x &gt; (x - 80)) &amp;&amp; ((y == ystart) &amp;&amp; (obj_mario.y &gt; (y - 15)))))))
    {
        image_index = 1
        image_xscale = 1
    }
    else if ((ready == 0) &amp;&amp; (instance_exists(obj_mario) &amp;&amp; ((obj_mario.x &gt; (x + 48)) &amp;&amp; ((obj_mario.x &lt; (x + 80)) &amp;&amp; ((y == ystart) &amp;&amp; (obj_mario.y &gt; (y - 15)))))))
    {
        image_index = 1
        image_xscale = -1
    }
    else if ((ready == 0) &amp;&amp; (instance_exists(obj_mario) &amp;&amp; ((obj_mario.x &gt; (x - 48)) &amp;&amp; ((obj_mario.x &lt; (x + 48)) &amp;&amp; (((y - 16) &lt;= obj_mario.y) &amp;&amp; (y &gt; (obj_mario.y - 176)))))))
    {
        ready = 1
        image_index = 2
        image_xscale = 1
        if (collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) || (collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_block_pow_hold, 0, 0) || (collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_pinchos, 0, 0) || (collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_spring, 0, 0) || collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_nube, 0, 0)))))
            vspeed = -1.5
    }
    else if (ready == 1)
    {
        event_user(4)
        col_flip = collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_flipblock, 0, 0)
        col_block_n = collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_blockparent, 0, 0)
        col_pow = collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_block_pow_hold, 0, 0)
        col_spring = collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_spring, 0, 0)
        col_helmet = collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_helmet, 0, 0)
        col_not_spiny = (!collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_helmet_spiny, 0, 0))
        col_nube = collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_nube, 0, 0)
        if (col_helmet &amp;&amp; col_not_spiny)
        {
            if instance_exists(obj_mario)
            {
                if (obj_mario.vspeed &gt;= 0)
                    vspeed = -2
                else
                    vspeed = (obj_mario.vspeed + -1.5)
                audio_stop_sound(snd_helmet)
                audio_play_sound(snd_helmet, 0, false)
                with (instance_create(col_helmet.x, col_helmet.y, obj_smoke))
                    sprite_index = spr_starhelmet
            }
        }
        else if col_spring
        {
            col_spring.image_speed = 0.4
            audio_stop_sound(scr_snd_spring())
            audio_play_sound(scr_snd_spring(), 0, false)
            if (cont_spring != 3)
            {
                cont_spring += 1
                vspeed = -4
            }
            else
            {
                gravity = 0
                if (vspeed &gt; 0)
                    vspeed = 0
                cont_spring = 0
                ready = 2
                alarm[0] = 1
            }
        }
        else if ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) || collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_pinchos, 0, 0)) &amp;&amp; ((!collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_nube, 0, 0)) &amp;&amp; ((!collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_block_pow_hold, 0, 0)) &amp;&amp; ((!collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_blockparent, 0, 0)) &amp;&amp; ((!collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_block_rock, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_block_ice, 0, 0)))))))
        {
            ready = 2
            gravity = 0
            vspeed = 0
            audio_play_sound(scr_snd_thwomp(), 0, false)
            if instance_exists(obj_levelmanager)
            {
                with (obj_levelmanager)
                    alarm[11] = 1
            }
            with (instance_create((bbox_left - 8), (bbox_bottom - 8), obj_smoke))
            {
                sprite_index = spr_smokethwomp
                depth = -7
            }
            with (instance_create(bbox_left, (bbox_bottom - 8), obj_smoke))
            {
                sprite_index = spr_smokethwomp
                depth = -7
            }
            with (instance_create((bbox_right - 8), (bbox_bottom - 8), obj_smoke))
            {
                sprite_index = spr_smokethwomp
                depth = -7
            }
            alarm[0] = 60
        }
        else if collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_thwomp, 0, 0)
        {
            ready = 2
            gravity = 0
            vspeed = 0
            audio_play_sound(scr_snd_thwomp(), 0, false)
            if instance_exists(obj_levelmanager)
            {
                with (obj_levelmanager)
                    alarm[11] = 1
            }
            with (instance_create((bbox_left - 8), (bbox_bottom - 8), obj_smoke))
            {
                sprite_index = spr_smokethwomp
                depth = -7
            }
            with (instance_create(bbox_left, (bbox_bottom - 8), obj_smoke))
            {
                sprite_index = spr_smokethwomp
                depth = -7
            }
            with (instance_create((bbox_right - 8), (bbox_bottom - 8), obj_smoke))
            {
                sprite_index = spr_smokethwomp
                depth = -7
            }
            alarm[0] = 60
        }
    }
    else if (ready == 3)
    {
        if (y &lt;= (ystart + 1))
        {
            ready = 0
            gravity = 0
            vspeed = 0
            y = ystart
            image_index = 0
            image_xscale = 1
            alarm[10] = 2
        }
        else if ((vspeed &lt; 0) &amp;&amp; (collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_solid, 1, 0) || collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_onewaygate_bottom, 1, 0)))
        {
            ready = 0
            gravity = 0
            vspeed = 0
            ystart = y
            image_index = 0
            image_xscale = 1
        }
    }
}
if (direct_t == 2)
{
    if (global.apariencia == 0)
        sprite_index = spr_SMB_thwomp_h
    else if (global.apariencia == 1)
        sprite_index = spr_SMB3_thwomp_h
    else if (global.apariencia == 2)
        sprite_index = spr_thwomp_h
    if (((ready == 0) &amp;&amp; (instance_exists(obj_mario) &amp;&amp; ((obj_mario.y &gt;= (y - 64)) &amp;&amp; ((obj_mario.y &lt; (y - 48)) &amp;&amp; ((x == xstart) &amp;&amp; ((obj_mario.x &lt;= x) &amp;&amp; (obj_mario.x &gt;= (x - 32)))))))) || ((ready == 0) &amp;&amp; (instance_exists(obj_mario) &amp;&amp; ((obj_mario.y &lt;= (y + 32)) &amp;&amp; ((obj_mario.y &gt; (y + 16)) &amp;&amp; ((obj_mario.x &lt;= x) &amp;&amp; (obj_mario.x &gt;= (x - 16))))))))
    {
        image_index = 1
        image_xscale = 1
    }
    else if (((ready == 0) &amp;&amp; (instance_exists(obj_mario) &amp;&amp; ((obj_mario.y &lt; (y - 64)) &amp;&amp; (obj_mario.x &lt; (x - 160))))) || (((ready == 0) &amp;&amp; (instance_exists(obj_mario) &amp;&amp; ((obj_mario.y &gt; (y + 32)) &amp;&amp; (obj_mario.x &lt; (x - 160))))) || (((ready == 0) &amp;&amp; (instance_exists(obj_mario) &amp;&amp; ((obj_mario.y &gt;= (y - 64)) &amp;&amp; ((obj_mario.y &lt; (y - 48)) &amp;&amp; (obj_mario.x &lt; (x - 32)))))) || (((ready == 0) &amp;&amp; (instance_exists(obj_mario) &amp;&amp; ((obj_mario.y &lt;= (y + 32)) &amp;&amp; ((obj_mario.y &gt; (y + 16)) &amp;&amp; (obj_mario.x &lt; (x - 32)))))) || ((ready == 0) &amp;&amp; (instance_exists(obj_mario) &amp;&amp; (obj_mario.x &gt; x)))))))
    {
        image_index = 0
        image_xscale = 1
    }
    else if ((ready == 0) &amp;&amp; (instance_exists(obj_mario) &amp;&amp; ((obj_mario.y &gt;= (y - 48)) &amp;&amp; ((obj_mario.y &lt;= (y + 16)) &amp;&amp; (((x - 12) &gt;= obj_mario.x) &amp;&amp; (obj_mario.x &gt; (x - 160)))))))
    {
        ready = 1
        image_index = 2
        image_xscale = 1
        if (collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_flipblock, 0, 0) || collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_block_pow_hold, 0, 0))
            hspeed = 1.5
    }
    else if (ready == 1)
    {
        if (swimming == 1)
        {
            hspeed -= 0.06
            if (paracaidas == 1)
            {
                if ((hspeed &lt; -1) &amp;&amp; (speed_max == 0))
                {
                    hspeed = 0
                    speed_max = 1
                }
                else if ((hspeed &lt; -0.5) &amp;&amp; (speed_max == 1))
                    hspeed = -0.5
            }
            else if (hspeed &lt; -1)
                hspeed = -1
        }
        else
        {
            hspeed -= 0.08
            if (paracaidas == 1)
            {
                if ((hspeed &lt; -2) &amp;&amp; (speed_max == 0))
                {
                    hspeed = 0
                    speed_max = 1
                }
                else if ((hspeed &lt; -0.8) &amp;&amp; (speed_max == 1))
                    hspeed = -0.8
            }
            else if (hspeed &lt; -3)
                hspeed = -3
        }
        col_flip = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_flipblock, 0, 0)
        col_block_n = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_blockparent, 0, 0)
        col_pow = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_block_pow_hold, 0, 0)
        col_spring = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_spring_land, 0, 0)
        col_helmet = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_helmet, 0, 0)
        overlap = collision_rectangle(bbox_left, bbox_top, bbox_right, (bbox_bottom - 4), obj_thwomp, 0, 1)
        col_oneway = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)
        if col_helmet
        {
            hspeed = 7
            audio_stop_sound(snd_helmet)
            audio_play_sound(snd_helmet, 0, false)
            with (instance_create(col_helmet.x, col_helmet.y, obj_smoke))
                sprite_index = spr_starhelmet
        }
        else if col_oneway
        {
            ready = 2
            audio_play_sound(scr_snd_thwomp(), 0, false)
            if instance_exists(obj_levelmanager)
            {
                with (obj_levelmanager)
                    alarm[11] = 1
            }
            with (instance_create((x - 12), (y - 16), obj_smoke))
            {
                sprite_index = spr_smokethwomp
                depth = -3
            }
            with (instance_create((x + 12), (y + 12), obj_smoke))
            {
                sprite_index = spr_smokethwomp
                depth = -3
            }
            alarm[0] = 60
            if (!audio_is_playing(snd_oneway))
                audio_play_sound(snd_oneway, 0, false)
            with (col_oneway)
                rot = 1
        }
        else if col_spring
        {
            col_spring.image_speed = 0.4
            audio_stop_sound(scr_snd_spring())
            audio_play_sound(scr_snd_spring(), 0, false)
            if (cont_spring != 3)
            {
                cont_spring += 1
                hspeed = 7
            }
            else
            {
                if (hspeed &lt; 0)
                    hspeed = 0
                cont_spring = 0
                ready = 2
                alarm[0] = 1
            }
        }
        else if ((collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solid, 0, 0) || (collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_muncher, 0, 0) || (collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 0, 0) || collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_pinchos, 0, 0)))) &amp;&amp; ((!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_blockparent, 0, 0)) &amp;&amp; ((!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_block_rock, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_block_ice, 0, 0)))))
        {
            ready = 2
            audio_play_sound(scr_snd_thwomp(), 0, false)
            if instance_exists(obj_levelmanager)
            {
                with (obj_levelmanager)
                    alarm[11] = 1
            }
            with (instance_create((x - 12), (y - 16), obj_smoke))
            {
                sprite_index = spr_smokethwomp
                depth = -3
            }
            with (instance_create((x + 12), (y + 12), obj_smoke))
            {
                sprite_index = spr_smokethwomp
                depth = -3
            }
            alarm[0] = 60
        }
        else if overlap
        {
            if ((((bbox_left + bbox_right) * 0.5) &gt; ((overlap.bbox_left + overlap.bbox_right) * 0.5)) || ((((bbox_left + bbox_right) * 0.5) == ((overlap.bbox_left + overlap.bbox_right) * 0.5)) &amp;&amp; (id &gt; overlap.id)))
            {
                ready = 2
                audio_play_sound(scr_snd_thwomp(), 0, false)
                if instance_exists(obj_levelmanager)
                {
                    with (obj_levelmanager)
                        alarm[11] = 1
                }
                with (instance_create((x - 12), (y - 16), obj_smoke))
                {
                    sprite_index = spr_smokethwomp
                    depth = -3
                }
                with (instance_create((x + 12), (y + 12), obj_smoke))
                {
                    sprite_index = spr_smokethwomp
                    depth = -3
                }
                alarm[0] = 60
            }
        }
    }
    else if (ready == 2)
    {
        hspeed = 0
        speed_max = 0
    }
    else if (ready == 3)
    {
        if (x &gt;= (xstart + 1))
        {
            ready = 0
            hspeed = 0
            x = xstart
            image_index = 0
            image_xscale = 1
        }
        else
            event_user(3)
    }
}
if (direct_t == 3)
{
    if (global.apariencia == 0)
        sprite_index = spr_SMB_thwomp_h
    else if (global.apariencia == 1)
        sprite_index = spr_SMB3_thwomp_h
    else if (global.apariencia == 2)
        sprite_index = spr_thwomp_h
    if (((ready == 0) &amp;&amp; (instance_exists(obj_mario) &amp;&amp; ((obj_mario.y &gt;= (y - 64)) &amp;&amp; ((obj_mario.y &lt; (y - 48)) &amp;&amp; ((x == xstart) &amp;&amp; ((obj_mario.x &gt;= x) &amp;&amp; (obj_mario.x &lt;= (x + 32)))))))) || ((ready == 0) &amp;&amp; (instance_exists(obj_mario) &amp;&amp; ((obj_mario.y &lt;= (y + 32)) &amp;&amp; ((obj_mario.y &gt; (y + 16)) &amp;&amp; ((obj_mario.x &gt;= x) &amp;&amp; (obj_mario.x &lt;= (x + 16))))))))
    {
        image_index = 1
        image_xscale = -1
    }
    else if (((ready == 0) &amp;&amp; (instance_exists(obj_mario) &amp;&amp; ((obj_mario.y &lt; (y - 64)) &amp;&amp; (obj_mario.x &gt; (x + 160))))) || (((ready == 0) &amp;&amp; (instance_exists(obj_mario) &amp;&amp; ((obj_mario.y &gt; (y + 32)) &amp;&amp; (obj_mario.x &gt; (x + 160))))) || (((ready == 0) &amp;&amp; (instance_exists(obj_mario) &amp;&amp; ((obj_mario.y &gt;= (y - 64)) &amp;&amp; ((obj_mario.y &lt; (y - 48)) &amp;&amp; (obj_mario.x &gt; (x + 32)))))) || (((ready == 0) &amp;&amp; (instance_exists(obj_mario) &amp;&amp; ((obj_mario.y &lt;= (y + 32)) &amp;&amp; ((obj_mario.y &gt; (y + 16)) &amp;&amp; (obj_mario.x &gt; (x + 32)))))) || ((ready == 0) &amp;&amp; (instance_exists(obj_mario) &amp;&amp; (obj_mario.x &lt; x)))))))
    {
        image_index = 0
        image_xscale = 1
    }
    else if ((ready == 0) &amp;&amp; (instance_exists(obj_mario) &amp;&amp; ((obj_mario.y &gt;= (y - 48)) &amp;&amp; ((obj_mario.y &lt;= (y + 16)) &amp;&amp; (((x + 12) &lt;= obj_mario.x) &amp;&amp; (obj_mario.x &lt; (x + 160)))))))
    {
        ready = 1
        image_index = 2
        image_xscale = -1
        if (collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_flipblock, 0, 0) || collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_block_pow_hold, 0, 0))
            hspeed = -1.3
    }
    else if (ready == 1)
    {
        if (swimming == 1)
        {
            hspeed += 0.06
            if (paracaidas == 1)
            {
                if ((hspeed &gt; 1) &amp;&amp; (speed_max == 0))
                {
                    hspeed = 0
                    speed_max = 1
                }
                else if ((hspeed &gt; 0.5) &amp;&amp; (speed_max == 1))
                    hspeed = 0.5
            }
            else if (hspeed &gt; 1)
                hspeed = 1
        }
        else
        {
            hspeed += 0.08
            if (paracaidas == 1)
            {
                if ((hspeed &gt; 2) &amp;&amp; (speed_max == 0))
                {
                    hspeed = 0
                    speed_max = 1
                }
                else if ((hspeed &gt; 0.8) &amp;&amp; (speed_max == 1))
                    hspeed = 0.8
            }
            else if (hspeed &gt; 3)
                hspeed = 3
        }
        col_flip = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_flipblock, 0, 0)
        col_block_n = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_blockparent, 0, 0)
        col_pow = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_block_pow_hold, 0, 0)
        col_spring = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_spring_land, 0, 0)
        col_helmet = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_helmet, 0, 0)
        overlap = collision_rectangle(bbox_left, bbox_top, bbox_right, (bbox_bottom - 4), obj_thwomp, 0, 1)
        col_oneway = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)
        if col_helmet
        {
            hspeed = -7
            audio_stop_sound(snd_helmet)
            audio_play_sound(snd_helmet, 0, false)
            with (instance_create(col_helmet.x, col_helmet.y, obj_smoke))
                sprite_index = spr_starhelmet
        }
        else if col_oneway
        {
            ready = 2
            audio_play_sound(scr_snd_thwomp(), 0, false)
            if instance_exists(obj_levelmanager)
            {
                with (obj_levelmanager)
                    alarm[11] = 1
            }
            with (instance_create((x - 12), (y - 16), obj_smoke))
            {
                sprite_index = spr_smokethwomp
                depth = -3
            }
            with (instance_create((x + 12), (y + 12), obj_smoke))
            {
                sprite_index = spr_smokethwomp
                depth = -3
            }
            alarm[0] = 60
            if (!audio_is_playing(snd_oneway))
                audio_play_sound(snd_oneway, 0, false)
            with (col_oneway)
                rot = 1
        }
        else if col_spring
        {
            col_spring.image_speed = 0.4
            audio_stop_sound(scr_snd_spring())
            audio_play_sound(scr_snd_spring(), 0, false)
            if (cont_spring != 3)
            {
                cont_spring += 1
                hspeed = -7
            }
            else
            {
                if (hspeed &gt; 0)
                    hspeed = 0
                cont_spring = 0
                ready = 2
                alarm[0] = 1
            }
        }
        else if ((collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 0, 0) || (collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_muncher, 0, 0) || (collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 0, 0) || collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_pinchos, 0, 0)))) &amp;&amp; ((!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_blockparent, 0, 0)) &amp;&amp; ((!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_block_rock, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_block_ice, 0, 0)))))
        {
            ready = 2
            audio_play_sound(scr_snd_thwomp(), 0, false)
            if instance_exists(obj_levelmanager)
            {
                with (obj_levelmanager)
                    alarm[11] = 1
            }
            with (instance_create((x - 12), (y - 16), obj_smoke))
            {
                sprite_index = spr_smokethwomp
                depth = -3
            }
            with (instance_create((x + 12), (y + 12), obj_smoke))
            {
                sprite_index = spr_smokethwomp
                depth = -3
            }
            alarm[0] = 60
        }
        else if overlap
        {
            if ((((bbox_left + bbox_right) * 0.5) &gt; ((overlap.bbox_left + overlap.bbox_right) * 0.5)) || ((((bbox_left + bbox_right) * 0.5) == ((overlap.bbox_left + overlap.bbox_right) * 0.5)) &amp;&amp; (id &gt; overlap.id)))
            {
            }
            else
            {
                ready = 2
                audio_play_sound(scr_snd_thwomp(), 0, false)
                if instance_exists(obj_levelmanager)
                {
                    with (obj_levelmanager)
                        alarm[11] = 1
                }
                with (instance_create((x - 12), (y - 16), obj_smoke))
                {
                    sprite_index = spr_smokethwomp
                    depth = -3
                }
                with (instance_create((x + 12), (y + 12), obj_smoke))
                {
                    sprite_index = spr_smokethwomp
                    depth = -3
                }
                alarm[0] = 60
            }
        }
    }
    else if (ready == 2)
    {
        hspeed = 0
        speed_max = 0
    }
    else if (ready == 3)
    {
        if (x &lt;= (xstart - 1))
        {
            ready = 0
            hspeed = 0
            x = xstart
            image_index = 0
            image_xscale = 1
        }
        else
            event_user(3)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_shell">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (collision_rectangle((bbox_left + 4), (bbox_top + 4), (bbox_right - 4), (bbox_bottom - 4), other.object_index, 0, 0) &amp;&amp; ((ready == 1) &amp;&amp; ((direct_t == 1) &amp;&amp; ((y &lt; other.y) &amp;&amp; (other.held == 0)))))
{
    with (other.id)
        event_user(0)
}
else if ((ready == 1) &amp;&amp; ((direct_t == 2) &amp;&amp; (other.held == 0)))
{
    with (other.id)
        event_user(0)
}
else if ((ready == 1) &amp;&amp; ((direct_t == 2) &amp;&amp; (other.held == 0)))
{
    with (other.id)
        event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mushroom">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((ready == 1) &amp;&amp; ((obj_levelmanager.editor == 0) &amp;&amp; ((direct_t == 1) &amp;&amp; (y &lt; other.y))))
{
    instance_create(other.x, other.y, obj_smoke)
    with (other.id)
        instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bossparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (collision_rectangle((bbox_left + 4), (bbox_top + 4), (bbox_right - 4), (bbox_bottom - 4), other.object_index, 0, 0) &amp;&amp; ((ready == 1) &amp;&amp; ((obj_levelmanager.editor == 0) &amp;&amp; (y &lt; other.y))))
{
    with (other.id)
        event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemyparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (collision_rectangle((bbox_left + 4), (bbox_top + 4), (bbox_right - 4), (bbox_bottom - 4), other.object_index, 0, 0) &amp;&amp; ((ready == 1) &amp;&amp; ((other.hardness &lt; 99) &amp;&amp; ((other.object_index != obj_thwomp) &amp;&amp; ((other.object_index != obj_grinder) &amp;&amp; ((other.object_index != obj_banzaibill) &amp;&amp; ((other.object_index != obj_podoboo) &amp;&amp; ((other.object_index != obj_boo) &amp;&amp; ((other.object_index != obj_cannonball) &amp;&amp; ((other.object_index != obj_cannonball_red) &amp;&amp; (y &lt; other.y)))))))))))
{
    with (other.id)
        event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var solidtop, solidnube, solidblock, solidblockrock, solidblockice, solidpow, solidthwomp;
if (vspeed &gt;= 0)
{
    solidtop = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_solidtop, 0, 0)
    solidnube = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_nube, 0, 0)
    solidblock = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_blockparent, 0, 0)
    solidblockrock = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_block_rock, 0, 0)
    solidblockice = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_block_ice, 0, 0)
    solidpow = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_block_pow_hold, 0, 0)
    solidthwomp = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_thwomp, 0, 0)
    if (solidtop &amp;&amp; ((!solidnube) &amp;&amp; ((!solidpow) &amp;&amp; ((!solidblock) &amp;&amp; ((!solidblockrock) &amp;&amp; ((!solidblockice) &amp;&amp; ((bbox_bottom &lt; (solidtop.yprevious + 5)) &amp;&amp; (obj_levelmanager.editor == 0))))))))
        y = (solidtop.y + floor(((y - bbox_bottom) - 0.9)))
    if (solidthwomp &amp;&amp; ((bbox_bottom &lt; (solidthwomp.yprevious + 5)) &amp;&amp; (obj_levelmanager.editor == 0)))
        y = (solidthwomp.y + floor(((y - bbox_bottom) - 0.9)))
    if (vspeed &gt; 4)
        vspeed = 4
}
if (collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + 4), obj_slopeparent, 1, 0) &amp;&amp; ((!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_slopeparent, 1, 0)) &amp;&amp; (vspeed == 0)))
    y += 4
if (collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, bbox_bottom, obj_slopeparent, 1, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 8), bbox_right, (bbox_bottom - 8), obj_slopeparent, 1, 0)))
{
    while collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, bbox_bottom, obj_slopeparent, 1, 0)
        y--
}
if ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) &amp;&amp; ((!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_solidtop, 0, 0)) &amp;&amp; ((!collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_blockparent, 0, 0)) &amp;&amp; ((!collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_nube, 0, 0)) &amp;&amp; ((!collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_block_pow_hold, 0, 0)) &amp;&amp; ((!collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_block_rock, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_block_ice, 0, 0)))))))) || ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_thwomp, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_thwomp, 0, 0))) || collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_slopeparent, 1, 0)))
{
    gravity = 0
    if (vspeed &gt; 0)
    {
        vspeed = 0
        paracaidas = 0
        speed_max = 0
    }
}
else if ((y &gt;= (room_height - 24)) &amp;&amp; ((global.bg_level == "castle") &amp;&amp; (obj_levelmanager.editor == 0)))
{
    hspeed = 0
    gravity = 0.02
    if (vspeed &gt; 0.1)
        vspeed = 0.1
}
else if (!swimming)
{
    if ((wings == 1) &amp;&amp; (paracaidas == 0))
    {
        gravity = 0.3
        if (vspeed &gt; 5)
            vspeed = 5
    }
    else if (paracaidas == 1)
    {
        gravity = 0.3
        if ((vspeed &gt; 3) &amp;&amp; (speed_max == 0))
        {
            vspeed = 0
            gravity = 0
            speed_max = 1
        }
        else if ((vspeed &gt; 1) &amp;&amp; (speed_max == 1))
            vspeed = 1
    }
    else
    {
        gravity = 0.2
        if (vspeed &gt; 4)
            vspeed = 4
    }
}
else if (swimming == 1)
{
    if ((wings == 1) &amp;&amp; (paracaidas == 0))
    {
        gravity = 0.15
        if (vspeed &gt; 0.6)
            vspeed = 0.6
    }
    else if (paracaidas == 1)
    {
        gravity = 0.15
        if ((vspeed &gt; 0.4) &amp;&amp; (speed_max == 0))
        {
            vspeed = -1
            speed_max = 1
        }
        else if ((vspeed &gt; 0.4) &amp;&amp; (speed_max == 1))
            vspeed = 0.4
    }
    else
    {
        gravity = 0.1
        if (vspeed &gt; 0.6)
            vspeed = 0.6
    }
}
if ((vspeed &lt; 0) &amp;&amp; (collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_solid, 1, 0) || collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_onewaygate_bottom, 1, 0)))
{
    ready = 0
    gravity = 0
    vspeed = 0
    ystart = y
    image_index = 0
    image_xscale = 1
}
if (((bbox_top - 16) &gt; room_height) &amp;&amp; (obj_levelmanager.editor == 0))
    instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var pow_right, pow_left, col_one_left, col_one_right;
pow_right = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_block_pow_hold, 0, 0)
pow_left = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_block_pow_hold, 0, 0)
if (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solid, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_enemyparent_held, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_enemyparent_held, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_muncher, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_muncher, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_pswitch, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_pswitch, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_pinchos, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_pinchos, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; (pow_right &amp;&amp; (pow_right.held == 0))) || (((hspeed &lt; 0) &amp;&amp; (pow_left &amp;&amp; (pow_left.held == 0))) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)) || ((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)))))))))))))))))
{
    col_one_left = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)
    col_one_right = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)
    if ((hspeed &gt; 0) &amp;&amp; col_one_left)
    {
        if (!audio_is_playing(snd_oneway))
            audio_play_sound(snd_oneway, 0, false)
        with (col_one_left)
            rot = 1
    }
    if ((hspeed &lt; 0) &amp;&amp; col_one_right)
    {
        if (!audio_is_playing(snd_oneway))
            audio_play_sound(snd_oneway, 0, false)
        with (col_one_right)
            rot = 1
    }
    ready = 0
    hspeed = 0
    xstart = x
    image_index = 0
    image_xscale = 1
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_solid, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solid, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_block_pow_hold, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_block_pow_hold, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_muncher, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_muncher, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_pinchos, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_pinchos, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_onewaygate_left, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 1, 0)
        x++
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>imdead = instance_create(x, y, obj_enemy_dead)
imdead.girar = 1
imdead.sprite_index = sprite_index
if (dead_h == 0)
{
    if (other.hspeed == 0)
    {
        if ((other.bbox_left + (bbox_right / 2)) &lt; (bbox_left + (bbox_right / 2)))
            imdead.hspeed = 1
        else if ((other.bbox_left + (bbox_right / 2)) &gt; (bbox_left + (bbox_right / 2)))
            imdead.hspeed = -1
    }
    else if (other.hspeed &gt; 0)
        imdead.hspeed = 1
    else if (other.hspeed &lt; 0)
        imdead.hspeed = -1
}
else
{
    imdead.hspeed = 0
    with (instance_create(imdead.x, (imdead.y - 5), obj_smoke))
        sprite_index = spr_spinthump
}
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, 1, 0, c_white, 1)
if ((paracaidas == 1) &amp;&amp; (speed_max == 1))
{
    if (direct_t == 1)
        draw_sprite(spr_paracaidas, global.apariencia, x, (y - 16))
    else if (direct_t == 2)
        draw_sprite_ext(spr_paracaidas_h, global.apariencia, (x + 28), y, -1, 1, 0, c_white, 1)
    else if (direct_t == 3)
        draw_sprite_ext(spr_paracaidas_h, global.apariencia, (x - 28), y, 1, 1, 0, c_white, 1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>-12,-16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
