<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_SMB_bulletbill_base</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_physicsparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.apariencia == 0)
{
    if ((global.bg_level == "castle") || ((global.bg_level == "ghost") || ((global.bg_level == "underground") || (global.modo_noche == 1))))
        sprite = 361
    else
        sprite = 360
}
else if (global.apariencia == 1)
{
    if ((global.bg_level == "castle") || ((global.bg_level == "ghost") || ((global.bg_level == "underground") || (global.modo_noche == 1))))
        sprite = 1034
    else
        sprite = 1033
}
else if (global.apariencia == 2)
    sprite = 1858
else if (global.apariencia == 4)
{
    if ((global.bg_level == "castle") || ((global.bg_level == "ghost") || ((global.bg_level == "underground") || (global.modo_noche == 1))))
        sprite = 3591
    else
        sprite = 3590
}
wings = 0
w_wings = 0
direct = 1
dead_h = 0
apilar = 0
swimming = 0
modo_lava = 0
sprout = 0
shoot_right = 0
shoot_left = 0
index = 0
size_y = 3
image_speed = 0
alarm[0] = 90
solidtop = 0
alarm[1] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((solidtop != obj_lighting) &amp;&amp; instance_exists(solidtop))
{
    with (solidtop)
        instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>solidtop = instance_create(x, y, obj_solidtop)
solidtop.image_xscale = image_xscale
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(obj_mario))
{
    alarm[0] = 1
    exit
}
if (((obj_mario.x - 2) &lt;= x) &amp;&amp; ((obj_mario.x &gt; (x - 256)) &amp;&amp; ((y &gt;= (obj_mario.y - 160)) &amp;&amp; ((!collision_rectangle((bbox_left - 1), y, (bbox_left - 1), (y + 15), obj_solid, 0, 0)) &amp;&amp; ((!collision_rectangle((bbox_left - 1), y, (bbox_left - 1), (y + 15), obj_cannon, 0, 0)) &amp;&amp; ((!collision_rectangle((bbox_left - 1), y, (bbox_left - 1), (y + 15), obj_pinchos, 0, 0)) &amp;&amp; ((!collision_rectangle((bbox_left - 1), y, (bbox_left - 1), (y + 15), obj_bullebill_base, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), y, (bbox_left - 1), (y + 15), obj_mario, 0, 0)))))))))
{
    if ((shoot_left != obj_lighting) &amp;&amp; instance_exists(shoot_left))
        alarm[0] = 15
    else
    {
        if (global.apariencia == 2)
            audio_play_sound(snd_explode, 0, false)
        else
            audio_play_sound(snd_SMB3_explode, 0, false)
        with (instance_create(x, y, obj_smoke))
            depth = -10
        event_user(1)
    }
}
else if (((obj_mario.x + 2) &gt;= (x + 16)) &amp;&amp; ((obj_mario.x &lt; (x + 256)) &amp;&amp; ((y &gt;= (obj_mario.y - 160)) &amp;&amp; ((!collision_rectangle((bbox_right + 1), y, (bbox_right + 1), (y + 15), obj_solid, 0, 0)) &amp;&amp; ((!collision_rectangle((bbox_right + 1), y, (bbox_right + 1), (y + 15), obj_cannon, 0, 0)) &amp;&amp; ((!collision_rectangle((bbox_right + 1), y, (bbox_right + 1), (y + 15), obj_pinchos, 0, 0)) &amp;&amp; ((!collision_rectangle((bbox_right + 1), y, (bbox_right + 1), (y + 15), obj_bullebill_base, 0, 0)) &amp;&amp; (!collision_rectangle((bbox_right + 1), y, (bbox_right + 1), (y + 15), obj_mario, 0, 0)))))))))
{
    if ((shoot_right != obj_lighting) &amp;&amp; instance_exists(shoot_right))
        alarm[0] = 15
    else
    {
        if (global.apariencia == 2)
            audio_play_sound(snd_explode, 0, false)
        else
            audio_play_sound(snd_SMB3_explode, 0, false)
        with (instance_create((x + 16), y, obj_smoke))
            depth = -8
        event_user(2)
    }
}
else
    alarm[0] = 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var coli_red, coli_blue, coli_flip;
event_inherited()
if ((solidtop != obj_lighting) &amp;&amp; instance_exists(solidtop))
{
    solidtop.x = x
    solidtop.y = y
}
if (instance_exists(obj_mario) &amp;&amp; (place_meeting(x, y, obj_mario) &amp;&amp; ((obj_mario.y + 16) &gt;= y)))
{
    if (obj_mario.x &gt; (x + 8))
    {
        with (obj_mario)
            x++
    }
    else
    {
        with (obj_mario)
            x--
    }
}
if (gravity == 0)
{
    hspeed = (max(0, (abs(hspeed) - 0.1)) * sign(hspeed))
    if (abs(hspeed) &lt; 0.1)
        hspeed = 0
}
coli_red = collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_onoffplatform, 0, 0)
coli_blue = collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_onoffplatform_blue, 0, 0)
coli_flip = collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_flipblock, 0, 0)
if ((coli_red &amp;&amp; ((coli_red.image_index == 1) &amp;&amp; ((obj_levelmanager.editor == 0) &amp;&amp; ((x &gt; view_xview[0]) &amp;&amp; ((x &lt; (view_xview[0] + 384)) &amp;&amp; ((y &gt; view_yview[0]) &amp;&amp; (y &lt; (view_xview[0] + 216)))))))) || (coli_blue &amp;&amp; ((coli_blue.image_index == 1) &amp;&amp; ((obj_levelmanager.editor == 0) &amp;&amp; ((x &gt; view_xview[0]) &amp;&amp; (x &lt; (view_xview[0] + 384)))))))
    event_user(0)
if (instance_exists(obj_lava_water) &amp;&amp; (((y + 8) &gt;= (obj_lava_water.y - 12)) &amp;&amp; (global.bg_level == "castle")))
{
    if (global.apariencia != 0)
    {
        with (instance_create((x + 8), (y - 8), obj_smoke))
        {
            if (global.apariencia == 1)
                sprite_index = spr_SMB3_splash_lava
            else if (global.apariencia == 2)
                sprite_index = spr_splash_lava
            depth = -12
        }
    }
    modo_lava = 1
}
if (instance_exists(obj_lava_water) &amp;&amp; (((y + 8) &gt;= obj_lava_water.y) &amp;&amp; ((global.bg_level == "forest") &amp;&amp; (global.modo_noche == 1))))
{
    if (global.apariencia != 0)
    {
        with (instance_create((x + 8), (y - 8), obj_smoke))
        {
            if (global.apariencia == 1)
                sprite_index = spr_SMB3_splash_lava_purple
            else if (global.apariencia == 2)
                sprite_index = spr_splash_lava_purple
            depth = -12
        }
    }
    modo_lava = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var solidtop, solidpow, solidthwomp, solidpinchos, solidmunchers, lava_lift, check, conveyor, col_muncher, col_cannon, col_pow, col_pswith, col_bullet, col_pswitch;
if (vspeed &gt;= 0)
{
    solidtop = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_solidtop, 0, 0)
    solidpow = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_block_pow_hold, 0, 0)
    solidthwomp = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_thwomp, 0, 0)
    solidpinchos = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_pinchos, 0, 0)
    solidmunchers = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_muncher, 0, 0)
    if (solidtop &amp;&amp; ((bbox_bottom &lt; (solidtop.yprevious + 5)) &amp;&amp; (obj_levelmanager.editor == 0)))
        y = (solidtop.y + floor(((y - bbox_bottom) - 0.9)))
    if (solidpinchos &amp;&amp; ((bbox_bottom &lt; (solidpinchos.yprevious + 5)) &amp;&amp; (obj_levelmanager.editor == 0)))
        y = (solidpinchos.y + floor(((y - bbox_bottom) - 0.9)))
    if (solidmunchers &amp;&amp; ((bbox_bottom &lt; (solidmunchers.yprevious + 5)) &amp;&amp; (obj_levelmanager.editor == 0)))
        y = (solidmunchers.y + floor(((y - bbox_bottom) - 0.9)))
    if (solidthwomp &amp;&amp; ((bbox_bottom &lt; (solidthwomp.yprevious + 5)) &amp;&amp; (obj_levelmanager.editor == 0)))
        y = (solidthwomp.y + floor(((y - bbox_bottom) - 16)))
    if (solidpow &amp;&amp; ((bbox_bottom &lt; (solidpow.yprevious + 5)) &amp;&amp; (obj_levelmanager.editor == 0)))
        y = (solidpow.y + floor(((y - bbox_bottom) - 0.9)))
    if (vspeed &gt; 4)
        vspeed = 4
}
if (collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + 4), obj_slopeparent, 1, 0) &amp;&amp; ((!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_slopeparent, 1, 0)) &amp;&amp; (vspeed == 0)))
    y += 4
if (collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, bbox_bottom, obj_slopeparent, 1, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 8), bbox_right, (bbox_bottom - 8), obj_slopeparent, 1, 0)))
{
    while collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, bbox_bottom, obj_slopeparent, 1, 0)
        y--
}
if ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_solidtop, 0, 0))) || ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_block_pow_hold, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_block_pow_hold, 0, 0))) || ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_thwomp, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_thwomp, 0, 0))) || ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_muncher, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_muncher, 0, 0))) || ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_pinchos, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_pinchos, 0, 0))) || collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_slopeparent, 1, 0))))))
{
    gravity = 0
    if (vspeed &gt; 0)
        vspeed = 0
}
else if (modo_lava == 1)
{
    hspeed = 0
    gravity = 0.02
    if (vspeed &gt; 0.03)
        vspeed = 0.03
}
else if (!swimming)
{
    gravity = 0.2
    if (vspeed &gt; 4)
        vspeed = 4
}
else if (swimming == 1)
{
    gravity = 0.1
    if (vspeed &gt; 0.4)
        vspeed = 0.4
}
if ((vspeed &lt; 0) &amp;&amp; (collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_solid, 1, 0) || (collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_pinchos, 1, 0) || (collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_cannon, 1, 0) || (collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_onewaygate_bottom, 1, 0) || collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_muncher, 1, 0))))))
    vspeed = 0
if (((bbox_top - 16) &gt; room_height) &amp;&amp; (obj_levelmanager.editor == 0))
    instance_destroy()
lava_lift = collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom + 4), obj_solidtop, 0, 0)
if (lava_lift &amp;&amp; (vspeed &gt;= 0))
{
    check = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0)
    if (check &amp;&amp; (check != lava_lift))
        exit
    y = (lava_lift.y + floor(((y - bbox_bottom) - 0.9)))
    if (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle(((bbox_right + lava_lift.hspeed) + 1), bbox_top, ((bbox_right + lava_lift.hspeed) + 1), (bbox_bottom - 1), obj_solid, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle(((bbox_right + lava_lift.hspeed) + 1), bbox_top, ((bbox_right + lava_lift.hspeed) + 1), (bbox_bottom - 1), obj_pinchos, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle(((bbox_right + lava_lift.hspeed) + 1), bbox_top, ((bbox_right + lava_lift.hspeed) + 1), (bbox_bottom - 1), obj_cannon, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle(((bbox_right + lava_lift.hspeed) + 1), bbox_top, ((bbox_right + lava_lift.hspeed) + 1), (bbox_bottom - 1), obj_bullebill_base, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, ((bbox_right + lava_lift.hspeed) + 1), (bbox_bottom - 1), obj_muncher, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle(((bbox_left + lava_lift.hspeed) - 1), bbox_top, ((bbox_left + lava_lift.hspeed) - 1), (bbox_bottom - 1), obj_solid, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle(((bbox_left + lava_lift.hspeed) - 1), bbox_top, ((bbox_left + lava_lift.hspeed) - 1), (bbox_bottom - 1), obj_pinchos, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle(((bbox_left + lava_lift.hspeed) - 1), bbox_top, ((bbox_left + lava_lift.hspeed) - 1), (bbox_bottom - 1), obj_cannon, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle(((bbox_left + lava_lift.hspeed) - 1), bbox_top, ((bbox_left + lava_lift.hspeed) - 1), (bbox_bottom - 1), obj_bullebill_base, 0, 0))) || ((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle(((bbox_left + lava_lift.hspeed) - 1), bbox_top, ((bbox_left + lava_lift.hspeed) - 1), (bbox_bottom - 1), obj_muncher, 0, 0))))))))))))
        x += lava_lift.hspeed
    if (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_solid, 0, 0) || (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_onewaygate_left, 0, 0) || (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_pinchos, 0, 0) || collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_muncher, 0, 0))))
        x--
    else if (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_solid, 0, 0) || (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_onewaygate_right, 0, 0) || (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_pinchos, 0, 0) || collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_muncher, 0, 0))))
        x++
}
conveyor = collision_rectangle(bbox_left, bbox_top, bbox_right, (bbox_bottom + 1), obj_cinta_parent, 0, 0)
if (conveyor &amp;&amp; (conveyor.image_speed != 0))
{
    if (conveyor.image_speed &gt; 0)
    {
        col_muncher = collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_muncher, 1, 0)
        col_cannon = collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_cannon, 1, 0)
        col_pow = collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_block_pow_hold, 1, 0)
        col_pswith = collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_pswitch, 1, 0)
        col_bullet = collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 1, 0)
        if (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 1, 0) || (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_pinchos, 1, 0) || (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 1, 0) || ((col_muncher &amp;&amp; (col_muncher.id != id)) || ((col_cannon &amp;&amp; (col_cannon.id != id)) || ((col_pow &amp;&amp; (col_pow.id != id)) || ((col_pswith &amp;&amp; (col_pswith.id != id)) || (col_bullet &amp;&amp; (col_bullet.id != id)))))))))
        {
        }
        else
        {
            x -= conveyor.image_speed
            if collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_mario, 1, 0)
            {
                if instance_exists(obj_mario)
                    obj_mario.x -= conveyor.image_speed
            }
        }
    }
    else if (conveyor.image_speed &lt; 0)
    {
        col_muncher = collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_muncher, 1, 0)
        col_cannon = collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_cannon, 1, 0)
        col_pow = collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_block_pow_hold, 1, 0)
        col_pswitch = collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_pswitch, 1, 0)
        col_bullet = collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
        if (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solid, 1, 0) || (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_pinchos, 1, 0) || (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 1, 0) || ((col_muncher &amp;&amp; (col_muncher.id != id)) || ((col_cannon &amp;&amp; (col_cannon.id != id)) || ((col_pow &amp;&amp; (col_pow.id != id)) || ((col_pswitch &amp;&amp; (col_pswitch.id != id)) || (col_bullet &amp;&amp; (col_bullet.id != id)))))))))
        {
        }
        else
        {
            x -= conveyor.image_speed
            if collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_mario, 1, 0)
            {
                if instance_exists(obj_mario)
                    obj_mario.x -= conveyor.image_speed
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var pow_right, pow_left, col_one_left, col_one_right;
pow_right = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_block_pow_hold, 0, 0)
pow_left = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_block_pow_hold, 0, 0)
if (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solid, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_enemyparent_held, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_enemyparent_held, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_muncher, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_muncher, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_pswitch, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_pswitch, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_pinchos, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_pinchos, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; (pow_right &amp;&amp; (pow_right.held == 0))) || (((hspeed &lt; 0) &amp;&amp; (pow_left &amp;&amp; (pow_left.held == 0))) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_cannon, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_cannon, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)) || ((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)))))))))))))))))))
{
    col_one_left = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)
    col_one_right = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)
    if ((hspeed &gt; 0) &amp;&amp; col_one_left)
    {
        if (!audio_is_playing(snd_oneway))
            audio_play_sound(snd_oneway, 0, false)
        with (col_one_left)
            rot = 1
    }
    if ((hspeed &lt; 0) &amp;&amp; col_one_right)
    {
        if (!audio_is_playing(snd_oneway))
            audio_play_sound(snd_oneway, 0, false)
        with (col_one_right)
            rot = 1
    }
    if ((object_index == obj_galoomba_hold) || (object_index == obj_bobomb_hold))
        direct = (-direct)
    if (object_index == obj_parcarry)
        hspeed = 0
    else
        hspeed = (-hspeed)
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_solid, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solid, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_block_pow_hold, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_block_pow_hold, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_muncher, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_muncher, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_pinchos, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_pinchos, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_onewaygate_left, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 1, 0)
        x++
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var sprite, x_pos, y_pos, helshell;
if (sprout == 0)
{
    with (instance_create((x + 16), y, obj_bulletbill))
    {
        if ((global.bg_level == "underwater") || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "sky")) || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "airship")) || (instance_exists(obj_lava_water) &amp;&amp; ((y &gt; (obj_lava_water.y + 16)) &amp;&amp; ((global.bg_level == "forest") &amp;&amp; (global.modo_noche == 0)))))))
            hspeed = 0.5
        else
            hspeed = 1
        direct = 1
    }
    alarm[0] = 192
}
else
{
    sprite = scr_constant_get_sprite(sprout)
    if ((sprout == -61) || ((sprout == 1) || ((sprout == 2) || ((sprout == -23) || ((sprout == -65) || ((sprout == -25) || ((sprout == -18) || (sprout == -78))))))))
    {
        x_pos = (x + 16)
        y_pos = y
    }
    else
    {
        x_pos = (x + 16)
        y_pos = y
    }
    if ((global.bg_level == "underwater") || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "sky")) || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "airship")) || (instance_exists(obj_lava_water) &amp;&amp; ((y &gt; (obj_lava_water.y + 16)) &amp;&amp; ((global.bg_level == "forest") &amp;&amp; (global.modo_noche == 0)))))))
    {
        if (sprout == -1)
        {
            for (i = 0; i &lt; 8; i++)
            {
                with (instance_create((x + choose(32, 34, 36, 32, 34)), y, obj_coin_pow))
                {
                    hspeed = choose(2, 2, 2.2, 1.5, 1.5, 3, 3)
                    vspeed = choose(-1.5, -1, 0)
                }
            }
        }
        else if ((sprout == -69) || (sprout == -70))
        {
            helshell = instance_create((x + 16), y, obj_shell_held)
            helshell.mytopid = 1
            helshell.sprite_index = sprite
            helshell.hspeed = 2.9
        }
        else
        {
            with (scr_sprite_make_object(x_pos, y_pos, sprite))
            {
                if ((object_index == obj_cheepcheep) || ((object_index == obj_cheepcheep2) || ((object_index == obj_mushroom) || ((object_index == obj_1up) || ((object_index == obj_star) || (object_index == obj_megamushroom))))))
                    alarm[10] = -1
                if (object_index == obj_1up)
                    alarm[11] = 4
                hspeed = 2.5
            }
        }
    }
    else if (sprout == -1)
    {
        for (i = 0; i &lt; 8; i++)
        {
            with (instance_create((x + choose(32, 34, 36, 32, 34)), y, obj_coin_pow))
            {
                hspeed = choose(2, 2, 2.2, 1.5, 1.5, 3, 3)
                vspeed = choose(-1.5, -1, 0)
            }
        }
    }
    else if ((sprout == -69) || (sprout == -70))
    {
        helshell = instance_create((x + 16), y, obj_shell_held)
        helshell.mytopid = 1
        helshell.sprite_index = sprite
        helshell.hspeed = 2.9
    }
    else
    {
        shoot_right = scr_sprite_make_object((x + 16), y, sprite)
        with (shoot_right)
        {
            if ((object_index == obj_cheepcheep) || ((object_index == obj_cheepcheep2) || ((object_index == obj_mushroom) || ((object_index == obj_1up) || ((object_index == obj_star) || (object_index == obj_megamushroom))))))
                alarm[10] = -1
            if (object_index == obj_1up)
                alarm[11] = 4
            else if (object_index == obj_monty_chase)
                alarm[10] = 30
            hspeed = 3.5
        }
    }
    alarm[0] = 192
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var sprite, x_pos, y_pos, helshell;
if (sprout == 0)
{
    with (instance_create(x, y, obj_bulletbill))
    {
        if ((global.bg_level == "underwater") || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "sky")) || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "airship")) || (instance_exists(obj_lava_water) &amp;&amp; ((y &gt; (obj_lava_water.y + 16)) &amp;&amp; ((global.bg_level == "forest") &amp;&amp; (global.modo_noche == 0)))))))
            hspeed = -0.5
        else
            hspeed = -1
        direct = -1
    }
    alarm[0] = 192
}
else
{
    sprite = scr_constant_get_sprite(sprout)
    if ((sprout == -61) || ((sprout == 1) || ((sprout == 2) || ((sprout == -23) || ((sprout == -65) || ((sprout == -25) || ((sprout == -18) || (sprout == -78))))))))
    {
        x_pos = (x - 16)
        y_pos = y
    }
    else
    {
        x_pos = x
        y_pos = y
    }
    if ((global.bg_level == "underwater") || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "sky")) || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "airship")) || (instance_exists(obj_lava_water) &amp;&amp; ((y &gt; (obj_lava_water.y + 16)) &amp;&amp; ((global.bg_level == "forest") &amp;&amp; (global.modo_noche == 0)))))))
    {
        if (sprout == -1)
        {
            for (i = 0; i &lt; 8; i++)
            {
                with (instance_create((x - choose(16, 24, 18, 19, 16)), y, obj_coin_pow))
                {
                    hspeed = choose(-2, -2, -2.2, -1.5, -1.5, -3, 3)
                    vspeed = choose(-1.5, -1, 0)
                }
            }
        }
        else if ((sprout == -69) || (sprout == -70))
        {
            helshell = instance_create((x - 16), y, obj_shell_held)
            helshell.mytopid = 1
            helshell.sprite_index = sprite
            helshell.hspeed = -2.9
        }
        else
        {
            with (scr_sprite_make_object(x_pos, y_pos, sprite))
            {
                if ((object_index == obj_cheepcheep) || ((object_index == obj_cheepcheep2) || ((object_index == obj_mushroom) || ((object_index == obj_1up) || ((object_index == obj_star) || ((object_index == obj_hen_mushroom) || (object_index == obj_megamushroom)))))))
                    alarm[10] = -1
                if ((object_index == obj_cheepcheep) || (object_index == obj_cheepcheep2))
                    direct = -1
                else if (object_index == obj_1up)
                    alarm[11] = 4
                else if (object_index == obj_monty_chase)
                    alarm[10] = 30
                hspeed = -2.5
            }
        }
    }
    else if (sprout == -1)
    {
        for (i = 0; i &lt; 8; i++)
        {
            with (instance_create((x - choose(16, 24, 18, 19, 16)), y, obj_coin_pow))
            {
                hspeed = choose(-2, -2, -2.2, -1.5, -1.5, -3, 3)
                vspeed = choose(-1.5, -1, 0)
            }
        }
    }
    else if ((sprout == -69) || (sprout == -70))
    {
        helshell = instance_create((x - 16), y, obj_shell_held)
        helshell.mytopid = 1
        helshell.sprite_index = sprite
        helshell.hspeed = -2.9
    }
    else
    {
        shoot_left = scr_sprite_make_object(x_pos, y_pos, sprite)
        with (shoot_left)
        {
            if ((object_index == obj_cheepcheep) || ((object_index == obj_cheepcheep2) || ((object_index == obj_mushroom) || ((object_index == obj_1up) || ((object_index == obj_star) || ((object_index == obj_hen_mushroom) || (object_index == obj_megamushroom)))))))
                alarm[10] = -1
            if ((object_index == obj_cheepcheep) || (object_index == obj_cheepcheep2))
                direct = -1
            if (object_index == obj_1up)
                alarm[11] = 4
            hspeed = -3.5
        }
    }
    alarm[0] = 192
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>imdead = instance_create((x + 8), y, obj_enemy_dead)
imdead.girar = 1
if (global.apariencia == 0)
{
    imdead.sprite_index = spr_SMB_bulletbill_base_deads
    imdead.image_speed = 0
}
else if (global.apariencia == 1)
{
    imdead.sprite_index = spr_SMB3_bulletbill_base_deads
    imdead.image_speed = 0
}
else if (global.apariencia == 2)
    imdead.sprite_index = spr_bulletbill_base_deads
if ((global.bg_level == "castle") || ((global.bg_level == "ghost") || ((global.bg_level == "underground") || (global.modo_noche == 1))))
    imdead.image_index = 1
else
    imdead.image_index = 0
if (other.hspeed == 0)
{
    if ((other.bbox_left + (bbox_right / 2)) &lt; (bbox_left + (bbox_right / 2)))
        imdead.hspeed = 1
    else if ((other.bbox_left + (bbox_right / 2)) &gt; (bbox_left + (bbox_right / 2)))
        imdead.hspeed = -1
}
else if (other.hspeed &gt; 0)
    imdead.hspeed = 1
else if (other.hspeed &lt; 0)
    imdead.hspeed = -1
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (v = 0; v &lt; size_y; v++)
{
    if (v == 0)
        index = 0
    else if (v == 1)
        index = 1
    else
        index = 2
    draw_sprite(sprite, index, x, (y + (v * 16)))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
