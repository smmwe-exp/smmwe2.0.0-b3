<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_1up</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_powerupparent</parentName>
  <maskName>spr_mask_vine</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.apariencia == 0)
{
    if ((global.modo_noche == 1) &amp;&amp; (global.bg_level == "ground"))
        sprite_index = spr_SMB_rotten
    else
    {
        sprite_index = spr_SMB_1up
        image_index = 1
    }
    sprite_wings = 370
}
else if (global.apariencia == 1)
{
    if ((global.modo_noche == 1) &amp;&amp; (global.bg_level == "ground"))
        sprite_index = spr_SMB3_rotten
    else
    {
        sprite_index = spr_SMB3_1up
        image_index = 1
    }
    sprite_wings = 1064
}
else if (global.apariencia == 2)
{
    if ((global.modo_noche == 1) &amp;&amp; (global.bg_level == "ground"))
        sprite_index = spr_rotten
    else
        image_index = 1
    sprite_wings = 1928
}
else if (global.apariencia == 4)
{
    if ((global.modo_noche == 1) &amp;&amp; (global.bg_level == "ground"))
        sprite_index = spr_SMB2_rotten
    else
    {
        if ((global.bg_level == "castle") || ((global.bg_level == "underground") || ((global.bg_level == "ghost") || (global.modo_noche == 1))))
            image_index = 1
        else
            image_index = 0
        sprite_index = spr_SMB2_1up
    }
    sprite_wings = 1928
}
else
    sprite_wings = 1928
image_speed = 0
swimming = 0
hardness = 100
stomp = -1
edible = 0
direct = 1
delay = 0
charge = 0
ready = 0
xscale2 = 1
yscale2 = 1
wings = 0
wings_anim = 0
paracaidas = 0
alarm[10] = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (paracaidas == 0)
{
    if ((global.modo_noche == 1) &amp;&amp; (global.bg_level == "ground"))
    {
        charge = 1
        image_speed = 0.35
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((wings == 1) &amp;&amp; (paracaidas == 0))
{
    hspeed = -0.6
    vspeed = -0.5
}
else if (paracaidas == 1)
    hspeed = -0.6
else if (paracaidas == 0)
{
    if ((global.modo_noche == 1) &amp;&amp; (global.bg_level == "ground"))
    {
        charge = 1
        image_speed = 0.35
        if (wings == 1)
        {
            hspeed = -0.6
            vspeed = -0.5
        }
    }
    else if (wings == 1)
    {
        hspeed = -0.6
        vspeed = -0.5
    }
    else if (swimming == 1)
        hspeed = 0.5
    else
        hspeed = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
if (wings == 0)
{
    if ((global.bg_level == "underwater") || ((global.bg_level == "sky") &amp;&amp; (global.modo_noche == 1)))
    {
        if (hspeed &gt; 0.5)
        {
            hspeed -= 0.08
            if (hspeed &lt;= 0.5)
                hspeed = 0.5
        }
        else if (hspeed &lt; -0.5)
        {
            hspeed += 0.08
            if (hspeed &gt;= -0.5)
                hspeed = -0.5
        }
    }
    else if (hspeed &gt; 1)
    {
        hspeed -= 0.08
        if (hspeed &lt;= 1)
            hspeed = 1
    }
    else if (hspeed &lt; -1)
    {
        hspeed += 0.08
        if (hspeed &gt;= -1)
            hspeed = -1
    }
}
if (charge == 1)
{
    if ((gravity == 0) &amp;&amp; (wings == 0))
    {
        if (!instance_exists(obj_invincibility))
        {
            if ((!instance_exists(obj_mario)) || (obj_mario.x &lt; x))
            {
                hspeed -= 0.0324
                if (hspeed &lt; -1)
                    hspeed = -1
            }
            else
            {
                hspeed += 0.0324
                if (hspeed &gt; 1)
                    hspeed = 1
            }
        }
        else if ((!instance_exists(obj_mario)) || (obj_mario.x &lt; x))
        {
            hspeed += 0.0324
            if (hspeed &gt; 1)
                hspeed = 1
        }
        else
        {
            hspeed -= 0.0324
            if (hspeed &lt; -1)
                hspeed = -1
        }
        if (delay &gt; 0)
            delay--
    }
    if (ready == 0)
    {
        xscale2 += 0.025
        yscale2 -= 0.025
        if (xscale2 &gt; 1.25)
            ready = 1
    }
    else if (ready == 1)
    {
        xscale2 -= 0.025
        yscale2 += 0.025
        if (xscale2 &lt; 0.75)
            ready = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mario">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((global.modo_noche == 1) &amp;&amp; (global.bg_level == "ground"))
{
    if instance_exists(obj_invincibility)
    {
        audio_play_sound(scr_snd_kick(), 0, false)
        with (instance_create((x - 8), y, obj_score))
            event_user(9)
        instance_create(x, y, obj_smoke)
        instance_destroy()
    }
    else if ((!instance_exists(obj_invincibility)) &amp;&amp; (obj_mario.invincible == 0))
    {
        with (instance_create(other.x, other.y, obj_smoke))
        {
            sprite_index = spr_smoke_rotten
            depth = -11
        }
        instance_create(other.x, other.y, obj_rotten_signal)
        with (other.id)
            event_user(0)
        instance_destroy()
    }
}
else
{
    if (global.apariencia == 4)
    {
        audio_stop_sound(snd_SMB2_1up)
        audio_play_sound(snd_SMB2_1up, 0, false)
    }
    else if (global.apariencia &lt; 2)
    {
        audio_stop_sound(snd_SMB3_1up)
        audio_play_sound(snd_SMB3_1up, 0, false)
    }
    else
    {
        audio_stop_sound(snd_1up)
        audio_play_sound(snd_1up, 0, false)
    }
    with (instance_create(x, y, obj_score))
        event_user(7)
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var col_one_left, col_one_right;
if ((global.modo_noche == 1) &amp;&amp; (global.bg_level == "ground"))
{
    if (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_solid, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_solid, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_bullebill_base, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_bullebill_base, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_block_pow_hold, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_block_pow_hold, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_muncher, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_muncher, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_pinchos, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_pinchos, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_spring_land, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_spring_land, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_enemyparent_held, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_enemyparent_held, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_cannon, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_cannon, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_estalactita, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_estalactita, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_estalactita2, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_estalactita2, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left + (hspeed * 2)), (bbox_top + 4), (bbox_left + (hspeed * 2)), (bbox_bottom - 1), obj_thwomp, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle((bbox_right + (hspeed * 2)), (bbox_top + 4), (bbox_right + (hspeed * 2)), (bbox_bottom - 1), obj_thwomp, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)) || ((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)))))))))))))))))))))))))
    {
        col_one_left = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)
        col_one_right = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)
        if ((hspeed &gt; 0) &amp;&amp; col_one_left)
        {
            if (!audio_is_playing(snd_oneway))
                audio_play_sound(snd_oneway, 0, false)
            with (col_one_left)
                rot = 1
        }
        if ((hspeed &lt; 0) &amp;&amp; col_one_right)
        {
            if (!audio_is_playing(snd_oneway))
                audio_play_sound(snd_oneway, 0, false)
            with (col_one_right)
                rot = 1
        }
        if ((delay == 0) &amp;&amp; (gravity == 0))
        {
            if ((global.bg_level == "underwater") || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "sky")) || ((global.modo_noche == 1) &amp;&amp; (global.bg_level == "airship"))))
            {
                vspeed = -2.4
                audio_stop_sound(snd_rotten)
                audio_play_sound(snd_rotten, 0, false)
            }
            else
            {
                vspeed = -4.8
                audio_stop_sound(snd_rotten)
                audio_play_sound(snd_rotten, 0, false)
            }
            delay = 6
            y--
        }
    }
    if ((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_solid, 0, 0))
        x++
    if ((hspeed &gt; 0) &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_solid, 0, 0))
        x--
    if ((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_bullebill_base, 0, 0))
        x++
    if ((hspeed &gt; 0) &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_bullebill_base, 0, 0))
        x--
    if ((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_block_pow_hold, 0, 0))
        x++
    if ((hspeed &gt; 0) &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_block_pow_hold, 0, 0))
        x--
    if ((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_muncher, 0, 0))
        x++
    if ((hspeed &gt; 0) &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_muncher, 0, 0))
        x--
    if ((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_pinchos, 0, 0))
        x++
    if ((hspeed &gt; 0) &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_pinchos, 0, 0))
        x--
    if ((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_thwomp, 0, 0))
        x++
    if ((hspeed &gt; 0) &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_thwomp, 0, 0))
        x--
    if ((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_cannon, 0, 0))
        x++
    if ((hspeed &gt; 0) &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_cannon, 0, 0))
        x--
    if ((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left + hspeed), (bbox_top + 4), (bbox_left + hspeed), (bbox_bottom - 1), obj_onewaygate_right, 0, 0))
        x++
    if ((hspeed &gt; 0) &amp;&amp; collision_rectangle((bbox_right + hspeed), (bbox_top + 4), (bbox_right + hspeed), (bbox_bottom - 1), obj_onewaygate_left, 0, 0))
        x--
}
else
    event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
