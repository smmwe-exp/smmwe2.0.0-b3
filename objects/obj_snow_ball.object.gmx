<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_snow_ball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemyparent_held</parentName>
  <maskName>spr_shell</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
if (global.apariencia == 0)
{
    imagen = 327
    sprite_index = spr_SMB_snow_ball
}
else if (global.apariencia == 1)
{
    imagen = 1057
    sprite_index = spr_SMB3_snow_ball
}
else if (global.apariencia == 2)
    imagen = 1816
else if (global.apariencia == 4)
{
    imagen = 3602
    sprite_index = spr_SMB2_snow_ball
}
else
    imagen = 1816
image_speed = 0
image_index = 2
fisica = 0
can_dead = 1
direct_spike = -1
angle = 0
hitpoint = 0
dead_h = 0
swimming = 0
dead_h = 0
apilar = 0
inmune = 0
kickme = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inmune = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>kickme = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_dead = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var check, check_pinchos, check_solid, check_oneway, check_cannon, check_bullet, check_muncher, check_pinchos2;
if ((y &gt;= (room_height - 24)) &amp;&amp; ((global.bg_level == "castle") &amp;&amp; (obj_levelmanager.editor == 0)))
{
    if (global.apariencia != 0)
    {
        with (instance_create((x + 8), (y - 12), obj_smoke))
        {
            if (global.apariencia == 1)
                sprite_index = spr_SMB3_splash_lava
            else if (global.apariencia == 2)
                sprite_index = spr_splash_lava
            depth = -10
        }
    }
    event_user(0)
}
if ((y &gt;= (room_height - 24)) &amp;&amp; ((global.bg_level == "forest") &amp;&amp; ((global.modo_noche == 1) &amp;&amp; (obj_levelmanager.editor == 0))))
{
    if (global.apariencia != 0)
    {
        with (instance_create(x, (y - 16), obj_smoke))
        {
            if (global.apariencia == 1)
                sprite_index = spr_SMB3_splash_lava_purple
            else if (global.apariencia == 2)
                sprite_index = spr_splash_lava_purple
            depth = -10
        }
    }
    event_user(0)
}
if (instance_exists(obj_mario) &amp;&amp; (global.apariencia == 4))
{
    check = collision_rectangle(obj_mario.bbox_left, (obj_mario.bbox_bottom - 1), obj_mario.bbox_right, (obj_mario.bbox_bottom + 1), obj_solidtop, 0, 0)
    check_pinchos = collision_rectangle(obj_mario.bbox_left, (obj_mario.bbox_bottom - 1), obj_mario.bbox_right, (obj_mario.bbox_bottom + 1), obj_pinchos, 0, 0)
    check_solid = collision_rectangle(obj_mario.bbox_left, (obj_mario.bbox_top - 2), obj_mario.bbox_right, obj_mario.bbox_top, obj_solid, 1, 0)
    check_oneway = collision_rectangle(obj_mario.bbox_left, (obj_mario.bbox_top - 2), obj_mario.bbox_right, obj_mario.bbox_top, obj_onewaygate_bottom, 1, 0)
    check_cannon = collision_rectangle(obj_mario.bbox_left, (obj_mario.bbox_top - 2), obj_mario.bbox_right, obj_mario.bbox_top, obj_cannon, 1, 0)
    check_bullet = collision_rectangle(obj_mario.bbox_left, (obj_mario.bbox_top - 2), obj_mario.bbox_right, obj_mario.bbox_top, obj_bullebill_base, 1, 0)
    check_muncher = collision_rectangle(obj_mario.bbox_left, (obj_mario.bbox_top - 2), obj_mario.bbox_right, obj_mario.bbox_top, obj_muncher, 1, 0)
    check_pinchos2 = collision_rectangle(obj_mario.bbox_left, (obj_mario.bbox_top - 2), obj_mario.bbox_right, obj_mario.bbox_top, obj_pinchos, 1, 0)
    if ((((check &amp;&amp; (check != id)) || check_pinchos) &amp;&amp; (vspeed &gt;= 0)) || ((((check &amp;&amp; (check != id)) || check_pinchos) &amp;&amp; ((vspeed &lt; 0) &amp;&amp; (y &gt; (obj_mario.y + 32)))) || ((check_solid || (check_oneway || (check_cannon || (check_bullet || (check_muncher || check_pinchos2))))) &amp;&amp; (vspeed &lt; 0))))
    {
        obj_mario.inclown = 0
        exit
    }
    if (collision_rectangle(bbox_left, (bbox_top - 8), bbox_right, (bbox_top + 7), obj_mario, 0, 0) &amp;&amp; ((obj_mario.state &lt; 2) &amp;&amp; (speed != 0)))
    {
        if ((!check) || ((check.y &gt; y) || (check.y == y)))
        {
            if (vspeed == 0)
                obj_mario.y = ceil((bbox_top - 31))
            else
                obj_mario.y = ceil((bbox_top - (31 - vspeed)))
            if (((hspeed &gt; 0) &amp;&amp; (!collision_rectangle((obj_mario.bbox_right + hspeed), obj_mario.bbox_top, (obj_mario.bbox_right + hspeed), (obj_mario.bbox_bottom - 1), obj_onewaygate_left, 0, 0))) || ((hspeed &lt; 0) &amp;&amp; (!collision_rectangle((obj_mario.bbox_left + hspeed), obj_mario.bbox_top, (obj_mario.bbox_left + hspeed), (obj_mario.bbox_bottom - 1), obj_onewaygate_right, 0, 0))))
                obj_mario.x += hspeed
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemyparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (can_dead == 1)
{
    if (((hspeed != 0) &amp;&amp; ((held == 0) &amp;&amp; (vspeed &lt;= 0))) &amp;&amp; ((other.hardness &lt; 99) &amp;&amp; ((other.sprite_index != spr_beachkoopa) &amp;&amp; (other.sprite_index != spr_beachkoopa_red))))
    {
        audio_play_sound(scr_snd_kick(), 0, false)
        with (other.id)
            event_user(0)
    }
    else if ((vspeed &lt; 0) &amp;&amp; ((held == 0) &amp;&amp; ((other.hardness &lt; 99) &amp;&amp; ((other.sprite_index != spr_beachkoopa) &amp;&amp; (other.sprite_index != spr_beachkoopa_red)))))
    {
        audio_play_sound(scr_snd_kick(), 0, false)
        with (other.id)
            event_user(0)
    }
    else if ((held == 1) &amp;&amp; (other.hardness &lt; 99))
    {
        audio_play_sound(scr_snd_kick(), 0, false)
        with (other.id)
            event_user(0)
        event_user(0)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mario">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (kickme == 1)
{
    if (held == 0)
    {
        if (scr_canhold() &amp;&amp; ((!instance_exists(obj_invincibility)) &amp;&amp; (!inwall)))
        {
            other.holding = 2
            held = 1
            depth = -7
            gravity = 0
            speed = 0
        }
        else if (inmune == 0)
        {
            if (((other.stompstyle == 1) &amp;&amp; (other.bbox_bottom &lt; ((bbox_top - vspeed) + 5))) || ((global.yoshi == 2) &amp;&amp; ((other.bbox_bottom &lt; ((bbox_top - vspeed) + 5)) &amp;&amp; (other.vspeed &gt; 0))))
            {
                if (global.apariencia &lt; 2)
                {
                    if instance_exists(obj_kuribo_drybones)
                        audio_play_sound(snd_SMB3_kick, 0, false)
                    else
                        audio_play_sound(snd_step_enemy, 0, false)
                }
                else
                    audio_play_sound(snd_kick, 0, false)
                with (other.id)
                    event_user(1)
                instance_create(other.x, (other.y + 22), obj_spinthump)
                event_user(0)
            }
            else if ((global.apariencia == 4) &amp;&amp; ((other.bbox_bottom &lt; ((bbox_top - vspeed) + 7)) &amp;&amp; ((other.y &lt; (y - 28)) &amp;&amp; (other.y &gt; (y - 32)))))
            {
            }
            else if ((vspeed &gt;= 0) || ((vspeed &gt;= 0) &amp;&amp; (global.yoshi &gt; 0)))
            {
                audio_play_sound(scr_snd_kick(), 0, false)
                with (instance_create(x, y, obj_smoke))
                    sprite_index = spr_spinthump
                with (obj_mario)
                {
                    if (holding == 0)
                        event_user(7)
                }
                with (instance_create((x + 8), y, obj_snow_ball_held))
                {
                    alarm[0] = 5
                    fisica = 1
                    vspeed = -0.5
                    if instance_exists(obj_mario)
                    {
                        if (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "sky")) || ((global.modo_noche == 1) &amp;&amp; (global.bg_level == "airship")))
                        {
                            if ((!instance_exists(obj_mario)) || (obj_mario.x &lt; x))
                                hspeed = 2.5
                            else
                                hspeed = -2.5
                        }
                        else if ((!instance_exists(obj_mario)) || (obj_mario.x &lt; x))
                            hspeed = 3.5
                        else
                            hspeed = -3.5
                    }
                    inmune = 1
                    alarm[2] = 12
                }
                instance_destroy()
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((global.bg_level == "underwater") || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "airship")) || ((global.modo_noche == 1) &amp;&amp; (global.bg_level == "sky"))))
    vspeed = -2
else
    vspeed = -5
if (other.hspeed == 0)
{
    if (((other.bbox_left + other.bbox_right) / 2) &lt; ((bbox_left + bbox_right) / 2))
        hspeed = 0.6
    else if (((other.bbox_left + other.bbox_right) / 2) &gt; ((bbox_left + bbox_right) / 2))
        hspeed = -0.6
}
else if (other.hspeed &gt; 0)
    hspeed = 0.6
else if (other.hspeed &lt; 0)
    hspeed = -0.6
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var semisolid, solidpow, solidthwomp, solidmuncher, solidpinchos, lava_lift, check, plataforma, check_pinchos, check_solid, check_oneway, check_cannon, check_bullet, check_muncher;
if (vspeed &gt;= 0)
{
    semisolid = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_solidtop, 0, 0)
    solidpow = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_block_pow_hold, 0, 0)
    solidthwomp = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_thwomp, 0, 0)
    solidmuncher = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_muncher, 0, 0)
    solidpinchos = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_pinchos, 0, 0)
    if (semisolid &amp;&amp; ((bbox_bottom &lt; (semisolid.yprevious + 5)) &amp;&amp; ((obj_levelmanager.editor == 0) &amp;&amp; (!collision_rectangle((x - 1), bbox_bottom, (x + 1), (bbox_bottom + 4), obj_slopeparent, 1, 0)))))
        y = (semisolid.bbox_top - 16)
    if (solidmuncher &amp;&amp; ((bbox_bottom &lt; (solidmuncher.yprevious + 5)) &amp;&amp; ((obj_levelmanager.editor == 0) &amp;&amp; (!collision_rectangle((x - 1), bbox_bottom, (x + 1), (bbox_bottom + 4), obj_slopeparent, 1, 0)))))
        y = (solidmuncher.bbox_top - 16)
    if (solidpinchos &amp;&amp; ((bbox_bottom &lt; (solidpinchos.yprevious + 5)) &amp;&amp; ((obj_levelmanager.editor == 0) &amp;&amp; (!collision_rectangle((x - 1), bbox_bottom, (x + 1), (bbox_bottom + 4), obj_slopeparent, 1, 0)))))
        y = (solidpinchos.bbox_top - 16)
    if (solidpow &amp;&amp; ((bbox_bottom &lt; (solidpow.yprevious + 5)) &amp;&amp; ((obj_levelmanager.editor == 0) &amp;&amp; (!collision_rectangle((x - 1), bbox_bottom, (x + 1), (bbox_bottom + 4), obj_slopeparent, 1, 0)))))
        y = (solidpow.bbox_top - 16)
    if (solidthwomp &amp;&amp; ((bbox_bottom &lt; (solidthwomp.yprevious + 5)) &amp;&amp; ((obj_levelmanager.editor == 0) &amp;&amp; (!collision_rectangle((x - 1), bbox_bottom, (x + 1), (bbox_bottom + 4), obj_slopeparent, 1, 0)))))
        y = (solidthwomp.bbox_top - 16)
}
if (collision_rectangle((x - 1), bbox_bottom, (x + 1), (bbox_bottom + 4), obj_slopeparent, 1, 0) &amp;&amp; ((!collision_rectangle((x - 1), (bbox_bottom - 4), (x + 1), (bbox_bottom - 4), obj_slopeparent, 1, 0)) &amp;&amp; (vspeed == 0)))
{
    if (!collision_rectangle((x - 1), bbox_bottom, (x + 1), (bbox_bottom + 5), obj_solidtop, 0, 0))
        y += 4
}
if ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_solidtop, 0, 0))) || ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_block_pow_hold, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_block_pow_hold, 0, 0))) || ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_muncher, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_muncher, 0, 0))) || ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_pinchos, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_pinchos, 0, 0))) || ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_thwomp, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_thwomp, 0, 0))) || collision_rectangle((x - 1), bbox_bottom, (x + 1), (bbox_bottom + 4), obj_slopeparent, 1, 0))))))
{
    gravity = 0
    if (vspeed &gt; 0.5)
        vspeed = ((-vspeed) / 2)
    else if ((vspeed &gt; 0) &amp;&amp; (vspeed &lt;= 0.5))
        vspeed = 0
}
else if (modo_lava == 1)
    event_user(0)
else if (!swimming)
{
    gravity = 0.2
    if (vspeed &gt; 3.5)
        vspeed = 3.5
}
else if (swimming == 1)
{
    gravity = 0.03
    if (vspeed &gt; 0.5)
        vspeed = 0.5
}
if ((vspeed &lt; 0) &amp;&amp; (collision_rectangle((bbox_left + 1), (bbox_top - 1), (bbox_right - 1), bbox_top, obj_solid, 1, 0) || (collision_rectangle((bbox_left + 1), (bbox_top - 1), (bbox_right - 1), bbox_top, obj_onewaygate_bottom, 1, 0) || (collision_rectangle((bbox_left + 1), (bbox_top - 1), (bbox_right - 1), bbox_top, obj_pinchos, 1, 0) || (collision_rectangle((bbox_left + 1), (bbox_top - 1), (bbox_right - 1), bbox_top, obj_cannon, 1, 0) || (collision_rectangle((bbox_left + 1), (bbox_top - 1), (bbox_right - 1), bbox_top, obj_bullebill_base, 1, 0) || collision_rectangle((bbox_left + 1), (bbox_top - 1), (bbox_right - 1), bbox_top, obj_muncher, 1, 0)))))))
{
    while collision_rectangle((bbox_left + 1), bbox_top, (bbox_right - 1), bbox_top, obj_solid, 1, 0)
        y++
    vspeed = 0
    gravity = 0
}
lava_lift = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + 2), obj_lava_lift, 0, 0)
if (lava_lift &amp;&amp; ((y &lt; (lava_lift.y - 12)) &amp;&amp; (vspeed == 0)))
{
    check = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0)
    if (check &amp;&amp; (check != lava_lift))
        exit
    if (lava_lift.vspeed == 0)
        y = ceil((lava_lift.bbox_top - 16))
    else
        y = ceil((lava_lift.bbox_top - (16 - vspeed)))
    if (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_solid, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_pinchos, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_cannon, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_bullebill_base, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_muncher, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_solid, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_pinchos, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_cannon, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_bullebill_base, 0, 0))) || ((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_muncher, 0, 0))))))))))))
        x += lava_lift.hspeed
}
plataforma = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + 2), obj_plataforma, 0, 0)
if (plataforma &amp;&amp; ((y &lt; (plataforma.y - 12)) &amp;&amp; (vspeed == 0)))
{
    check = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0)
    check_pinchos = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_pinchos, 0, 0)
    check_solid = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_solid, 0, 0)
    check_oneway = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_onewaygate_bottom, 0, 0)
    check_cannon = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_cannon, 0, 0)
    check_bullet = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_bullebill_base, 0, 0)
    check_muncher = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_muncher, 0, 0)
    if (((check || check_pinchos) &amp;&amp; (plataforma.vspeed &gt; 0)) || ((check_solid || (check_oneway || (check_cannon || (check_bullet || check_muncher)))) &amp;&amp; (plataforma.vspeed &lt; 0)))
        exit
    if (plataforma.vspeed == 0)
        y = ceil((plataforma.bbox_top - 16))
    else
        y = ceil((plataforma.bbox_top - (16 - vspeed)))
    if (((plataforma.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + plataforma.hspeed), bbox_top, (bbox_right + plataforma.hspeed), (bbox_bottom - 1), obj_solid, 0, 0))) || (((plataforma.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + plataforma.hspeed), bbox_top, (bbox_right + plataforma.hspeed), (bbox_bottom - 1), obj_pinchos, 0, 0))) || (((plataforma.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + plataforma.hspeed), bbox_top, (bbox_right + plataforma.hspeed), (bbox_bottom - 1), obj_cannon, 0, 0))) || (((plataforma.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + plataforma.hspeed), bbox_top, (bbox_right + plataforma.hspeed), (bbox_bottom - 1), obj_bullebill_base, 0, 0))) || (((plataforma.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + plataforma.hspeed), bbox_top, (bbox_right + plataforma.hspeed), (bbox_bottom - 1), obj_muncher, 0, 0))) || (((plataforma.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + plataforma.hspeed), bbox_top, (bbox_left + plataforma.hspeed), (bbox_bottom - 1), obj_solid, 0, 0))) || (((plataforma.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + plataforma.hspeed), bbox_top, (bbox_left + plataforma.hspeed), (bbox_bottom - 1), obj_pinchos, 0, 0))) || (((plataforma.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + plataforma.hspeed), bbox_top, (bbox_left + plataforma.hspeed), (bbox_bottom - 1), obj_cannon, 0, 0))) || (((plataforma.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + plataforma.hspeed), bbox_top, (bbox_left + plataforma.hspeed), (bbox_bottom - 1), obj_bullebill_base, 0, 0))) || ((plataforma.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + plataforma.hspeed), bbox_top, (bbox_left + plataforma.hspeed), (bbox_bottom - 1), obj_muncher, 0, 0))))))))))))
        x += plataforma.hspeed
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var lugar;
if keyboard_check(global.abajo)
{
    if collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_solid, 0, 0)
    {
        inwall = 1
        hspeed = 0
    }
    if (!collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_slopeparent, 1, 0))
        hspeed = (0.4 * obj_mario.direct)
    else
        vspeed = 0.1
    obj_mario.isduckhold = 0
    inmune = 1
    alarm[6] = 15
}
else if (keyboard_check(global.arriba) &amp;&amp; (global.apariencia == 2))
{
    audio_play_sound(scr_snd_kick(), 0, false)
    with (obj_mario)
        event_user(7)
    obj_mario.stompstyle = 0
    with (instance_create(x, y, obj_smoke))
        sprite_index = spr_spinthump
    if (obj_mario.hspeed == 0)
        hspeed = 0
    else
        hspeed = (obj_mario.direct / 2)
    if ((global.bg_level == "underwater") || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "airship")) || ((global.modo_noche == 1) &amp;&amp; (global.bg_level == "sky"))))
    {
        vspeed = -3.5
        swimming = 1
    }
    else
        vspeed = -7
    if collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_solid, 0, 0)
        inwall = 1
}
else if (vspeed &gt;= 0)
{
    audio_play_sound(scr_snd_kick(), 0, false)
    with (obj_mario)
        event_user(7)
    obj_mario.stompstyle = 0
    with (instance_create(x, y, obj_smoke))
        sprite_index = spr_spinthump
    if place_meeting(x, y, obj_solid)
    {
        if (obj_mario.direct == 1)
            lugar = (x - 16)
        else
            lugar = (x + 16)
    }
    else
        lugar = x
    with (instance_create(lugar, y, obj_snow_ball_held))
    {
        alarm[0] = 5
        fisica = 1
        vspeed = -0.5
        hspeed = (4.5 * sign(obj_mario.direct))
    }
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (instance_create(x, y, obj_smoke))
{
    if (global.apariencia == 2)
        sprite_index = spr_snow_ball_effect
    else if (global.apariencia == 4)
        sprite_index = spr_SMB2_snow_ball_effect
    else
        sprite_index = spr_SMB3_snow_ball_effect
    image_speed = 0.25
}
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(imagen, 2, (round(x) + 8), (y + 8), 1, 1, angle, c_white, 1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
