<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_block_pow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_holdparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
if (global.apariencia == 0)
    sprite_index = spr_SMB_pow
else if (global.apariencia == 1)
    sprite_index = spr_SMB3_pow
else if (global.apariencia == 3)
    sprite_index = spr_NSMBU_pow
else if (global.apariencia == 4)
{
    if ((global.bg_level == "castle") || ((global.bg_level == "underground") || ((global.bg_level == "ghost") || (global.modo_noche == 1))))
        sprite_index = spr_SMB2_pow_night
    else
        sprite_index = spr_SMB2_pow
}
if (global.apariencia == 3)
    image_speed = 0.3
else
    image_speed = 0.15
explode = 0
inmune = 0
mytop = instance_create(x, y, obj_solidtop)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(mytop)
{
    with (mytop)
        instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inmune = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var check, check_pinchos, check_solid, check_oneway, check_cannon, check_bullet, check_muncher, check_pinchos2;
if instance_exists(obj_mario)
{
    check = collision_rectangle(obj_mario.bbox_left, (obj_mario.bbox_bottom - 1), obj_mario.bbox_right, (obj_mario.bbox_bottom + 1), obj_solidtop, 0, 0)
    check_pinchos = collision_rectangle(obj_mario.bbox_left, (obj_mario.bbox_bottom - 1), obj_mario.bbox_right, (obj_mario.bbox_bottom + 1), obj_pinchos, 0, 0)
    check_solid = collision_rectangle(obj_mario.bbox_left, (obj_mario.bbox_top - 2), obj_mario.bbox_right, obj_mario.bbox_top, obj_solid, 1, 0)
    check_oneway = collision_rectangle(obj_mario.bbox_left, (obj_mario.bbox_top - 2), obj_mario.bbox_right, obj_mario.bbox_top, obj_onewaygate_bottom, 1, 0)
    check_cannon = collision_rectangle(obj_mario.bbox_left, (obj_mario.bbox_top - 2), obj_mario.bbox_right, obj_mario.bbox_top, obj_cannon, 1, 0)
    check_bullet = collision_rectangle(obj_mario.bbox_left, (obj_mario.bbox_top - 2), obj_mario.bbox_right, obj_mario.bbox_top, obj_bullebill_base, 1, 0)
    check_muncher = collision_rectangle(obj_mario.bbox_left, (obj_mario.bbox_top - 2), obj_mario.bbox_right, obj_mario.bbox_top, obj_muncher, 1, 0)
    check_pinchos2 = collision_rectangle(obj_mario.bbox_left, (obj_mario.bbox_top - 2), obj_mario.bbox_right, obj_mario.bbox_top, obj_pinchos, 1, 0)
    if ((((check &amp;&amp; (check != id)) || check_pinchos) &amp;&amp; (vspeed &gt;= 0)) || ((((check &amp;&amp; (check != id)) || check_pinchos) &amp;&amp; ((vspeed &lt; 0) &amp;&amp; (y &gt; (obj_mario.y + 32)))) || ((check_solid || (check_oneway || (check_cannon || (check_bullet || (check_muncher || check_pinchos2))))) &amp;&amp; (vspeed &lt; 0))))
    {
        obj_mario.inclown = 0
        exit
    }
    if (collision_rectangle(bbox_left, (bbox_top - 8), bbox_right, (bbox_top + 7), obj_mario, 0, 0) &amp;&amp; ((obj_mario.state &lt; 2) &amp;&amp; ((inmune == 0) &amp;&amp; (speed != 0))))
    {
        if ((!check) || ((check.y &gt; y) || (check.y == y)))
        {
            if (vspeed == 0)
                obj_mario.y = ceil((bbox_top - 31))
            else
                obj_mario.y = ceil((bbox_top - (31 - vspeed)))
            if (((hspeed &gt; 0) &amp;&amp; (!collision_rectangle((obj_mario.bbox_right + hspeed), obj_mario.bbox_top, (obj_mario.bbox_right + hspeed), (obj_mario.bbox_bottom - 1), obj_onewaygate_left, 0, 0))) || ((hspeed &lt; 0) &amp;&amp; (!collision_rectangle((obj_mario.bbox_left + hspeed), obj_mario.bbox_top, (obj_mario.bbox_left + hspeed), (obj_mario.bbox_bottom - 1), obj_onewaygate_right, 0, 0))))
                obj_mario.x -= hspeed
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var col_mario, col_estalactita;
col_mario = collision_rectangle(bbox_left, (bbox_top - 6), bbox_right, bbox_top, obj_mario, 1, 0)
if instance_exists(obj_mario)
{
    if (col_mario &amp;&amp; ((global.powerup == -77) &amp;&amp; ((global.yoshi == 0) &amp;&amp; (obj_mario.can_break_block == 1))))
    {
        explode = 1
        event_user(6)
        with (obj_mario)
        {
            jumpnow = 2
            state = 2
            alarm[4] = 15
            if (isswim == 1)
                vspeed = -2
            else
                vspeed = -4
            y--
        }
    }
}
if (collision_rectangle(bbox_left, (bbox_top - 8), bbox_right, (bbox_top + 7), obj_mario, 0, 0) &amp;&amp; ((image_speed != 0) &amp;&amp; ((inmune == 0) &amp;&amp; ((speed != 0) &amp;&amp; (gravity != 0)))))
{
    hspeed = (max(0, (abs(hspeed) - 0.075)) * sign(hspeed))
    if (abs(hspeed) &lt; 0.075)
        hspeed = 0
    obj_mario.x += hspeed
    obj_mario.y = ceil((bbox_top - (31 - vspeed)))
}
col_estalactita = collision_rectangle(bbox_left, (bbox_top - 6), bbox_right, bbox_top, obj_estalactita, 1, 0)
if (col_estalactita &amp;&amp; ((col_estalactita.vspeed &gt; 0) &amp;&amp; (held == 0)))
{
    explode = 1
    event_user(6)
    with (col_estalactita)
        event_user(0)
}
if instance_exists(mytop)
{
    mytop.x = x
    mytop.y = y
}
if (held == 0)
{
    if ((global.bg_level == "underwater") || (((global.bg_level == "sky") &amp;&amp; (global.modo_noche == 1)) || (((global.bg_level == "airship") &amp;&amp; (global.modo_noche == 1)) || (instance_exists(obj_lava_water) &amp;&amp; ((y &gt; (obj_lava_water.y + 16)) &amp;&amp; ((global.bg_level == "forest") &amp;&amp; (global.modo_noche == 0)))))))
        swimming = 1
    else
        swimming = 0
    if instance_exists(obj_mario)
    {
        if (inwall == 0)
        {
            if collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_block_pow_hold, 0, 0)
            {
                gravity = 0
                vspeed = 0
            }
            col_shell1 = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + 1), obj_shell, 0, 0)
            if (col_shell1 &amp;&amp; ((col_shell1.vspeed &lt; 0) &amp;&amp; (obj_mario.holding == 0)))
            {
                explode = 1
                event_user(6)
            }
            col_shell2 = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + 1), obj_shell_held, 0, 0)
            if (col_shell2 &amp;&amp; (col_shell2.bbox_bottom &gt; (bbox_top + 5)))
            {
                explode = 1
                event_user(6)
                with (col_shell2)
                    event_user(0)
            }
            col_bobomb = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + 1), obj_bobomb_hold, 0, 0)
            if (col_bobomb &amp;&amp; ((col_bobomb.bbox_bottom &gt; (bbox_top + 5)) &amp;&amp; (col_bobomb.held == 0)))
            {
                explode = 1
                event_user(6)
            }
            event_user(3)
            event_user(4)
            if (gravity == 0)
            {
                if (swimming == 0)
                {
                    hspeed = (max(0, (abs(hspeed) - 0.145)) * sign(hspeed))
                    if (abs(hspeed) &lt; 0.145)
                        hspeed = 0
                }
                else if (swimming == 1)
                {
                    hspeed = (max(0, (abs(hspeed) - 0.245)) * sign(hspeed))
                    if (abs(hspeed) &lt; 0.244)
                        hspeed = 0
                }
            }
            if (collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_solid, 0, 0) &amp;&amp; (vspeed &lt; 0))
            {
                speed = 0
                gravity = 0
                inwall = 1
            }
        }
        else
        {
            gravity /= 2
            if (vspeed &gt; 1)
                vspeed = 1
            hspeed = 0
            while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_solid, 1, 0)
                x--
            while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solid, 1, 0)
                x++
            if (!collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_solid, 0, 0))
                inwall = 0
        }
    }
    else
    {
        event_user(3)
        event_user(4)
    }
    if (instance_exists(obj_lava_water) &amp;&amp; (((y + 8) &gt;= (obj_lava_water.y - 12)) &amp;&amp; ((global.bg_level == "castle") &amp;&amp; (modo_lava == 0))))
    {
        if (global.apariencia != 0)
        {
            with (instance_create((x + 8), (y - 8), obj_smoke))
            {
                if (global.apariencia == 1)
                    sprite_index = spr_SMB3_splash_lava
                else if (global.apariencia == 2)
                    sprite_index = spr_splash_lava
                depth = -12
            }
        }
        modo_lava = 1
    }
    else if (instance_exists(obj_lava_water) &amp;&amp; (((y + 8) &gt;= obj_lava_water.y) &amp;&amp; ((global.bg_level == "forest") &amp;&amp; ((global.modo_noche == 1) &amp;&amp; (modo_lava == 0)))))
    {
        if (global.apariencia != 0)
        {
            with (instance_create((x + 8), (y - 8), obj_smoke))
            {
                if (global.apariencia == 1)
                    sprite_index = spr_SMB3_splash_lava_purple
                else if (global.apariencia == 2)
                    sprite_index = spr_splash_lava_purple
                depth = -12
            }
        }
        modo_lava = 1
    }
    else if ((y &gt; room_height) &amp;&amp; ((object_index != obj_cap_mario) &amp;&amp; ((object_index != obj_helmet) &amp;&amp; ((object_index != obj_helmet_spiny) &amp;&amp; (held == 0)))))
        instance_destroy()
    if (instance_exists(obj_lava_water) &amp;&amp; (((y + 8) &lt;= (obj_lava_water.y - 12)) &amp;&amp; ((obj_lava_water.vspeed &gt; 0) &amp;&amp; ((modo_lava == 1) || (swimming == 1)))))
        y = (obj_lava_water.y - 20)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_blockparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((held == 0) &amp;&amp; (other.vspeed &lt; 0))
{
    explode = 1
    event_user(6)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemyparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.object_index != obj_grinder)
{
    if (explode == 1)
    {
        with (other.id)
        {
            dead_h = 1
            event_user(0)
        }
        event_user(6)
        instance_destroy()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_muncher">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (explode == 1)
{
    with (other.id)
    {
        dead_h = 1
        event_user(0)
    }
    event_user(6)
    instance_destroy()
}
else if ((other.bbox_bottom &lt; ((bbox_top - vspeed) + 5)) &amp;&amp; (other.vspeed &gt;= 0))
{
    if (collision_rectangle(bbox_left, (bbox_top - 5), bbox_right, (bbox_top + 4), other.id, 0, 0) &amp;&amp; (other.y &lt; (y - 10)))
        other.y = ceil((bbox_top - 16))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_boomboom">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.object_index != obj_grinder)
{
    if (explode == 1)
    {
        with (other.id)
        {
            dead_h = 1
            event_user(0)
        }
        event_user(6)
        instance_destroy()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_thwomp">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((other.ready == 1) &amp;&amp; (held == 0))
{
    with (other.id)
        event_user(0)
    explode = 1
    event_user(6)
}
else if (explode == 1)
{
    with (other.id)
    {
        dead_h = 1
        event_user(0)
    }
    event_user(6)
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mario">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (held == 0)
{
    if (scr_canhold() &amp;&amp; ((!inwall) &amp;&amp; ((inmune == 0) &amp;&amp; ((other.bbox_bottom &gt; (bbox_top + 5)) &amp;&amp; (other.bbox_top &lt; (bbox_bottom - 4))))))
    {
        other.holding = 2
        if (global.apariencia == 3)
        {
            audio_play_sound(choose(441, 442), 0, false)
            with (other.id)
            {
                triple_jump = 0
                triple_count = 0
            }
        }
        held = 1
        explode = 0
        depth = -7
        gravity = 0
        speed = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var shell_c;
if (explode == 1)
{
    if (global.apariencia &lt; 2)
    {
        audio_stop_sound(snd_SMB3_pow)
        audio_play_sound(snd_SMB3_pow, 0, false)
    }
    else if (global.apariencia == 4)
    {
        audio_stop_sound(snd_SMB2_pow)
        audio_play_sound(snd_SMB2_pow, 0, false)
    }
    else
    {
        audio_stop_sound(snd_pow)
        audio_play_sound(snd_pow, 0, false)
    }
    with (instance_create(x, y, obj_spinthump))
    {
        if (global.apariencia == 0)
            sprite_index = spr_SMB_pow_explode
        else if (global.apariencia == 1)
            sprite_index = spr_SMB3_pow_explode
        else if (global.apariencia == 2)
            sprite_index = spr_pow_explode
        else if (global.apariencia == 3)
            sprite_index = spr_pow_explode
        else if (global.apariencia == 4)
        {
            if ((global.bg_level == "castle") || ((global.bg_level == "underground") || ((global.bg_level == "ghost") || (global.modo_noche == 1))))
                sprite_index = spr_SMB2_pow_explode_night
            else
                sprite_index = spr_SMB2_pow_explode
        }
        image_speed = 0.6
    }
    if instance_exists(obj_enemyparent)
    {
        with (obj_enemyparent)
        {
            if ((vspeed == 0) &amp;&amp; ((hardness &lt; 99) &amp;&amp; ((object_index != obj_grinder) &amp;&amp; (collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) &amp;&amp; ((!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_solidtop, 0, 0)) &amp;&amp; ((x &lt; (view_xview[0] + 404)) &amp;&amp; ((x &gt; (view_xview[0] - 20)) &amp;&amp; ((y &gt; (view_yview[0] - 20)) &amp;&amp; (y &lt; (view_yview[0] + 236))))))))))
            {
                dead_h = 1
                event_user(0)
            }
            else if (((object_index == obj_buzzybeetle) || (object_index == obj_spiny)) &amp;&amp; ((inup == 1) &amp;&amp; ((x &lt; (view_xview[0] + 404)) &amp;&amp; ((x &gt; (view_xview[0] - 20)) &amp;&amp; ((y &gt; (view_yview[0] - 20)) &amp;&amp; (y &lt; (view_yview[0] + 236)))))))
            {
                shell_c = instance_create((x - 8), y, obj_shell)
                if (sprite_index == spr_buzzybeetle)
                    shell_c.sprite_index = spr_shell_buzzy_down
                else if (sprite_index == spr_SMB3_buzzybeetle)
                    shell_c.sprite_index = spr_SMB3_shell_buzzy_down
                else if (sprite_index == spr_SMB3_buzzybeetle_night)
                    shell_c.sprite_index = spr_SMB3_shell_buzzy_down_night
                else if (sprite_index == spr_spiny)
                    shell_c.sprite_index = spr_spiny_dead
                else if (sprite_index == spr_SMB3_spiny)
                    shell_c.sprite_index = spr_SMB3_spiny_dead
                instance_destroy()
            }
        }
    }
    if instance_exists(obj_muncher)
    {
        with (obj_muncher)
        {
            if ((vspeed == 0) &amp;&amp; (collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) &amp;&amp; ((!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_solidtop, 0, 0)) &amp;&amp; ((x &lt; (view_xview[0] + 404)) &amp;&amp; ((x &gt; (view_xview[0] - 20)) &amp;&amp; ((y &gt; (view_yview[0] - 20)) &amp;&amp; (y &lt; (view_yview[0] + 236))))))))
            {
                dead_h = 1
                event_user(0)
            }
        }
    }
    if instance_exists(obj_muncher_big)
    {
        with (obj_muncher_big)
        {
            if ((vspeed == 0) &amp;&amp; ((x &lt; (view_xview[0] + 404)) &amp;&amp; ((x &gt; (view_xview[0] - 20)) &amp;&amp; ((y &gt; (view_yview[0] - 20)) &amp;&amp; (y &lt; (view_yview[0] + 236))))))
            {
                dead_h = 1
                event_user(0)
            }
        }
    }
    if instance_exists(obj_shell)
    {
        with (obj_shell)
        {
            if ((vspeed == 0) &amp;&amp; ((nomatar == 0) &amp;&amp; ((x &lt; (view_xview[0] + 404)) &amp;&amp; ((x &gt; (view_xview[0] - 20)) &amp;&amp; ((y &gt; (view_yview[0] - 20)) &amp;&amp; (y &lt; (view_yview[0] + 236)))))))
            {
                dead_h = 1
                event_user(0)
            }
        }
    }
    if instance_exists(obj_galoomba_hold)
    {
        with (obj_galoomba_hold)
        {
            if ((vspeed == 0) &amp;&amp; ((x &lt; (view_xview[0] + 404)) &amp;&amp; ((x &gt; (view_xview[0] - 20)) &amp;&amp; ((y &gt; (view_yview[0] - 20)) &amp;&amp; (y &lt; (view_yview[0] + 236))))))
            {
                dead_h = 1
                event_user(0)
            }
        }
    }
    if instance_exists(obj_bossparent)
    {
        with (obj_bossparent)
        {
            if ((vspeed == 0) &amp;&amp; (collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) &amp;&amp; ((!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_solidtop, 0, 0)) &amp;&amp; ((x &lt; (view_xview[0] + 404)) &amp;&amp; ((x &gt; (view_xview[0] - 20)) &amp;&amp; ((y &gt; (view_yview[0] - 20)) &amp;&amp; (y &lt; (view_yview[0] + 236))))))))
            {
                dead_h = 1
                event_user(0)
            }
        }
    }
    if instance_exists(obj_coin)
    {
        with (obj_coin)
        {
            if ((x &lt; (view_xview[0] + 404)) &amp;&amp; ((x &gt; (view_xview[0] - 20)) &amp;&amp; ((y &gt; (view_yview[0] - 20)) &amp;&amp; (y &lt; (view_yview[0] + 236)))))
            {
                with (instance_create(x, y, obj_coin_pow))
                    hspeed = random_range(1, -1)
                instance_destroy()
            }
        }
    }
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var semisolid, solidpow, solidpinchos, solidmuncher, solidthwomp, col_pow_1, lava_lift, check, conveyor;
if (vspeed &gt;= 0)
{
    semisolid = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_solidtop, 0, 0)
    solidpow = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_block_pow_hold, 0, 0)
    solidpinchos = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_pinchos, 0, 0)
    solidmuncher = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_muncher, 0, 0)
    solidthwomp = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_thwomp, 0, 0)
    if (semisolid &amp;&amp; ((bbox_bottom &lt; (semisolid.yprevious + 5)) &amp;&amp; (!collision_rectangle((x - 1), bbox_bottom, (x + 1), (bbox_bottom + 4), obj_slopeparent, 1, 0))))
        y = (semisolid.bbox_top - 16)
    if (solidpow &amp;&amp; ((solidpow.id != id) &amp;&amp; (bbox_bottom &lt; (solidpow.yprevious + 5))))
        y = (solidpow.bbox_top - 16)
    if (solidpinchos &amp;&amp; ((bbox_bottom &lt; (solidpinchos.yprevious + 5)) &amp;&amp; (!collision_rectangle((x - 1), bbox_bottom, (x + 1), (bbox_bottom + 4), obj_slopeparent, 1, 0))))
        y = (solidpinchos.bbox_top - 16)
    if (solidmuncher &amp;&amp; ((bbox_bottom &lt; (solidmuncher.yprevious + 5)) &amp;&amp; (!collision_rectangle((x - 1), bbox_bottom, (x + 1), (bbox_bottom + 4), obj_slopeparent, 1, 0))))
        y = (solidmuncher.bbox_top - 16)
    if (solidthwomp &amp;&amp; ((bbox_bottom &lt; (solidthwomp.yprevious + 5)) &amp;&amp; (!collision_rectangle((x - 1), bbox_bottom, (x + 1), (bbox_bottom + 4), obj_slopeparent, 1, 0))))
        y = (solidthwomp.bbox_top - 16)
}
if (collision_rectangle((x - 1), bbox_bottom, (x + 1), (bbox_bottom + 4), obj_slopeparent, 1, 0) &amp;&amp; ((!collision_rectangle((x - 1), (bbox_bottom - 4), (x + 1), (bbox_bottom - 4), obj_slopeparent, 1, 0)) &amp;&amp; (vspeed == 0)))
{
    if (!collision_rectangle((x - 1), bbox_bottom, (x + 1), (bbox_bottom + 5), obj_solidtop, 0, 0))
        y += 4
}
if ((vspeed &gt; -0.85) &amp;&amp; (collision_rectangle((x - 1), (bbox_bottom - 4), (x + 1), bbox_bottom, obj_slopeparent, 1, 0) &amp;&amp; (!collision_rectangle((x - 1), (bbox_bottom - 8), (x + 1), (bbox_bottom - 8), obj_slopeparent, 1, 0))))
{
    while collision_rectangle((x - 1), (bbox_bottom - 4), (x + 1), bbox_bottom, obj_slopeparent, 1, 0)
        y--
}
col_pow_1 = collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_block_pow_hold, 0, 0)
if ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_solidtop, 0, 0))) || ((col_pow_1 &amp;&amp; ((col_pow_1.id != id) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_block_pow_hold, 0, 0)))) || ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_muncher, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_muncher, 0, 0))) || ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_pinchos, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_pinchos, 0, 0))) || ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_thwomp, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_thwomp, 0, 0))) || collision_rectangle((x - 1), bbox_bottom, (x + 1), (bbox_bottom + 4), obj_slopeparent, 1, 0))))))
{
    gravity = 0
    if (!collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_block_pow_hold, 0, 0))
        event_user(6)
    if (vspeed &gt; 0)
        vspeed = 0
}
else if (modo_lava == 1)
{
    hspeed = 0
    gravity = 0.02
    if (vspeed &gt; 0.03)
        vspeed = 0.03
}
else if (!swimming)
{
    if (collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 2), (bbox_bottom - 4), obj_solid, 0, 0) || collision_rectangle((bbox_left - 2), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solid, 0, 0))
    {
        gravity = 0.2
        if (vspeed &gt; 3)
            vspeed = 3
    }
    else
    {
        gravity = 0.2
        if (vspeed &gt; 4)
            vspeed = 4
    }
}
else
{
    gravity = 0.02
    if (vspeed &gt; 0.5)
        vspeed = 0.5
}
if ((vspeed &lt; 0) &amp;&amp; (collision_rectangle((bbox_left + 1), (bbox_top - 1), (bbox_right - 1), bbox_top, obj_solid, 1, 0) || (collision_rectangle((bbox_left + 1), (bbox_top - 1), (bbox_right - 1), bbox_top, obj_onewaygate_bottom, 1, 0) || (collision_rectangle((bbox_left + 1), (bbox_top - 1), (bbox_right - 1), bbox_top, obj_cannon, 1, 0) || (collision_rectangle((bbox_left + 1), (bbox_top - 1), (bbox_right - 1), bbox_top, obj_pinchos, 1, 0) || collision_rectangle((bbox_left + 1), (bbox_top - 1), (bbox_right - 1), bbox_top, obj_bullebill_base, 1, 0))))))
{
    while collision_rectangle((bbox_left + 1), bbox_top, (bbox_right - 1), bbox_top, obj_solid, 1, 0)
        y++
    vspeed = 0
    event_user(6)
}
lava_lift = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + 2), obj_solidtop, 0, 0)
if (lava_lift &amp;&amp; ((y &lt; (lava_lift.y - 12)) &amp;&amp; (vspeed &gt;= 0)))
{
    check = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0)
    if (check &amp;&amp; (check != lava_lift))
        exit
    if (lava_lift.vspeed == 0)
        y = ceil((lava_lift.bbox_top - 16))
    else
        y = ceil((lava_lift.bbox_top - (16 - vspeed)))
    if (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_solid, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_pinchos, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_cannon, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_bullebill_base, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_muncher, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_solid, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_pinchos, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_cannon, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_bullebill_base, 0, 0))) || ((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_muncher, 0, 0))))))))))))
        x += lava_lift.hspeed
    if (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_solid, 0, 0) || (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_onewaygate_left, 0, 0) || (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_pinchos, 0, 0) || (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_muncher, 0, 0) || (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_cannon, 0, 0) || collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_bullebill_base, 0, 0))))))
        x--
    else if (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_solid, 0, 0) || (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_onewaygate_right, 0, 0) || (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_pinchos, 0, 0) || (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_muncher, 0, 0) || (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_cannon, 0, 0) || collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_bullebill_base, 0, 0))))))
        x++
}
conveyor = collision_rectangle(bbox_left, bbox_top, bbox_right, (bbox_bottom + 1), obj_cinta_parent, 0, 0)
if (conveyor &amp;&amp; (conveyor.image_speed != 0))
{
    if (conveyor.image_speed &gt; 0)
    {
        if ((!collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 1, 0)) &amp;&amp; ((!collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_pinchos, 1, 0)) &amp;&amp; ((!collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_muncher, 1, 0)) &amp;&amp; ((!collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_cannon, 1, 0)) &amp;&amp; ((!collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 1, 0)) &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 1, 0)))))))
            hspeed = (-conveyor.image_speed)
    }
    else if (conveyor.image_speed &lt; 0)
    {
        if ((!collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solid, 1, 0)) &amp;&amp; ((!collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_pinchos, 1, 0)) &amp;&amp; ((!collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_muncher, 1, 0)) &amp;&amp; ((!collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_cannon, 1, 0)) &amp;&amp; ((!collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 1, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 1, 0)))))))
            hspeed = (-conveyor.image_speed)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var pow_col_right, pow_col_left, col_one_left, col_one_right;
pow_col_right = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_holdparent, 0, 0)
pow_col_left = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_holdparent, 0, 0)
if (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solid, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_muncher, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_muncher, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_pinchos, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_pinchos, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; (pow_col_right &amp;&amp; ((pow_col_right.object_index != obj_spring) &amp;&amp; ((pow_col_right.object_index != obj_cap) &amp;&amp; (pow_col_right.id != id))))) || ((hspeed &lt; 0) &amp;&amp; (pow_col_left &amp;&amp; ((pow_col_left.object_index != obj_spring) &amp;&amp; ((pow_col_left.object_index != obj_cap) &amp;&amp; (pow_col_left.id != id))))))))))))))))
{
    hspeed = 0
    event_user(6)
    col_one_left = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)
    col_one_right = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)
    if ((hspeed &gt; 0) &amp;&amp; col_one_left)
    {
        if (!audio_is_playing(snd_oneway))
            audio_play_sound(snd_oneway, 0, false)
        with (col_one_left)
            rot = 1
    }
    if ((hspeed &lt; 0) &amp;&amp; col_one_right)
    {
        if (!audio_is_playing(snd_oneway))
            audio_play_sound(snd_oneway, 0, false)
        with (col_one_right)
            rot = 1
    }
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_solid, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solid, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_muncher, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_muncher, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_holdparent, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_holdparent, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_pinchos, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_pinchos, 1, 0)
        x++
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 1, 0)
        x++
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check(global.abajo)
{
    if collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_solid, 0, 0)
    {
        inwall = 1
        hspeed = 0
    }
    hspeed = (1 * obj_mario.direct)
    inmune = 1
    alarm[1] = 15
    obj_mario.isduckhold = 0
}
else if (keyboard_check(global.arriba) &amp;&amp; (global.apariencia == 2))
{
    explode = 1
    audio_play_sound(scr_snd_kick(), 0, false)
    with (obj_mario)
        event_user(7)
    obj_mario.stompstyle = 0
    with (instance_create((x + 8), (y - 2), obj_smoke))
        sprite_index = spr_spinthump
    if (!collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_solid, 0, 0))
    {
        if (obj_mario.hspeed == 0)
            hspeed = 0
        else
            hspeed = (obj_mario.direct / 2)
        if ((global.bg_level == "underwater") || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "airship")) || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "sky")) || (instance_exists(obj_lava_water) &amp;&amp; ((y &gt; (obj_lava_water.y + 16)) &amp;&amp; ((global.bg_level == "forest") &amp;&amp; (global.modo_noche == 0)))))))
        {
            vspeed = -2.4
            swimming = 1
        }
        else
            vspeed = -7
    }
    else
        inwall = 1
    inmune = 1
    alarm[1] = 15
    obj_mario.isduckhold = 0
}
else
{
    explode = 1
    if (global.apariencia == 3)
        audio_play_sound(choose(443, 444), 0, false)
    else
    {
        audio_play_sound(scr_snd_kick(), 0, false)
        with (instance_create((x + 8), (y - 2), obj_smoke))
            sprite_index = spr_spinthump
    }
    with (obj_mario)
        event_user(7)
    obj_mario.stompstyle = 0
    y += 1
    if (!collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_solid, 0, 0))
    {
        if ((global.bg_level == "underwater") || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "airship")) || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "sky")) || (instance_exists(obj_lava_water) &amp;&amp; ((y &gt; (obj_lava_water.y + 16)) &amp;&amp; ((global.bg_level == "forest") &amp;&amp; (global.modo_noche == 0)))))))
        {
            vspeed = -0.2
            swimming = 1
        }
        else
            vspeed = -1.2
        if ((global.bg_level == "underwater") || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "airship")) || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "sky")) || (instance_exists(obj_lava_water) &amp;&amp; ((y &gt; (obj_lava_water.y + 16)) &amp;&amp; ((global.bg_level == "forest") &amp;&amp; (global.modo_noche == 0)))))))
            hspeed = ((1 + abs(obj_mario.hspeed)) * sign(obj_mario.direct))
        else
            hspeed = ((3 + abs(obj_mario.hspeed)) * sign(obj_mario.direct))
    }
    else
        inwall = 1
    inmune = 1
    alarm[1] = 15
    obj_mario.isduckhold = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
