<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_shell_drybones</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_shell_held</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>imheld = instance_create(x, (y - 2), obj_shell_drybones)
imheld.sprite_index = sprite_index
if ((global.bg_level == "underwater") || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "airship")) || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "sky")) || (instance_exists(obj_lava_water) &amp;&amp; ((y &gt; obj_lava_water.y) &amp;&amp; ((global.bg_level == "forest") &amp;&amp; (global.modo_noche == 0)))))))
    imheld.vspeed = -1.8
else
    imheld.vspeed = -3
if ((other.bbox_left + (other.bbox_right / 2)) &lt;= (bbox_left + (bbox_right / 2)))
    imheld.hspeed = 0.5
else if ((other.bbox_left + (other.bbox_right / 2)) &gt; (bbox_left + (bbox_right / 2)))
    imheld.hspeed = -0.5
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var col_one_left, col_one_right, block_right, block_left;
if (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solid, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_muncher, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_muncher, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_pinchos, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_pinchos, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_thwomp, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_thwomp, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_pswitch, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_pswitch, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_cannon, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_cannon, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)) || ((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)))))))))))))))))
{
    col_one_left = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)
    col_one_right = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)
    if ((hspeed &gt; 0) &amp;&amp; col_one_left)
    {
        if (!audio_is_playing(snd_oneway))
            audio_play_sound(snd_oneway, 0, false)
        with (col_one_left)
            rot = 1
    }
    if ((hspeed &lt; 0) &amp;&amp; col_one_right)
    {
        if (!audio_is_playing(snd_oneway))
            audio_play_sound(snd_oneway, 0, false)
        with (col_one_right)
            rot = 1
    }
    block_right = collision_rectangle(((bbox_left - 3) + hspeed), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_blockparent, 1, 0)
    block_left = collision_rectangle(bbox_right, (bbox_top + 4), ((bbox_right + 1) + hspeed), (bbox_bottom - 4), obj_blockparent, 1, 0)
    if ((hspeed &lt; 0) &amp;&amp; (block_right &amp;&amp; (block_right.ready == 0)))
    {
        if ((block_right.object_index == obj_flipblock) &amp;&amp; (global.apariencia == 1))
        {
            with (block_right)
                alarm[2] = 1
        }
        else if (block_right.object_index == obj_onoffblock)
        {
            with (block_right)
                event_user(1)
        }
        else
        {
            with (block_right)
            {
                ready = 1
                vspeed = -2
                if (object_index == obj_noteblock)
                    alarm[0] = 7
                else
                    alarm[0] = 4
                event_user(0)
            }
        }
    }
    else if ((hspeed &gt; 0) &amp;&amp; (block_left &amp;&amp; (block_left.ready == 0)))
    {
        if ((block_left.object_index == obj_flipblock) &amp;&amp; (global.apariencia == 1))
        {
            with (block_left)
                alarm[2] = 1
        }
        else if (block_left.object_index == obj_onoffblock)
        {
            with (block_left)
                event_user(1)
        }
        else
        {
            with (block_left)
            {
                ready = 1
                vspeed = -2
                if (object_index == obj_noteblock)
                    alarm[0] = 7
                else
                    alarm[0] = 4
                event_user(0)
            }
        }
    }
    event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x, y, obj_shell_drybones)
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(scr_snd_break(), 0, false)
if (global.apariencia == 0)
    s_dry = spr_SMB_shell_drybones_deads
else if (global.apariencia == 1)
    s_dry = 1098
else if (global.apariencia == 2)
    s_dry = 1923
imdead = instance_create(x, y, obj_enemy_dead)
imdead.girar = 1
imdead.sprite_index = s_dry
imdead.image_speed = 0
imdead.image_index = 0
imdead.direct = direct
imdead.gravity = 0.16
imdead2 = instance_create(x, y, obj_enemy_dead)
imdead2.girar = 1
imdead2.sprite_index = s_dry
imdead2.image_speed = 0
imdead2.image_index = 1
imdead2.direct = direct
imdead2.gravity = 0.16
imdead3 = instance_create(x, y, obj_enemy_dead)
imdead3.girar = 1
imdead3.sprite_index = s_dry
imdead3.image_speed = 0
imdead3.image_index = 2
imdead3.direct = direct
imdead3.gravity = 0.16
imdead.hspeed = -0.5
imdead.vspeed = -0.5
imdead2.hspeed = -0.5
imdead3.hspeed = 0.5
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
