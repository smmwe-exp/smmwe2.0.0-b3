<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cannon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>obj_physicsparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.apariencia == 0)
{
    if ((global.bg_level == "castle") || ((global.bg_level == "ghost") || ((global.bg_level == "underground") || (global.modo_noche == 1))))
        sprite_index = spr_SMB_cannon_night
    else
        sprite_index = spr_SMB_cannon
}
else if (global.apariencia == 1)
{
    if ((global.bg_level == "castle") || ((global.bg_level == "ghost") || ((global.bg_level == "underground") || (global.modo_noche == 1))))
        sprite_index = spr_SMB3_cannon_night
    else
        sprite_index = spr_SMB3_cannon
}
else if (global.apariencia == 4)
{
    if ((global.bg_level == "castle") || ((global.bg_level == "ghost") || ((global.bg_level == "underground") || (global.modo_noche == 1))))
        sprite_index = spr_SMB2_cannon_night
    else
        sprite_index = spr_SMB2_cannon
}
direct = 0
u = 0
d = 0
l = 0
r = 0
alarm[0] = 90
calcular = 0
alarm[1] = 10
mytop = instance_create(x, y, obj_solidtop)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (mytop)
    instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>calcular = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(obj_mario))
{
    alarm[0] = 1
    exit
}
audio_stop_sound(scr_snd_explode())
audio_play_sound(scr_snd_explode(), 0, false)
with (instance_create(((x + 8) + lengthdir_x(8, direct)), ((y + 8) + lengthdir_y(8, direction)), obj_cannonball))
{
    if ((global.bg_level == "underwater") || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "sky")) || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "airship")) || (instance_exists(obj_lava_water) &amp;&amp; ((y &gt; (obj_lava_water.y + 16)) &amp;&amp; ((global.bg_level == "forest") &amp;&amp; (global.modo_noche == 0)))))))
        motion_set(other.direct, 0.5)
    else
        motion_set(other.direct, 1)
}
alarm[0] = 192
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var enemigos, jefes, enemyhold, mario;
enemigos = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_enemyparent, 0, 0)
jefes = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_bossparent, 0, 0)
enemyhold = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_enemyparent_held, 0, 0)
mario = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + vspeed), obj_mario, 0, 0)
if (enemigos &amp;&amp; ((enemigos.object_index != obj_banzaibill) &amp;&amp; ((enemigos.object_index != obj_podoboo) &amp;&amp; ((enemigos.object_index != obj_angrysun) &amp;&amp; ((enemigos.object_index != obj_cheepcheep) &amp;&amp; ((enemigos.object_index != obj_thwomp) &amp;&amp; ((enemigos.object_index != obj_grinder) &amp;&amp; ((enemigos.object_index != obj_boo) &amp;&amp; ((enemigos.object_index != obj_cannonball) &amp;&amp; ((enemigos.object_index != obj_cannonball_red) &amp;&amp; ((vspeed &gt; 0) &amp;&amp; (bbox_bottom &lt; (enemigos.yprevious + 5)))))))))))))
{
    if (enemigos.vspeed == 0)
    {
        if ((enemigos.object_index == obj_bobomb) || (enemigos.object_index == obj_bobomb_ready))
        {
            with (enemigos)
            {
                instance_create(x, y, obj_explosion)
                instance_destroy()
            }
        }
        else
        {
            audio_play_sound(scr_snd_kick(), 0, false)
            instance_create(enemigos.x, (enemigos.y - 8), obj_spinthump)
            with (enemigos)
                event_user(0)
        }
    }
    else
        enemigos.y = (y + 16)
}
if (jefes &amp;&amp; ((vspeed &gt; 0) &amp;&amp; (bbox_bottom &lt; (jefes.yprevious + 5))))
{
    if (jefes.vspeed == 0)
    {
        audio_play_sound(scr_snd_kick(), 0, false)
        instance_create(jefes.x, (jefes.y - 8), obj_spinthump)
        with (jefes)
            event_user(0)
    }
    else
        jefes.y = (y + 16)
}
if (enemyhold &amp;&amp; ((vspeed &gt; 0) &amp;&amp; (bbox_bottom &lt; (enemyhold.yprevious + 5))))
{
    if (enemyhold.vspeed == 0)
    {
        audio_play_sound(scr_snd_kick(), 0, false)
        instance_create(enemyhold.x, (enemyhold.y - 8), obj_spinthump)
        with (enemyhold)
            event_user(0)
    }
    else
        enemyhold.y = (y + 16)
}
if (mario &amp;&amp; ((vspeed &gt; 0) &amp;&amp; (bbox_bottom &lt; (mario.yprevious + 5))))
{
    if (mario.vspeed == 0)
    {
        with (obj_mario)
        {
            instance_create(x, y, obj_deadmario)
            instance_destroy()
        }
    }
    else
        obj_mario.y = y
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (d == 1)
    event_inherited()
if instance_exists(mytop)
{
    mytop.x = x
    mytop.y = y
}
if (instance_exists(obj_mario) &amp;&amp; place_meeting(x, y, obj_mario))
{
    if (obj_mario.x &gt; (x + 8))
    {
        with (obj_mario)
            x++
    }
    else
    {
        with (obj_mario)
            x--
    }
}
if (gravity == 0)
{
    hspeed = (max(0, (abs(hspeed) - 0.1)) * sign(hspeed))
    if (abs(hspeed) &lt; 0.1)
        hspeed = 0
}
if (calcular == 1)
{
    if (!outside_view())
        event_user(1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var solidtop, solidpow, solidthwomp, solidmuncher, solidpinchos, lava_lift, check, conveyor, col_muncher, col_cannon, col_pow, col_pswith, col_bullet, col_pswitch;
if (vspeed &gt;= 0)
{
    solidtop = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_solidtop, 0, 0)
    solidpow = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_block_pow_hold, 0, 0)
    solidthwomp = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_thwomp, 0, 0)
    solidmuncher = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_muncher, 0, 0)
    solidpinchos = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_pinchos, 0, 0)
    if (solidtop &amp;&amp; ((bbox_bottom &lt; (solidtop.yprevious + 5)) &amp;&amp; (obj_levelmanager.editor == 0)))
        y = (solidtop.y + floor(((y - bbox_bottom) - 0.9)))
    if (solidmuncher &amp;&amp; ((bbox_bottom &lt; (solidmuncher.yprevious + 5)) &amp;&amp; (obj_levelmanager.editor == 0)))
        y = (solidmuncher.y + floor(((y - bbox_bottom) - 0.9)))
    if (solidpinchos &amp;&amp; ((bbox_bottom &lt; (solidpinchos.yprevious + 5)) &amp;&amp; (obj_levelmanager.editor == 0)))
        y = (solidpinchos.y + floor(((y - bbox_bottom) - 0.9)))
    if (solidthwomp &amp;&amp; ((bbox_bottom &lt; (solidthwomp.yprevious + 5)) &amp;&amp; (obj_levelmanager.editor == 0)))
        y = (solidthwomp.y + floor(((y - bbox_bottom) - 16)))
    if (solidpow &amp;&amp; ((bbox_bottom &lt; (solidpow.yprevious + 5)) &amp;&amp; (obj_levelmanager.editor == 0)))
        y = (solidpow.y + floor(((y - bbox_bottom) - 0.9)))
    if (vspeed &gt; 4)
        vspeed = 4
}
if (collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + 4), obj_slopeparent, 1, 0) &amp;&amp; ((!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_slopeparent, 1, 0)) &amp;&amp; (vspeed == 0)))
    y += 4
if (collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, bbox_bottom, obj_slopeparent, 1, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 8), bbox_right, (bbox_bottom - 8), obj_slopeparent, 1, 0)))
{
    while collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, bbox_bottom, obj_slopeparent, 1, 0)
        y--
}
if ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_solidtop, 0, 0))) || ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_block_pow_hold, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_block_pow_hold, 0, 0))) || ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_thwomp, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_thwomp, 0, 0))) || ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_muncher, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_muncher, 0, 0))) || ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_pinchos, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_pinchos, 0, 0))) || collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_slopeparent, 1, 0))))))
{
    gravity = 0
    if (vspeed &gt; 0)
        vspeed = 0
}
else if ((y &gt;= (room_height - 24)) &amp;&amp; ((global.bg_level == "castle") &amp;&amp; ((obj_levelmanager.editor == 0) &amp;&amp; (object_index != obj_yoshifire))))
{
    hspeed = 0
    gravity = 0.02
    if (vspeed &gt; 0.1)
        vspeed = 0.1
}
else if (((object_index == obj_galoomba) || ((object_index == obj_galoomba2) || ((object_index == obj_koopa) || ((object_index == obj_koopa_red) || ((object_index == obj_drybones) || ((object_index == obj_mushroom) || ((object_index == obj_1up) || ((object_index == obj_fireflower) || ((object_index == obj_superflower) || ((object_index == obj_megamushroom) || ((object_index == obj_hen_mushroom) || ((object_index == obj_star) || ((object_index == obj_monty_chase) || ((object_index == obj_spike) || ((object_index == obj_egg) || (((object_index == obj_egg_red) &amp;&amp; (global.apariencia == 2)) || ((object_index == obj_cheepcheep) || ((object_index == obj_cheepcheep2) || ((object_index == obj_floruga) || ((object_index == obj_bobomb) || (object_index == obj_bobomb_ready))))))))))))))))))))) &amp;&amp; (paracaidas == 1))
{
    gravity = 0.1
    if (vspeed &gt; 0.4)
        vspeed = 0.4
}
else if (!swimming)
{
    gravity = 0.2
    if (vspeed &gt; 4)
        vspeed = 4
}
else if (swimming == 1)
{
    gravity = 0.1
    if (vspeed &gt; 0.4)
        vspeed = 0.4
}
if ((vspeed &lt; 0) &amp;&amp; (collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_solid, 1, 0) || (collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_onewaygate_bottom, 1, 0) || (collision_rectangle((bbox_left + 1), (bbox_top - 1), (bbox_right - 1), bbox_top, obj_pinchos, 1, 0) || collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_thwomp, 1, 0)))))
{
    while collision_rectangle((bbox_left + 1), bbox_top, (bbox_right - 1), bbox_top, obj_solid, 1, 0)
        y++
    vspeed = 0
}
if ((bbox_top - 16) &gt; room_height)
    instance_destroy()
lava_lift = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + 4), obj_solidtop, 0, 0)
if (lava_lift &amp;&amp; (vspeed &gt;= 0))
{
    check = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0)
    if (check &amp;&amp; (check != lava_lift))
        exit
    if (lava_lift.vspeed == 0)
        y = (lava_lift.y + floor(((y - bbox_bottom) - 0.9)))
    else
        y = ((lava_lift.y + floor(((y - bbox_bottom) - 0.9))) - vspeed)
    if (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_solid, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_pinchos, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_cannon, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_bullebill_base, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_muncher, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_solid, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_pinchos, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_cannon, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_bullebill_base, 0, 0))) || ((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_muncher, 0, 0))))))))))))
        x += lava_lift.hspeed
    if (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_solid, 0, 0) || (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_onewaygate_left, 0, 0) || (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_pinchos, 0, 0) || (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_muncher, 0, 0) || collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_bullebill_base, 0, 0)))))
        x--
    else if (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_solid, 0, 0) || (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_onewaygate_right, 0, 0) || (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_pinchos, 0, 0) || (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_muncher, 0, 0) || collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_bullebill_base, 0, 0)))))
        x++
}
conveyor = collision_rectangle(bbox_left, bbox_top, bbox_right, (bbox_bottom + 1), obj_cinta_parent, 0, 0)
if (conveyor &amp;&amp; (conveyor.image_speed != 0))
{
    if (conveyor.image_speed &gt; 0)
    {
        col_muncher = collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_muncher, 1, 0)
        col_cannon = collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_cannon, 1, 0)
        col_pow = collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_block_pow_hold, 1, 0)
        col_pswith = collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_pswitch, 1, 0)
        col_bullet = collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 1, 0)
        if (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 1, 0) || (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_pinchos, 1, 0) || (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 1, 0) || ((col_muncher &amp;&amp; (col_muncher.id != id)) || ((col_cannon &amp;&amp; (col_cannon.id != id)) || ((col_pow &amp;&amp; (col_pow.id != id)) || ((col_pswith &amp;&amp; (col_pswith.id != id)) || (col_bullet &amp;&amp; (col_bullet.id != id)))))))))
        {
        }
        else
        {
            x -= conveyor.image_speed
            if collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_mario, 1, 0)
            {
                if instance_exists(obj_mario)
                    obj_mario.x -= conveyor.image_speed
            }
        }
    }
    else if (conveyor.image_speed &lt; 0)
    {
        col_muncher = collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_muncher, 1, 0)
        col_cannon = collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_cannon, 1, 0)
        col_pow = collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_block_pow_hold, 1, 0)
        col_pswitch = collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_pswitch, 1, 0)
        col_bullet = collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
        if (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solid, 1, 0) || (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_pinchos, 1, 0) || (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 1, 0) || ((col_muncher &amp;&amp; (col_muncher.id != id)) || ((col_cannon &amp;&amp; (col_cannon.id != id)) || ((col_pow &amp;&amp; (col_pow.id != id)) || ((col_pswitch &amp;&amp; (col_pswitch.id != id)) || (col_bullet &amp;&amp; (col_bullet.id != id)))))))))
        {
        }
        else
        {
            x -= conveyor.image_speed
            if collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_mario, 1, 0)
            {
                if instance_exists(obj_mario)
                    obj_mario.x -= conveyor.image_speed
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((u == 1) &amp;&amp; ((!place_meeting(x, (y - 16), obj_solidtop)) &amp;&amp; (!place_meeting(x, (y - 16), obj_pinchos))))
{
    d = 1
    u = 0
    if (direct == 0)
        direct = 180
    else if (direct == 180)
        direct = 0
    else if (direct == 225)
        direct = 45
    else if (direct == 315)
        direct = 135
    else if (direct == 270)
        direct = 90
}
else if ((r == 1) &amp;&amp; ((!place_meeting((x + 16), y, obj_solidtop)) &amp;&amp; (!place_meeting((x + 16), y, obj_pinchos))))
{
    d = 1
    r = 0
    if (direct == 180)
        direct = 90
    else if (direct == 225)
        direct = 135
    else if (direct == 135)
        direct = 45
    else if (direct == 90)
        direct = 0
    else if (direct == 270)
        direct = 180
}
else if ((l == 1) &amp;&amp; ((!place_meeting((x - 16), y, obj_solidtop)) &amp;&amp; (!place_meeting((x - 16), y, obj_pinchos))))
{
    d = 1
    l = 0
    if (direct == 0)
        direct = 90
    else if (direct == 45)
        direct = 135
    else if (direct == 90)
        direct = 180
    else if (direct == 270)
        direct = 0
    else if (direct == 315)
        direct = 45
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>imdead = instance_create((x + 8), (y + 8), obj_enemy_dead)
imdead.girar = 1
if (global.apariencia == 0)
    imdead.sprite_index = spr_SMB_cannon_deads
else if (global.apariencia == 1)
    imdead.sprite_index = spr_SMB3_cannon_deads
else if (global.apariencia == 2)
    imdead.sprite_index = spr_cannon_deads
if ((global.bg_level == "castle") || ((global.bg_level == "ghost") || ((global.bg_level == "underground") || (global.modo_noche == 1))))
    imdead.image_index = 1
else
    imdead.image_index = 0
imdead.image_speed = 0
if ((direct == 0) || ((direct == 45) || ((direct == 90) || (direct == 315))))
    imdead.direct = 1
else
    imdead.direct = -1
if (other.hspeed == 0)
{
    if ((other.bbox_left + (bbox_right / 2)) &lt; (bbox_left + (bbox_right / 2)))
        imdead.hspeed = 1
    else if ((other.bbox_left + (bbox_right / 2)) &gt; (bbox_left + (bbox_right / 2)))
        imdead.hspeed = -1
}
else if (other.hspeed &gt; 0)
    imdead.hspeed = 1
else if (other.hspeed &lt; 0)
    imdead.hspeed = -1
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, (direct / 45), x, y, 1, 1, 0, c_white, 1)
if (d == 1)
    draw_sprite(sprite_index, 8, x, y)
else if (u == 1)
    draw_sprite(sprite_index, 9, x, y)
else if (r == 1)
    draw_sprite(sprite_index, 10, x, y)
else if (l == 1)
    draw_sprite(sprite_index, 11, x, y)
else
    draw_sprite(sprite_index, 8, x, y)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
