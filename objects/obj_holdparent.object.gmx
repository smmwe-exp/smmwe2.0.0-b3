<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_spring</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_physicsparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0
held = 0
bouncy = 0
direct = 1
big = 0
modo_lava = 0
swimming = 0
inwall = 0
shake = 0
inmune = 0
kickme = 0
alarm[2] = 4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (held == 1)
{
    with (obj_mario)
    {
        holding = 0
        isduckhold = 0
    }
    with (obj_warpmario)
        holding = 0
    with (obj_doormario)
        holding = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inmune = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>kickme = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_mario)
{
    if (obj_mario.stompstyle == 1)
    {
        if (shake == 0)
        {
            x = ((obj_mario.x - 8) + 10)
            depth = -7
        }
        else if (shake == 1)
        {
            x = ((obj_mario.x - 8) + 2)
            depth = -7
        }
        else if (shake == 2)
        {
            x = ((obj_mario.x - 8) - 10)
            depth = -7
        }
        else if (shake == 3)
        {
            x = ((obj_mario.x - 8) - 2)
            depth = -10
        }
        else if (shake == 4)
        {
            x = ((obj_mario.x - 8) + 2)
            depth = -10
        }
        if (shake == 4)
            shake = 0
        else
            shake++
        alarm[0] = 1.6
    }
    else if (obj_mario.airspin == 1)
    {
        if (shake == 0)
        {
            x = ((obj_mario.x - 8) + 10)
            depth = -7
        }
        else if (shake == 1)
        {
            x = ((obj_mario.x - 8) - 2)
            depth = -7
        }
        else if (shake == 2)
        {
            x = (obj_mario.x - 8)
            depth = -7
        }
        else if (shake == 3)
        {
            x = ((obj_mario.x - 8) - 10)
            depth = -7
        }
        else if (shake == 4)
        {
            x = ((obj_mario.x - 8) - 2)
            depth = -7
        }
        else if (shake == 5)
        {
            x = (obj_mario.x - 8)
            depth = -10
        }
        else if (shake == 6)
        {
            x = ((obj_mario.x - 8) + 2)
            depth = -10
        }
        else if (shake == 7)
        {
            x = ((obj_mario.x - 8) + 10)
            depth = -10
        }
        if (shake == 7)
            shake = 0
        else
            shake++
        alarm[0] = 1.6
    }
}
else
    shake = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (held == 1)
{
    swimming = 0
    vspeed = 0
    if instance_exists(obj_mario)
    {
        if ((obj_mario.stompstyle == 1) &amp;&amp; (obj_mario.holding == 2))
        {
            if (alarm[0] == -1)
                alarm[0] = 1
            if (global.powerup == 0)
                y = (obj_mario.y + 12)
            else
                y = (obj_mario.y + 12)
        }
        else if ((obj_mario.airspin == 1) &amp;&amp; (obj_mario.holding == 2))
        {
            if (alarm[0] == -1)
                alarm[0] = 1
            if (global.powerup == 0)
                y = (obj_mario.y + 12)
            else
                y = (obj_mario.y + 12)
        }
        else
        {
            if (((global.bg_level == "underwater") || (((global.bg_level == "castle") &amp;&amp; (global.modo_noche == 1)) || (instance_exists(obj_lava_water) &amp;&amp; ((y &gt;= (obj_lava_water.y + 16)) &amp;&amp; ((global.bg_level == "forest") &amp;&amp; (global.modo_noche == 0)))))) &amp;&amp; (global.apariencia != 0))
            {
                obj_mario.vspeed = -1
                if (keyboard_check(global.abajo) &amp;&amp; (!collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_bumper, 1, 0)))
                {
                    obj_mario.vspeed = 0.5
                    if (vspeed &gt; 0.5)
                        vspeed = 0.5
                }
            }
            if (global.apariencia == 3)
            {
                depth = -10
                x = ((obj_mario.x - 8) + (10 * obj_mario.direct))
            }
            else if (obj_mario.turning == 1)
            {
                depth = -10
                x = (obj_mario.x - 8)
            }
            else
            {
                depth = -7
                x = ((obj_mario.x - 8) + (11 * obj_mario.direct))
            }
            shake = 0
            alarm[0] = -1
            if (global.powerup == 0)
            {
                if (global.apariencia == 3)
                    y = (obj_mario.y + 12)
                else
                    y = (obj_mario.y + 15)
            }
            else
                y = (obj_mario.y + 12)
            if (keyboard_check(global.abajo) &amp;&amp; ((obj_mario.gravity == 0) &amp;&amp; ((sprite_index == spr_SMB_shell_drybones) || ((sprite_index == spr_SMB3_shell_drybones) || (sprite_index == spr_shell_drybones)))))
            {
                event_user(1)
                obj_mario.isduckhold = 0
            }
            else if (keyboard_check(global.abajo) &amp;&amp; ((obj_mario.gravity == 0) &amp;&amp; ((obj_mario.helmet == 0) &amp;&amp; ((sprite_index == spr_shell_buzzy_empty) || ((sprite_index == spr_SMB3_shell_empty) || (sprite_index == spr_SMB3_shell_empty_night))))))
            {
                audio_play_sound(snd_helmet_add, 0, false)
                obj_mario.helmet = 1
                instance_create(obj_mario.x, (obj_mario.y + 15), obj_helmet)
                obj_mario.isduckhold = 0
                instance_destroy()
            }
            else if (keyboard_check(global.abajo) &amp;&amp; ((obj_mario.gravity == 0) &amp;&amp; ((obj_mario.helmet == 0) &amp;&amp; ((sprite_index == spr_SMB_shell_empty_spiny) || ((sprite_index == spr_SMB3_shell_spiny_empty) || (sprite_index == spr_shell_spiny_empty))))))
            {
                audio_play_sound(snd_helmet_spiny_add, 0, false)
                obj_mario.helmet = 1
                instance_create(obj_mario.x, (obj_mario.y + 15), obj_helmet_spiny)
                with (instance_create((obj_mario.x - 4), (obj_mario.y + 14), obj_smoke))
                    sprite_index = spr_sparkles_helmet
                obj_mario.isduckhold = 0
                instance_destroy()
            }
            else if (keyboard_check(global.abajo) &amp;&amp; ((obj_mario.vspeed == 0) &amp;&amp; (global.apariencia == 2)))
                y = (obj_mario.y + 16)
        }
        if keyboard_check(global.lanzar_agarrar)
        {
            if ((keyboard_check(global.abajo) &amp;&amp; ((obj_mario.gravity == 0) &amp;&amp; ((obj_mario.stompstyle == 0) &amp;&amp; ((sprite_index == spr_shell_buzzy_empty) || ((sprite_index == spr_SMB3_shell_empty) || (sprite_index == spr_SMB3_shell_empty_night)))))) || (keyboard_check(global.abajo) &amp;&amp; ((obj_mario.gravity == 0) &amp;&amp; ((obj_mario.stompstyle == 0) &amp;&amp; ((sprite_index == spr_SMB_shell_empty_spiny) || ((sprite_index == spr_SMB3_shell_spiny_empty) || (sprite_index == spr_shell_spiny_empty)))))))
                obj_mario.holding = 0
            else
                obj_mario.holding = 2
            if (obj_mario.stompstyle == 0)
                direct = obj_mario.direct
            else
                direct = 1
        }
        else if ((obj_mario.disablecontrols == 0) &amp;&amp; (global.key_br == 0))
        {
            obj_mario.holding = 0
            y--
            held = 0
            depth = 0
            shake = 0
            alarm[0] = -1
            event_user(2)
        }
        visible = 1
    }
    else if instance_exists(obj_warpmario)
    {
        x = ((obj_warpmario.x - 8) + (10 * obj_warpmario.direct))
        if (global.powerup == 0)
            y = (obj_warpmario.y + 15)
        else
            y = (obj_warpmario.y + 12)
        if keyboard_check(global.lanzar_agarrar)
        {
            obj_warpmario.holding = 2
            direct = obj_warpmario.direct
        }
        visible = 1
    }
    else if instance_exists(obj_doormario)
    {
        obj_doormario.myitem = sprite_index
        x = ((obj_doormario.x - 8) + (11 * obj_doormario.direct))
        if (global.powerup == 0)
            y = (obj_doormario.y + 15)
        else
            y = (obj_doormario.y + 12)
        obj_doormario.holding = 2
        visible = 0
    }
    else
        held = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var col_poww;
if (held == 0)
{
    if ((global.bg_level == "underwater") || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "sky")) || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "airship")) || (instance_exists(obj_lava_water) &amp;&amp; ((y &gt; (obj_lava_water.y + 16)) &amp;&amp; ((global.bg_level == "forest") &amp;&amp; (global.modo_noche == 0)))))))
        swimming = 1
    else
        swimming = 0
    if (collision_rectangle(bbox_left, (bbox_top - 8), bbox_right, (bbox_top + 7), obj_mario, 0, 0) &amp;&amp; ((image_speed != 0) &amp;&amp; ((inmune == 0) &amp;&amp; ((speed != 0) &amp;&amp; ((object_index != obj_bobomb_hold) &amp;&amp; ((object_index != obj_galoomba_hold) &amp;&amp; (object_index != obj_galoomba_hold2)))))))
    {
        hspeed = (max(0, (abs(hspeed) - 0.075)) * sign(hspeed))
        if (abs(hspeed) &lt; 0.075)
            hspeed = 0
        obj_mario.x += hspeed
        if (object_index == obj_spring)
            obj_mario.y = ((y + (image_index * 4)) - 32)
        else
            obj_mario.y = ceil((bbox_top - (31 - vspeed)))
    }
    col_poww = collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_block_pow_hold, 1, 0)
    if ((vspeed &lt; 0) &amp;&amp; (col_poww &amp;&amp; (col_poww.held == 0)))
    {
        if (vspeed != 0)
        {
            while (collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_block_pow_hold, 1, 0) || collision_rectangle(bbox_left, (bbox_top + 1), bbox_right, (bbox_top + 1), obj_islope_r, 1, 0))
                y++
        }
        vspeed = 0
        with (col_poww)
        {
            explode = 1
            event_user(6)
        }
    }
    if instance_exists(obj_mario)
    {
        if (inwall == 0)
        {
            event_inherited()
            if (gravity == 0)
            {
                if (swimming == 0)
                {
                    hspeed = (max(0, (abs(hspeed) - 0.085)) * sign(hspeed))
                    if (abs(hspeed) &lt; 0.085)
                        hspeed = 0
                }
                else if (swimming == 1)
                {
                    hspeed = (max(0, (abs(hspeed) - 0.085)) * sign(hspeed))
                    if (abs(hspeed) &lt; 0.085)
                        hspeed = 0
                }
            }
            if ((collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_solid, 0, 0) || (collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_muncher, 0, 0) || (collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_pinchos, 0, 0) || (collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_bullebill_base, 0, 0) || collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_cannon, 0, 0))))) &amp;&amp; (vspeed &lt; 0))
            {
                hspeed = 0
                inwall = 1
            }
        }
        else
        {
            if ((object_index == obj_galoomba_hold) || (object_index == obj_bobomb_hold))
                direct = (-direct)
            while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_solid, 1, 0)
                x--
            while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solid, 1, 0)
                x++
            while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_muncher, 1, 0)
                x--
            while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_muncher, 1, 0)
                x++
            while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
                x--
            while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
                x++
            while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_pinchos, 1, 0)
                x--
            while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_pinchos, 1, 0)
                x++
            while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_cannon, 1, 0)
                x--
            while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_cannon, 1, 0)
                x++
            if ((!collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_solid, 0, 0)) &amp;&amp; ((!collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_muncher, 0, 0)) &amp;&amp; ((!collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_bullebill_base, 0, 0)) &amp;&amp; ((!collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_pinchos, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_top + 4), bbox_right, (bbox_bottom - 1), obj_cannon, 0, 0))))))
                inwall = 0
        }
    }
    else if instance_exists(obj_deadmario)
    {
        vspeed = 0
        gravity = 0
    }
    if (instance_exists(obj_lava_water) &amp;&amp; (((y + 8) &gt;= (obj_lava_water.y - 12)) &amp;&amp; ((global.bg_level == "castle") &amp;&amp; ((object_index != obj_bobomb_hold) &amp;&amp; (modo_lava == 0)))))
    {
        if (global.apariencia != 0)
        {
            with (instance_create((x + 8), (y - 8), obj_smoke))
            {
                if (global.apariencia == 1)
                    sprite_index = spr_SMB3_splash_lava
                else if (global.apariencia == 2)
                    sprite_index = spr_splash_lava
                depth = -12
            }
        }
        modo_lava = 1
    }
    else if (instance_exists(obj_lava_water) &amp;&amp; (((y + 8) &gt;= obj_lava_water.y) &amp;&amp; ((global.bg_level == "forest") &amp;&amp; ((global.modo_noche == 1) &amp;&amp; ((object_index != obj_bobomb_hold) &amp;&amp; (modo_lava == 0))))))
    {
        if (global.apariencia != 0)
        {
            with (instance_create((x + 8), (y - 8), obj_smoke))
            {
                if (global.apariencia == 1)
                    sprite_index = spr_SMB3_splash_lava_purple
                else if (global.apariencia == 2)
                    sprite_index = spr_splash_lava_purple
                depth = -12
            }
        }
        modo_lava = 1
    }
    else if ((y &gt; room_height) &amp;&amp; ((object_index != obj_cap_mario) &amp;&amp; ((object_index != obj_helmet) &amp;&amp; ((object_index != obj_helmet_spiny) &amp;&amp; (held == 0)))))
        instance_destroy()
    if (instance_exists(obj_lava_water) &amp;&amp; (((y + 8) &lt;= (obj_lava_water.y - 12)) &amp;&amp; ((obj_lava_water.vspeed &gt; 0) &amp;&amp; ((modo_lava == 1) || (swimming == 1)))))
        y = (obj_lava_water.y - 20)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_blockparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((held == 0) &amp;&amp; ((other.vspeed &lt; 0) &amp;&amp; (kickme == 1)))
{
    if ((global.bg_level == "underwater") || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "airship")) || ((global.modo_noche == 1) &amp;&amp; (global.bg_level == "sky"))))
        vspeed = -1.8
    else
        vspeed = -3
    y--
    kickme = 0
    alarm[2] = 4
}
else if ((held == 0) &amp;&amp; ((other.vspeed &lt; 0) &amp;&amp; (vspeed &lt; 0)))
    event_user(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mario">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var alturabo;
if (held == 0)
{
    if (object_index == obj_bobomb_hold)
        alturabo = 12
    else
        alturabo = 5
    if ((other.bbox_bottom &lt; ((bbox_top - vspeed) + alturabo)) &amp;&amp; (other.vspeed &gt; 0))
        event_user(1)
    else if (scr_canhold() &amp;&amp; ((!inwall) &amp;&amp; ((inmune == 0) &amp;&amp; ((other.bbox_bottom &gt; (bbox_top + 5)) &amp;&amp; (other.bbox_top &lt; (bbox_bottom - 4))))))
    {
        other.holding = 2
        if ((global.apariencia == 2) &amp;&amp; (other.isduck == 1))
            isduckhold = 1
        if (global.apariencia == 3)
        {
            audio_play_sound(choose(441, 442), 0, false)
            with (other.id)
            {
                triple_jump = 0
                triple_count = 0
            }
        }
        held = 1
        depth = -7
        gravity = 0
        speed = 0
    }
    else if ((inmune == 0) &amp;&amp; ((object_index == obj_bobomb_hold) || ((object_index == obj_galoomba_hold) || (object_index == obj_galoomba_hold2))))
    {
        if (!audio_is_playing(scr_snd_kick()))
            audio_play_sound(scr_snd_kick(), 0, false)
        if (!instance_exists(obj_spinthump))
        {
            with (instance_create(other.x, (other.y + 22), obj_spinthump))
            {
                image_xscale = 0.5
                image_yscale = 0.5
            }
        }
        if ((global.bg_level == "underwater") || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "sky")) || ((global.modo_noche == 1) &amp;&amp; (global.bg_level == "airship"))))
        {
            if ((other.bbox_left + (bbox_right / 2)) &lt; (bbox_left + (bbox_right / 2)))
            {
                hspeed = (other.hspeed + 0.4)
                vspeed = -0.5
                direct = 1
            }
            else if ((other.bbox_left + (bbox_right / 2)) &gt; (bbox_left + (bbox_right / 2)))
            {
                hspeed = (other.hspeed - 0.4)
                vspeed = -0.5
                direct = -1
            }
            else
            {
                hspeed = (other.hspeed + 0.4)
                vspeed = -0.4
                direct = 1
            }
        }
        else if ((other.bbox_left + (bbox_right / 2)) &lt; (bbox_left + (bbox_right / 2)))
        {
            hspeed = (other.hspeed + 1.2)
            vspeed = -1.5
            direct = 1
        }
        else if ((other.bbox_left + (bbox_right / 2)) &gt; (bbox_left + (bbox_right / 2)))
        {
            hspeed = (other.hspeed - 1.2)
            vspeed = -1.5
            direct = -1
        }
        else
        {
            hspeed = (other.hspeed + 1.2)
            vspeed = -1.5
            direct = 1
        }
        inmune = 1
        alarm[3] = 15
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (held == 1)
{
    with (obj_mario)
        holding = 0
    with (obj_warpmario)
        holding = 0
    with (obj_doormario)
        holding = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (swimming == 1)
    vspeed = -1.8
else
    vspeed = -3
if (other.hspeed == 0)
{
    if (((other.bbox_left + other.bbox_right) / 2) &lt; ((bbox_left + bbox_right) / 2))
        hspeed = 0.6
    else if (((other.bbox_left + other.bbox_right) / 2) &gt; ((bbox_left + bbox_right) / 2))
        hspeed = -0.6
}
else if (other.hspeed &gt; 0)
    hspeed = 0.6
else if (other.hspeed &lt; 0)
    hspeed = -0.6
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var semisolid, solidpow, solidthwomp, solidmuncher, solidpinchos, lava_lift, check, conveyor, col_muncher, col_cannon, col_pow, col_pswith, col_bullet, col_pswitch;
if (vspeed &gt;= 0)
{
    semisolid = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_solidtop, 0, 0)
    solidpow = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_block_pow_hold, 0, 0)
    solidthwomp = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_thwomp, 0, 0)
    solidmuncher = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_muncher, 0, 0)
    solidpinchos = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_pinchos, 0, 0)
    if (semisolid &amp;&amp; ((bbox_bottom &lt; (semisolid.yprevious + 5)) &amp;&amp; ((obj_levelmanager.editor == 0) &amp;&amp; (!collision_rectangle((x - 1), bbox_bottom, (x + 1), (bbox_bottom + 4), obj_slopeparent, 1, 0)))))
        y = (semisolid.bbox_top - 16)
    if (solidmuncher &amp;&amp; ((bbox_bottom &lt; (solidmuncher.yprevious + 5)) &amp;&amp; ((obj_levelmanager.editor == 0) &amp;&amp; (!collision_rectangle((x - 1), bbox_bottom, (x + 1), (bbox_bottom + 4), obj_slopeparent, 1, 0)))))
        y = (solidmuncher.bbox_top - 16)
    if (solidpinchos &amp;&amp; ((bbox_bottom &lt; (solidpinchos.yprevious + 5)) &amp;&amp; ((obj_levelmanager.editor == 0) &amp;&amp; (!collision_rectangle((x - 1), bbox_bottom, (x + 1), (bbox_bottom + 4), obj_slopeparent, 1, 0)))))
        y = (solidpinchos.bbox_top - 16)
    if (solidpow &amp;&amp; ((bbox_bottom &lt; (solidpow.yprevious + 5)) &amp;&amp; ((obj_levelmanager.editor == 0) &amp;&amp; (!collision_rectangle((x - 1), bbox_bottom, (x + 1), (bbox_bottom + 4), obj_slopeparent, 1, 0)))))
        y = (solidpow.bbox_top - 16)
    if (solidthwomp &amp;&amp; ((bbox_bottom &lt; (solidthwomp.yprevious + 5)) &amp;&amp; ((obj_levelmanager.editor == 0) &amp;&amp; (!collision_rectangle((x - 1), bbox_bottom, (x + 1), (bbox_bottom + 4), obj_slopeparent, 1, 0)))))
        y = (solidthwomp.bbox_top - 16)
}
if (collision_rectangle((x - 1), bbox_bottom, (x + 1), (bbox_bottom + 4), obj_slopeparent, 1, 0) &amp;&amp; ((!collision_rectangle((x - 1), (bbox_bottom - 4), (x + 1), (bbox_bottom - 4), obj_slopeparent, 1, 0)) &amp;&amp; (vspeed == 0)))
{
    if (!collision_rectangle((x - 1), bbox_bottom, (x + 1), (bbox_bottom + 5), obj_solidtop, 0, 0))
        y += 4
}
if ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_solidtop, 0, 0))) || ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_block_pow_hold, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_block_pow_hold, 0, 0))) || ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_muncher, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_muncher, 0, 0))) || ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_pinchos, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_pinchos, 0, 0))) || ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_thwomp, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_thwomp, 0, 0))) || collision_rectangle((x - 1), bbox_bottom, (x + 1), (bbox_bottom + 4), obj_slopeparent, 1, 0))))))
{
    gravity = 0
    if (bouncy == 1)
    {
        if (vspeed &gt; 2)
            vspeed = 1
        if (vspeed &gt; 0.3)
            vspeed = ((-vspeed) / 2)
        else
        {
            vspeed = 0
            bouncy = 0
        }
    }
    else if (vspeed &gt; 0)
        vspeed = 0
}
else if (modo_lava == 1)
{
    hspeed = 0
    gravity = 0.02
    if (vspeed &gt; 0.03)
        vspeed = 0.03
}
else if (!swimming)
{
    gravity = 0.15
    if (vspeed &gt; 4)
        vspeed = 4
}
else if (swimming == 1)
{
    gravity = 0.03
    if (vspeed &gt; 0.5)
        vspeed = 0.5
}
if ((vspeed &lt; 0) &amp;&amp; (collision_rectangle((bbox_left + 1), (bbox_top - 1), (bbox_right - 1), bbox_top, obj_solid, 1, 0) || (collision_rectangle((bbox_left + 1), (bbox_top - 1), (bbox_right - 1), bbox_top, obj_onewaygate_bottom, 1, 0) || (collision_rectangle((bbox_left + 1), (bbox_top - 1), (bbox_right - 1), bbox_top, obj_pinchos, 1, 0) || (collision_rectangle((bbox_left + 1), (bbox_top - 1), (bbox_right - 1), bbox_top, obj_muncher, 1, 0) || (collision_rectangle((bbox_left + 1), (bbox_top - 1), (bbox_right - 1), bbox_top, obj_cannon, 1, 0) || (collision_rectangle((bbox_left + 1), (bbox_top - 1), (bbox_right - 1), bbox_top, obj_bullebill_base, 1, 0) || collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_thwomp, 1, 0))))))))
{
    while collision_rectangle((bbox_left + 1), bbox_top, (bbox_right - 1), bbox_top, obj_solid, 1, 0)
        y++
    vspeed = 0
    gravity = 0
}
lava_lift = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + 2), obj_solidtop, 0, 0)
if (lava_lift &amp;&amp; ((y &lt; (lava_lift.y - 12)) &amp;&amp; (vspeed &gt;= 0)))
{
    check = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0)
    if (check &amp;&amp; (check != lava_lift))
        exit
    if (lava_lift.vspeed == 0)
        y = ceil((lava_lift.bbox_top - 16))
    else
        y = ceil((lava_lift.bbox_top - (16 - vspeed)))
    if (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_solid, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_pinchos, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_cannon, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_bullebill_base, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_muncher, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_solid, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_pinchos, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_cannon, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_bullebill_base, 0, 0))) || ((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_muncher, 0, 0))))))))))))
        x += lava_lift.hspeed
    if (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_solid, 0, 0) || (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_onewaygate_left, 0, 0) || (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_pinchos, 0, 0) || (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_muncher, 0, 0) || (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_cannon, 0, 0) || collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_bullebill_base, 0, 0))))))
        x--
    else if (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_solid, 0, 0) || (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_onewaygate_right, 0, 0) || (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_pinchos, 0, 0) || (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_muncher, 0, 0) || (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_cannon, 0, 0) || collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_bullebill_base, 0, 0))))))
        x++
}
conveyor = collision_rectangle(bbox_left, bbox_top, bbox_right, (bbox_bottom + 1), obj_cinta_parent, 0, 0)
if (conveyor &amp;&amp; (conveyor.image_speed != 0))
{
    if (conveyor.image_speed &gt; 0)
    {
        col_muncher = collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_muncher, 1, 0)
        col_cannon = collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_cannon, 1, 0)
        col_pow = collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_block_pow_hold, 1, 0)
        col_pswith = collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_pswitch, 1, 0)
        col_bullet = collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 1, 0)
        if (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 1, 0) &amp;&amp; (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_pinchos, 1, 0) &amp;&amp; (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 1, 0) &amp;&amp; (col_muncher &amp;&amp; ((col_muncher.id != id) &amp;&amp; (col_cannon &amp;&amp; ((col_cannon.id != id) &amp;&amp; (col_pow &amp;&amp; ((col_pow.id != id) &amp;&amp; (col_pswith &amp;&amp; ((col_pswith.id != id) &amp;&amp; (col_bullet &amp;&amp; (col_bullet.id != id)))))))))))))
        {
        }
        else
            x -= conveyor.image_speed
    }
    else if (conveyor.image_speed &lt; 0)
    {
        col_muncher = collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_muncher, 1, 0)
        col_cannon = collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_cannon, 1, 0)
        col_pow = collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_block_pow_hold, 1, 0)
        col_pswitch = collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_pswitch, 1, 0)
        col_bullet = collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
        if (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solid, 1, 0) &amp;&amp; (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_pinchos, 1, 0) &amp;&amp; (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 1, 0) &amp;&amp; (col_muncher &amp;&amp; ((col_muncher.id != id) &amp;&amp; (col_cannon &amp;&amp; ((col_cannon.id != id) &amp;&amp; (col_pow &amp;&amp; ((col_pow.id != id) &amp;&amp; (col_pswitch &amp;&amp; ((col_pswitch.id != id) &amp;&amp; (col_bullet &amp;&amp; (col_bullet.id != id)))))))))))))
        {
        }
        else
            x -= conveyor.image_speed
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var col_one_left, col_one_right;
if (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solid, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_helmet, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_helmet, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_muncher, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_muncher, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_pinchos, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_pinchos, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_block_pow_hold, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_block_pow_hold, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_thwomp, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_thwomp, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_cannon, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_cannon, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)) || ((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)))))))))))))))))))
{
    col_one_left = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)
    col_one_right = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)
    if ((hspeed &gt; 0) &amp;&amp; col_one_left)
    {
        if (!audio_is_playing(snd_oneway))
            audio_play_sound(snd_oneway, 0, false)
        with (col_one_left)
            rot = 1
    }
    if ((hspeed &lt; 0) &amp;&amp; col_one_right)
    {
        if (!audio_is_playing(snd_oneway))
            audio_play_sound(snd_oneway, 0, false)
        with (col_one_right)
            rot = 1
    }
    direct = (-direct)
    hspeed = 0
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_solid, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solid, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_helmet, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_helmet, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_block_pow_hold, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_block_pow_hold, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_muncher, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_muncher, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_pinchos, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_pinchos, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_cannon, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_cannon, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_onewaygate_left, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 1, 0)
        x++
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check(global.abajo)
{
    if (collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_solid, 0, 0) || (collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_bullebill_base, 0, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_muncher, 0, 0)))
    {
        inwall = 1
        hspeed = 0
    }
    if (!collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_slopeparent, 1, 0))
    {
        if (obj_mario.hspeed == 0)
            hspeed = (0.7 * obj_mario.direct)
        else
            hspeed = (obj_mario.hspeed / 2)
    }
    else
        vspeed = 0.1
    inmune = 1
    alarm[3] = 15
    obj_mario.isduckhold = 0
}
else if (keyboard_check(global.arriba) &amp;&amp; (global.apariencia == 2))
{
    audio_play_sound(scr_snd_kick(), 0, false)
    with (obj_mario)
        event_user(7)
    obj_mario.stompstyle = 0
    with (instance_create((x + 8), (y - 2), obj_smoke))
        sprite_index = spr_spinthump
    if (obj_mario.hspeed == 0)
        hspeed = 0
    else
        hspeed = (obj_mario.direct / 2)
    if ((global.bg_level == "underwater") || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "sky")) || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "airship")) || (instance_exists(obj_lava_water) &amp;&amp; ((y &gt; (obj_lava_water.y + 16)) &amp;&amp; ((global.bg_level == "forest") &amp;&amp; (global.modo_noche == 0)))))))
    {
        vspeed = -3
        swimming = 1
    }
    else
        vspeed = -6.125
    if (collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_solid, 0, 0) || (collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_bullebill_base, 0, 0) || collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_muncher, 0, 0)))
        inwall = 1
    inmune = 1
    alarm[3] = 15
    obj_mario.isduckhold = 0
}
else
{
    if (global.apariencia == 3)
        audio_play_sound(choose(443, 444, 443), 0, false)
    else
    {
        audio_play_sound(scr_snd_kick(), 0, false)
        with (instance_create((x + 8), (y - 2), obj_smoke))
            sprite_index = spr_spinthump
    }
    with (obj_mario)
        event_user(7)
    obj_mario.stompstyle = 0
    y += 1
    bouncy = 1
    if ((!collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_solid, 0, 0)) &amp;&amp; ((!collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_bullebill_base, 0, 0)) &amp;&amp; ((!collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_muncher, 0, 0)) &amp;&amp; ((!collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_pinchos, 0, 0)) &amp;&amp; (!collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_cannon, 0, 0))))))
    {
        if ((global.bg_level == "underwater") || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "sky")) || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "airship")) || (instance_exists(obj_lava_water) &amp;&amp; ((y &gt; (obj_lava_water.y + 16)) &amp;&amp; ((global.bg_level == "forest") &amp;&amp; (global.modo_noche == 0)))))))
        {
            vspeed = -1
            swimming = 1
        }
        else
            vspeed = -1.5
        if (!collision_rectangle(x, bbox_top, x, (bbox_bottom - 4), obj_slopeparent, 1, 0))
        {
            if ((global.bg_level == "underwater") || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "sky")) || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "airship")) || (instance_exists(obj_lava_water) &amp;&amp; ((y &gt; (obj_lava_water.y + 16)) &amp;&amp; ((global.bg_level == "forest") &amp;&amp; (global.modo_noche == 0)))))))
                hspeed = ((1 + abs(obj_mario.hspeed)) * sign(obj_mario.direct))
            else
                hspeed = ((3 + abs(obj_mario.hspeed)) * sign(obj_mario.direct))
        }
        else
            vspeed = 0.1
    }
    else
        inwall = 1
    inmune = 1
    alarm[3] = 15
    obj_mario.isduckhold = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, round(x), y, 1, 1, 0, c_white, 1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
