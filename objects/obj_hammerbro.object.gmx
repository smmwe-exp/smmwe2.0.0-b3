<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hammerbro</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.apariencia == 0)
{
    s_hammerbro = 407
    s_hammerbro_jump = 1124
    s_hammerbro_throw = 408
    sprite_wings = 369
}
else if (global.apariencia == 1)
{
    s_hammerbro = 1123
    s_hammerbro_jump = 1124
    s_hammerbro_throw = 1125
    sprite_wings = 1061
}
else if (global.apariencia == 2)
{
    s_hammerbro = 1935
    s_hammerbro_jump = 1936
    s_hammerbro_throw = 1937
    sprite_wings = 1926
}
else
{
    s_hammerbro = 407
    s_hammerbro_jump = 1124
    s_hammerbro_throw = 408
    sprite_wings = 369
}
hardness = 0
stomp = 0
edible = 0
wings = 0
wings_anim = 0
paracaidas = 0
apilar = 0
dead_h = 0
innave = 0
direct = 1
prev_hspeed = 0
swimming = 0
jump_high = -6
image_speed = 0.125
throughsolid = 0
jump_start = y
hammers = (1 + random(round(3)))
throw = 0
throw_lanzar = 0
alarm[10] = 2
alarm[1] = 360
alarm[2] = 17
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (wings == 1)
{
    if (direct == 1)
    {
        with (instance_create((x - 9), (y + 9), obj_wings_dead))
            direct = 1
    }
    else
    {
        with (instance_create((x + 9), (y + 9), obj_wings_dead))
            direct = -1
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hspeed == 0)
{
    if (paracaidas == 1)
        hspeed = -0.5
    else if ((!instance_exists(obj_mario)) || (obj_mario.x &lt; x))
    {
        if ((global.bg_level == "underwater") || (((global.bg_level == "sky") &amp;&amp; (global.modo_noche == 1)) || ((global.bg_level == "airship") &amp;&amp; (global.modo_noche == 1))))
            hspeed = -0.3
        else
            hspeed = -0.4
    }
    else if ((global.bg_level == "underwater") || (((global.bg_level == "sky") &amp;&amp; (global.modo_noche == 1)) || ((global.bg_level == "airship") &amp;&amp; (global.modo_noche == 1))))
        hspeed = 0.3
    else
        hspeed = 0.4
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>throw = 0
hspeed = prev_hspeed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>throughsolid = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>throughsolid = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_mario)
{
    if (obj_mario.x &gt; x)
    {
        with (instance_create((x - 5), (y - 8), obj_brohammer))
        {
            hspeed = 1.5
            direct = 1
        }
    }
    else if (obj_mario.x &lt; x)
    {
        with (instance_create((x + 5), (y - 8), obj_brohammer))
        {
            hspeed = -1.5
            direct = -1
        }
    }
}
else
{
    with (instance_create((x + 5), (y - 8), obj_brohammer))
    {
        hspeed = -1.5
        direct = -1
    }
}
throw = 2
alarm[6] = 5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hammers &gt; 0)
{
    throw = 1
    hammers--
    prev_hspeed = hspeed
    hspeed = 0
    alarm[3] = 10
    alarm[2] = 20
}
else
{
    throw = 0
    hammers = (0 + random(round(3)))
    hspeed = prev_hspeed
    alarm[2] = 80
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (vspeed == 0)
{
    if (wings == 1)
    {
        if (swimming == 1)
        {
            altura_max = -4
            altura_min = -1.5
        }
        else
        {
            altura_max = -8
            altura_min = -4.5
        }
    }
    else if (swimming == 1)
    {
        altura_max = -3
        altura_min = -1
    }
    else
    {
        altura_max = -6
        altura_min = -2.5
    }
    if (collision_rectangle(bbox_left, (bbox_top - 40), bbox_right, (bbox_top - 40), obj_blockparent, 0, 0) &amp;&amp; collision_rectangle(bbox_left, (bbox_bottom + 8), bbox_right, (bbox_bottom + 8), obj_blockparent, 0, 0))
    {
        if ((floor(random(50)) &lt; 25) &amp;&amp; (((y + 32) &lt; room_height) &amp;&amp; (((y + 48) &lt; room_height) &amp;&amp; ((y + 64) &lt; room_height))))
        {
            vspeed = altura_max
            alarm[4] = 2
            alarm[5] = 16
        }
        else if (((y + 16) &lt; room_height) &amp;&amp; (((y + 32) &lt; room_height) &amp;&amp; (((y + 48) &lt; room_height) &amp;&amp; ((y + 64) &lt; room_height))))
        {
            vspeed = altura_min
            alarm[4] = 2
            alarm[5] = 35
        }
        else
        {
            vspeed = altura_max
            alarm[4] = 2
            alarm[5] = 16
        }
    }
    else if (collision_rectangle(bbox_left, (bbox_top - 40), bbox_right, (bbox_top - 40), obj_blockparent, 0, 0) &amp;&amp; (((y + 16) &lt; room_height) &amp;&amp; (((y + 32) &lt; room_height) &amp;&amp; (((y + 48) &lt; room_height) &amp;&amp; ((y + 64) &lt; room_height)))))
    {
        vspeed = altura_max
        alarm[4] = 2
        alarm[5] = 16
    }
    else if (collision_rectangle(bbox_left, (bbox_bottom + 8), bbox_right, (bbox_bottom + 8), obj_blockparent, 0, 0) &amp;&amp; (((y + 16) &lt; room_height) &amp;&amp; (((y + 32) &lt; room_height) &amp;&amp; (((y + 48) &lt; room_height) &amp;&amp; ((y + 64) &lt; room_height)))))
    {
        vspeed = altura_min
        alarm[4] = 2
        alarm[5] = 30
    }
    else
    {
        vspeed = altura_max
        alarm[4] = 2
        alarm[5] = 35
    }
    y--
    if (swimming == 1)
        gravity = 0.15
    else
        gravity = 0.25
    alarm[1] = 360
}
else
    alarm[1] = 360
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(obj_deadmario))
{
    if (gravity &gt; 0)
    {
        if throw
        {
            sprite_index = s_hammerbro_throw
            image_speed = 0
            image_index = (throw - 1)
        }
        else if ((throw == 0) &amp;&amp; (global.apariencia == 2))
        {
            sprite_index = s_hammerbro_jump
            image_speed = 0
        }
        else
        {
            sprite_index = s_hammerbro
            image_speed = 0.125
        }
    }
    else
    {
        image_speed = 0.125
        if (throw == 0)
            sprite_index = s_hammerbro
        else if throw
        {
            sprite_index = s_hammerbro_throw
            image_index = (throw - 1)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((global.bg_level == "underwater") || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "airship")) || (((global.modo_noche == 1) &amp;&amp; (global.bg_level == "sky")) || (instance_exists(obj_lava_water) &amp;&amp; (((y + 8) &gt; obj_lava_water.y) &amp;&amp; ((global.bg_level == "forest") &amp;&amp; (global.modo_noche == 0)))))))
    swimming = 1
else
    swimming = 0
if ((vspeed == 0) &amp;&amp; ((hspeed &lt;= 0) &amp;&amp; ((x &lt;= (xstart - 16)) &amp;&amp; (paracaidas == 0))))
{
    if (swimming == 1)
        hspeed = 0.2
    else
        hspeed = 0.4
}
else if ((vspeed == 0) &amp;&amp; ((hspeed &gt;= 0) &amp;&amp; ((x &gt;= (xstart + 16)) &amp;&amp; (paracaidas == 0))))
{
    if (swimming == 1)
        hspeed = -0.2
    else
        hspeed = -0.4
}
if ((global.bg_level == "underwater") || ((global.bg_level == "sky") &amp;&amp; (global.modo_noche == 1)))
{
    if (hspeed &gt; 0.3)
    {
        hspeed -= 0.08
        if (hspeed &lt;= 0.3)
            hspeed = 0.3
    }
    else if (hspeed &lt; -0.3)
    {
        hspeed += 0.08
        if (hspeed &gt;= -0.3)
            hspeed = -0.3
    }
}
else if (hspeed &gt; 0.4)
{
    hspeed -= 0.08
    if (hspeed &lt;= 0.4)
        hspeed = 0.4
}
else if (hspeed &lt; -0.4)
{
    hspeed += 0.08
    if (hspeed &gt;= -0.4)
        hspeed = -0.4
}
if (throughsolid == 0)
{
    event_user(3)
    event_user(4)
}
else if (swimming == 1)
{
    gravity = 0.15
    if (vspeed &gt; 0.4)
    {
        vspeed = 0.4
        gravity = 0
    }
}
else
{
    gravity = 0.25
    if (vspeed &gt; 4)
    {
        vspeed = 4
        gravity = 0
    }
}
if ((!instance_exists(obj_mario)) || (obj_mario.x &lt; x))
    direct = -1
else
    direct = 1
if ((wings == 1) &amp;&amp; (!instance_exists(obj_deadmario)))
{
    if (gravity &gt; 0)
        wings_anim += 0.18
    else
        wings_anim += 0.12
}
if (paracaidas == 1)
{
    direct = -1
    if (x &gt; (xstart + 16))
    {
        if (hspeed &lt; -0.5)
            hspeed = -0.5
        else
            hspeed -= 0.015
    }
    else if (x &lt; (xstart - 16))
    {
        if (hspeed &gt; 0.5)
            hspeed = 0.5
        else
            hspeed += 0.015
    }
    if (gravity == 0)
    {
        instance_create((x + (3 * direct)), y, obj_paracaidas_go)
        paracaidas = 0
        hspeed = 0
        alarm[10] = 10
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var pow_right, pow_left, col_one_left, col_one_right;
pow_right = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_block_pow_hold, 0, 0)
pow_left = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_block_pow_hold, 0, 0)
if (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_solid, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_enemyparent_held, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_enemyparent_held, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_muncher, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_muncher, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_pswitch, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_pswitch, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_pinchos, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_pinchos, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; (pow_right &amp;&amp; (pow_right.held == 0))) || (((hspeed &lt; 0) &amp;&amp; (pow_left &amp;&amp; (pow_left.held == 0))) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_cannon, 0, 0)) || (((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_cannon, 0, 0)) || (((hspeed &gt; 0) &amp;&amp; collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)) || ((hspeed &lt; 0) &amp;&amp; collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)))))))))))))))))))
{
    col_one_left = collision_rectangle(bbox_right, (bbox_top + 1), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 0, 0)
    col_one_right = collision_rectangle((bbox_left - 1), (bbox_top + 1), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 0, 0)
    if ((hspeed &gt; 0) &amp;&amp; col_one_left)
    {
        if (!audio_is_playing(snd_oneway))
            audio_play_sound(snd_oneway, 0, false)
        with (col_one_left)
            rot = 1
    }
    if ((hspeed &lt; 0) &amp;&amp; col_one_right)
    {
        if (!audio_is_playing(snd_oneway))
            audio_play_sound(snd_oneway, 0, false)
        with (col_one_right)
            rot = 1
    }
    hspeed = (-hspeed)
    prev_hspeed = hspeed
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_solid, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solid, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_block_pow_hold, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_block_pow_hold, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_muncher, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_muncher, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_pinchos, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_pinchos, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 1, 0)
        x++
    while collision_rectangle(bbox_right, (bbox_top + 4), bbox_right, (bbox_bottom - 4), obj_onewaygate_left, 1, 0)
        x--
    while collision_rectangle(bbox_left, (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 1, 0)
        x++
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (wings == 0)
    event_user(0)
else
{
    with (instance_create((x + (9 * direct)), (y + 9), obj_wings_dead))
        direct = other.direct
    wings = 0
    alarm[10] = 2
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>imdead = instance_create(x, (y + 3), obj_enemy_dead)
imdead.girar = 1
if (global.apariencia == 0)
    imdead.sprite_index = spr_SMB_hammerbro_deads
else if (global.apariencia == 1)
    imdead.sprite_index = spr_SMB3_hammerbro_deads
else if (global.apariencia == 2)
    imdead.sprite_index = spr_hammerbro_deads
imdead.direct = direct
if (dead_h == 0)
{
    if (other.hspeed == 0)
    {
        if ((other.bbox_left + (bbox_right / 2)) &lt; (bbox_left + (bbox_right / 2)))
            imdead.hspeed = 1
        else if ((other.bbox_left + (bbox_right / 2)) &gt; (bbox_left + (bbox_right / 2)))
            imdead.hspeed = -1
    }
    else if (other.hspeed &gt; 0)
        imdead.hspeed = 1
    else if (other.hspeed &lt; 0)
        imdead.hspeed = -1
}
else
{
    imdead.hspeed = 0
    with (instance_create(imdead.x, (imdead.y - 5), obj_smoke))
        sprite_index = spr_spinthump
}
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (paracaidas == 1)
    draw_sprite_ext(spr_paracaidas, global.apariencia, (x - (3 * direct)), y, 1, 1, image_angle, c_white, 1)
draw_sprite_ext(sprite_index, image_index, round(x), y, direct, image_yscale, 0, c_white, 1)
if (wings == 1)
{
    if (direct == 1)
        draw_sprite_ext(sprite_wings, wings_anim, (x - 12), (y - 22), direct, 1, 0, c_white, 1)
    else
        draw_sprite_ext(sprite_wings, wings_anim, (x + 12), (y - 22), direct, 1, 0, c_white, 1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>-8,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
