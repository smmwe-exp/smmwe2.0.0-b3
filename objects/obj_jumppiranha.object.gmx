<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_jumppiranha_falll</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.apariencia == 0)
{
    sprite_index = spr_SMB_pplant
    image_speed = 0.125
    sprite_wings = 370
}
else if (global.apariencia == 1)
{
    sprite_index = spr_SMB3_pplant
    image_speed = 0.125
    sprite_wings = 1064
}
else if (global.apariencia == 2)
{
    image_speed = 0.55
    sprite_wings = 1931
}
else if (global.apariencia == 3)
{
    sprite_index = spr_NSMBU_pplant
    image_speed = 0.3
    sprite_wings = 1931
}
else
{
    sprite_index = spr_SMB_pplant
    image_speed = 0.125
    sprite_wings = 370
}
hardness = 0
stomp = 1
edible = 0
direct = 1
wings = 0
wings_anim = 0
paracaidas = 0
jump_plant = 0
modo_vuelo = 0
y_start_vuelo = y
dead_h = 0
modo_lava = 0
apilar = 0
big = 0
fire = 0
ready = 0
ready2 = 0
swimming = 0
alarm[0] = 180
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (wings == 1)
{
    with (instance_create((x + 17), (y + 8), obj_wings_dead))
        direct = -1
    with (instance_create((x - 3), (y + 8), obj_wings_dead))
    {
        sprite_index = spr_wings_dead2
        direct = -1
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jump_plant = 0
modo_vuelo = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.apariencia == 2)
{
    if (instance_exists(obj_mario) &amp;&amp; (gravity == 0))
    {
        if (swimming == 1)
            vspeed = -2
        else
            vspeed = -2.5
        sprite_index = spr_jumppiranha
        image_speed = 0.15
    }
    else
    {
        alarm[0] = 1
        exit
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspeed = (max(0, (abs(hspeed) - 0.15)) * sign(hspeed))
if (abs(hspeed) &lt; 0.15)
    hspeed = 0
if ((global.bg_level == "underwater") || (((global.bg_level == "sky") &amp;&amp; (global.modo_noche == 1)) || (((global.bg_level == "airship") &amp;&amp; (global.modo_noche == 1)) || (instance_exists(obj_lava_water) &amp;&amp; (((y + 8) &gt; obj_lava_water.y) &amp;&amp; ((global.bg_level == "forest") &amp;&amp; (global.modo_noche == 0)))))))
    swimming = 1
else
    swimming = 0
if (instance_exists(obj_lava_water) &amp;&amp; (((y + 8) &gt;= obj_lava_water.y) &amp;&amp; (global.bg_level == "castle")))
{
    if (global.apariencia != 0)
    {
        if (global.apariencia != 0)
        {
            with (instance_create((x + 8), (y - 8), obj_smoke))
            {
                if (global.apariencia == 1)
                    sprite_index = spr_SMB3_splash_lava
                else if (global.apariencia == 2)
                    sprite_index = spr_splash_lava
                depth = -10
            }
        }
    }
    with (instance_create(x, y, obj_enemyparent_lava))
    {
        sprite_index = other.sprite_index
        direct = other.direct
    }
    instance_destroy()
}
if (instance_exists(obj_lava_water) &amp;&amp; (((y + 8) &gt; obj_lava_water.y) &amp;&amp; ((global.bg_level == "forest") &amp;&amp; (global.modo_noche == 1))))
{
    if (global.apariencia != 0)
    {
        with (instance_create((x + 8), (y - 8), obj_smoke))
        {
            if (global.apariencia == 1)
                sprite_index = spr_SMB3_splash_lava_purple
            else if (global.apariencia == 2)
                sprite_index = spr_splash_lava_purple
            depth = -10
        }
    }
    with (instance_create(x, y, obj_enemyparent_lava))
    {
        sprite_index = other.sprite_index
        direct = other.direct
    }
    instance_destroy()
}
if (wings == 1)
{
    if (modo_vuelo == 1)
        wings_anim += 0.18
    else
        wings_anim += 0.12
    if ((jump_plant == 1) &amp;&amp; (place_free(x, (y + 1)) &amp;&amp; ((vspeed &gt; 0) &amp;&amp; (modo_vuelo == 0))))
    {
        modo_vuelo = 1
        y_start_vuelo = y
        alarm[1] = 180
    }
}
event_user(4)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var solidtop, solidpow, solidthwomp, solidpinchos, lava_lift, check, conveyor;
if ((global.apariencia == 0) || ((global.apariencia == 1) || (global.apariencia == 4)))
    event_inherited()
else if (global.apariencia == 2)
{
    if (vspeed &gt; 0)
    {
        solidtop = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_solidtop, 0, 0)
        solidpow = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_block_pow_hold, 0, 0)
        solidthwomp = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_thwomp, 0, 0)
        solidpinchos = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + vspeed), obj_pinchos, 0, 0)
        if (solidtop &amp;&amp; (bbox_bottom &lt; (solidtop.yprevious + 5)))
            y = (solidtop.y + floor(((y - bbox_bottom) - 0.9)))
        if (solidpow &amp;&amp; (bbox_bottom &lt; (solidpow.yprevious + 5)))
            y = (solidpow.y + floor(((y - bbox_bottom) - 0.9)))
        if (solidpinchos &amp;&amp; (bbox_bottom &lt; (solidpinchos.yprevious + 5)))
            y = (solidpinchos.y + floor(((y - bbox_bottom) - 0.9)))
        if (solidthwomp &amp;&amp; (bbox_bottom &lt; (solidthwomp.yprevious + 5)))
            y = (solidthwomp.y + floor(((y - bbox_bottom) - 16)))
        if (vspeed &gt; 4)
            vspeed = 4
    }
    if (collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + 4), obj_slopeparent, 1, 0) &amp;&amp; ((!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_slopeparent, 1, 0)) &amp;&amp; (vspeed == 0)))
        y += 4
    if (collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, bbox_bottom, obj_slopeparent, 1, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 8), bbox_right, (bbox_bottom - 8), obj_slopeparent, 1, 0)))
    {
        while collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, bbox_bottom, obj_slopeparent, 1, 0)
            y--
    }
    if ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_solidtop, 0, 0))) || ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_block_pow_hold, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_block_pow_hold, 0, 0))) || ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_pinchos, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_pinchos, 0, 0))) || ((collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_thwomp, 0, 0) &amp;&amp; (!collision_rectangle(bbox_left, (bbox_bottom - 4), bbox_right, (bbox_bottom - 4), obj_thwomp, 0, 0))) || collision_rectangle(bbox_left, (bbox_bottom + 1), bbox_right, (bbox_bottom + 1), obj_slopeparent, 1, 0)))))
    {
        gravity = 0
        if (vspeed &gt; 0)
        {
            vspeed = 0
            if (global.apariencia == 2)
            {
                sprite_index = spr_jumppiranha_falll
                image_speed = 0.55
                ystart = y
                alarm[0] = 180
                ready = 0
                ready2 = 0
            }
        }
    }
    else if (!swimming)
    {
        gravity = 0.03
        if (vspeed &gt; 0.5)
            vspeed = 0.5
    }
    else
    {
        gravity = 0.02
        if (vspeed &gt; 0.3)
            vspeed = 0.3
    }
    if ((vspeed &lt; 0) &amp;&amp; (collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_solid, 1, 0) || (collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_pinchos, 1, 0) || (collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_muncher, 1, 0) || (collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_onewaygate_bottom, 1, 0) || collision_rectangle((bbox_left + 1), ((bbox_top + vspeed) - 1), (bbox_right - 1), (bbox_top - 1), obj_thwomp, 1, 0))))))
    {
        while collision_rectangle((bbox_left + 1), bbox_top, (bbox_right - 1), bbox_top, obj_solid, 1, 0)
            y++
        vspeed = 0
    }
    if ((bbox_top &gt; room_height) &amp;&amp; (obj_levelmanager.editor == 0))
        instance_destroy()
    lava_lift = collision_rectangle(bbox_left, bbox_bottom, bbox_right, (bbox_bottom + 4), obj_solidtop, 0, 0)
    if (lava_lift &amp;&amp; (vspeed &gt;= 0))
    {
        check = collision_rectangle(bbox_left, (bbox_bottom - 1), bbox_right, (bbox_bottom + 1), obj_solidtop, 0, 0)
        if (check &amp;&amp; (check != lava_lift))
            exit
        if (lava_lift.vspeed == 0)
            y = (lava_lift.y + floor(((y - bbox_bottom) - 0.9)))
        else
            y = ((lava_lift.y + floor(((y - bbox_bottom) - 0.9))) - vspeed)
        if (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_solid, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_pinchos, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_cannon, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_bullebill_base, 0, 0))) || (((lava_lift.hspeed &gt; 0) &amp;&amp; (!collision_rectangle((bbox_right + lava_lift.hspeed), bbox_top, (bbox_right + lava_lift.hspeed), (bbox_bottom - 1), obj_muncher, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_solid, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_pinchos, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_cannon, 0, 0))) || (((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_bullebill_base, 0, 0))) || ((lava_lift.hspeed &lt; 0) &amp;&amp; (!collision_rectangle((bbox_left + lava_lift.hspeed), bbox_top, (bbox_left + lava_lift.hspeed), (bbox_bottom - 1), obj_muncher, 0, 0))))))))))))
            x += lava_lift.hspeed
        if (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_solid, 0, 0) || (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_onewaygate_left, 0, 0) || (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_pinchos, 0, 0) || (collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_muncher, 0, 0) || collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 1), obj_bullebill_base, 0, 0)))))
            x--
        else if (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_solid, 0, 0) || (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_onewaygate_right, 0, 0) || (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_pinchos, 0, 0) || (collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_muncher, 0, 0) || collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 1), obj_bullebill_base, 0, 0)))))
            x++
    }
    conveyor = collision_rectangle(bbox_left, bbox_top, bbox_right, (bbox_bottom + 1), obj_cinta_parent, 0, 0)
    if (conveyor &amp;&amp; (conveyor.image_speed != 0))
    {
        if (conveyor.image_speed &gt; 0)
        {
            if ((!collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_solid, 1, 0)) &amp;&amp; ((!collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_pinchos, 1, 0)) &amp;&amp; ((!collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_muncher, 1, 0)) &amp;&amp; ((!collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_cannon, 1, 0)) &amp;&amp; ((!collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_block_pow_hold, 1, 0)) &amp;&amp; ((!collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_pswitch, 1, 0)) &amp;&amp; ((!collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_bullebill_base, 1, 0)) &amp;&amp; (!collision_rectangle(bbox_right, (bbox_top + 4), (bbox_right + 1), (bbox_bottom - 4), obj_onewaygate_left, 1, 0)))))))))
                x -= conveyor.image_speed
        }
        else if (conveyor.image_speed &lt; 0)
        {
            if ((!collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_solid, 1, 0)) &amp;&amp; ((!collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_pinchos, 1, 0)) &amp;&amp; ((!collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_muncher, 1, 0)) &amp;&amp; ((!collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_cannon, 1, 0)) &amp;&amp; ((!collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_block_pow_hold, 1, 0)) &amp;&amp; ((!collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_pswitch, 1, 0)) &amp;&amp; ((!collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_bullebill_base, 1, 0)) &amp;&amp; (!collision_rectangle((bbox_left - 1), (bbox_top + 4), bbox_left, (bbox_bottom - 4), obj_onewaygate_right, 1, 0)))))))))
                x -= conveyor.image_speed
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.apariencia == 0)
{
    imdead = instance_create((x + 8), (y + 4), obj_enemy_dead)
    imdead.sprite_index = spr_SMB_pplant_deads
}
else if (global.apariencia == 1)
{
    imdead = instance_create((x + 8), (y + 4), obj_enemy_dead)
    imdead.sprite_index = spr_SMB3_pplant_deads
}
else if (global.apariencia == 2)
{
    imdead = instance_create((x + 8), y, obj_enemy_dead)
    imdead.sprite_index = spr_jumppiranha_deads
}
else if (global.apariencia == 3)
{
    imdead = instance_create((x + 8), y, obj_enemy_dead)
    imdead.sprite_index = spr_NSMBU_pplant_deads
}
else
{
    imdead = instance_create((x + 8), (y + 4), obj_enemy_dead)
    imdead.sprite_index = spr_SMB_pplant_deads
}
imdead.girar = 1
imdead.image_xscale = direct
if (dead_h == 0)
{
    if (other.hspeed == 0)
    {
        if ((other.bbox_left + (bbox_right / 2)) &lt; (bbox_left + (bbox_right / 2)))
            imdead.hspeed = 1
        else if ((other.bbox_left + (bbox_right / 2)) &gt; (bbox_left + (bbox_right / 2)))
            imdead.hspeed = -1
    }
    if (other.hspeed &gt; 0)
        imdead.hspeed = 1
    else if (other.hspeed &lt; 0)
        imdead.hspeed = -1
}
else
{
    imdead.hspeed = 0
    with (instance_create(imdead.x, (imdead.y - 5), obj_smoke))
        sprite_index = spr_spinthump
}
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, x, y, 1, 1, 0, c_white, 1)
if (wings == 1)
    draw_sprite_ext(sprite_wings, wings_anim, (x + 7), y, 1, 1, image_angle, c_white, 1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>7,-14</point>
    <point>10,10</point>
  </PhysicsShapePoints>
</object>
